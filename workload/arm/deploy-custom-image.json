{
  "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.11.1.770",
      "templateHash": "673231498146923754"
    }
  },
  "parameters": {
    "sharedServicesLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Optional. Location where to deploy compute services. (Default: eastus)"
      }
    },
    "sharedServicesSubId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Required. AVD shared services subscription ID, multiple subscriptions scenario."
      }
    },
    "aibLocation": {
      "type": "string",
      "defaultValue": "eastus",
      "metadata": {
        "description": "Optional. Azure Image Builder location. (Default: eastus)"
      },
      "allowedValues": [
        "australiaeast",
        "australiasoutheast",
        "brazilsouth",
        "canadacentral",
        "centralindia",
        "centralus",
        "eastasia",
        "eastus",
        "eastus2",
        "francecentral",
        "germanywestcentral",
        "japaneast",
        "jioindiawest",
        "koreacentral",
        "northcentralus",
        "northeurope",
        "norwayeast",
        "qatarcentral",
        "southafricanorth",
        "southcentralus",
        "southeastasia",
        "switzerlandnorth",
        "uaenorth",
        "uksouth",
        "ukwest",
        "usgovarizona",
        "usgovvirginia",
        "westcentralus",
        "westeurope",
        "westus",
        "westus2",
        "westus3"
      ]
    },
    "buildSchedule": {
      "type": "string",
      "defaultValue": "Recurring",
      "metadata": {
        "description": "Optional. Determine whether to build the image template one time or check daily for a new marketplace image and auto build when found. (Default: Recurring)"
      },
      "allowedValues": [
        "OneTime",
        "Recurring"
      ]
    },
    "operatingSystemImage": {
      "type": "string",
      "defaultValue": "win10_21h2",
      "metadata": {
        "description": "Optional. AVD OS image source. (Default: win10-21h2)"
      },
      "allowedValues": [
        "win10_21h2_office",
        "win10_21h2",
        "win11_21h2_office",
        "win11_21h2"
      ]
    },
    "sharedImage": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Optional. Set to deploy image from Azure Compute Gallery. (Default: true)"
      }
    },
    "useExistingVirtualNetwork": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Set to deploy Azure Image Builder to existing virtual network. (Default: false)"
      }
    },
    "existingLogAnalyticsWorkspaceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Existing Azure log analytics workspace resource ID to capture build logs. (Default: )"
      }
    },
    "existingVirtualNetworkResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Input the resource ID for the existing virtual network that the network interfaces on the build virtual machines will join. (Default: \"\")"
      }
    },
    "subnetName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Input the name of the subnet for the existing virtual network that the network interfaces on the build virtual machines will join. (Default: \"\")"
      }
    },
    "rdpShortPath": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Determine whether to enable RDP Short Path for Managed Networks. (Default: false)"
      }
    },
    "screenCaptureProtection": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Determine whether to enable Screen Capture Protection. (Default: false)"
      }
    },
    "logAnalyticsWorkspaceDataRetention": {
      "type": "int",
      "defaultValue": 30,
      "metadata": {
        "description": "Required.  Azure log analytics workspace name data retention."
      }
    },
    "enableMonitoringAlerts": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Set to deploy monitoring and alerst for image nuilder process (Defualt: false)."
      }
    },
    "distributionGroup": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Input the email distribution list for alert notifications when AIB builds succeed or fail."
      }
    },
    "actionGroupCustomName": {
      "type": "string",
      "defaultValue": "ag-aib",
      "metadata": {
        "description": "Optional. Custom name for Action Group."
      }
    },
    "automationAccountCustomName": {
      "type": "string",
      "defaultValue": "aa-avd",
      "metadata": {
        "description": "Optional. Custom name for the Automation Account."
      }
    },
    "logAnalyticsWorkspaceCustomName": {
      "type": "string",
      "defaultValue": "log-avd",
      "metadata": {
        "description": "Optional. Custom name for the Log Analytics Workspace."
      }
    },
    "customNaming": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Determine whether to enable custom naming for the Azure resources. (Default: false)"
      }
    },
    "resourceGroupCustomName": {
      "type": "string",
      "defaultValue": "rg-avd-use2-shared-services",
      "metadata": {
        "description": "Optional. Custom name for Resource Group. (Default: rg-avd-use2-shared-services)"
      },
      "maxLength": 90
    },
    "imageGalleryCustomName": {
      "type": "string",
      "defaultValue": "gal_avd_use2_001",
      "metadata": {
        "description": "Optional. Custom name for Image Gallery. (Default: gal_avd_use2_001)"
      },
      "maxLength": 64
    },
    "imageDefinitionCustomName": {
      "type": "string",
      "defaultValue": "avd-win11-21h2",
      "metadata": {
        "description": "Optional. Custom name for Image Definition. (Default: avd-win11-21h2)"
      },
      "maxLength": 64
    },
    "imageTemplateCustomName": {
      "type": "string",
      "defaultValue": "it-avd-win11-21h2",
      "metadata": {
        "description": "Optional. Custom name for Image Template. (Default: it-avd-win11-21h2)"
      },
      "maxLength": 260
    },
    "userAssignedManagedIdentityCustomName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Custom name for User Assigned Identity. (Default: id-avd)"
      },
      "maxLength": 128
    },
    "enableResourceTags": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Apply tags on resources and resource groups. (Default: false)"
      }
    },
    "imageBuildNameTag": {
      "type": "string",
      "defaultValue": "AVD-Image",
      "metadata": {
        "description": "Optional. The name of workload for tagging purposes. (Default: AVD-Image)"
      }
    },
    "workloadNameTag": {
      "type": "string",
      "defaultValue": "Contoso-Workload",
      "metadata": {
        "description": "Optional. Reference to the size of the VM for your workloads (Default: Contoso-Workload)"
      }
    },
    "dataClassificationTag": {
      "type": "string",
      "defaultValue": "Non-business",
      "metadata": {
        "description": "Optional. Sensitivity of data hosted (Default: Non-business)"
      },
      "allowedValues": [
        "Non-business",
        "Public",
        "General",
        "Confidential",
        "Highly confidential"
      ]
    },
    "departmentTag": {
      "type": "string",
      "defaultValue": "Contoso-AVD",
      "metadata": {
        "description": "Optional. Department that owns the deployment, (Dafult: Contoso-AVD)"
      }
    },
    "criticalityTag": {
      "type": "string",
      "defaultValue": "Low",
      "metadata": {
        "description": "Optional. criticality of each workload. (Default: Low)"
      },
      "allowedValues": [
        "Low",
        "Medium",
        "High",
        "Mission-critical",
        "custom"
      ]
    },
    "criticalityCustomTag": {
      "type": "string",
      "defaultValue": "Contoso-Critical",
      "metadata": {
        "description": "Optional. Tag value for custom criticality value. (Default: Contoso-Critical)"
      }
    },
    "applicationNameTag": {
      "type": "string",
      "defaultValue": "Contoso-App",
      "metadata": {
        "description": "Optional. Details about the application."
      }
    },
    "operationsTeamTag": {
      "type": "string",
      "defaultValue": "workload-admins@Contoso.com",
      "metadata": {
        "description": "Optional. Team accountable for day-to-day operations. (Contoso-Ops)"
      }
    },
    "ownerTag": {
      "type": "string",
      "defaultValue": "workload-owner@Contoso.com",
      "metadata": {
        "description": "Optional. Organizational owner of the AVD deployment. (Default: Contoso-Owner)"
      }
    },
    "costCenterTag": {
      "type": "string",
      "defaultValue": "Contoso-CC",
      "metadata": {
        "description": "Optional. Cost center of owner team. (Defualt: Contoso-CC)"
      }
    },
    "environmentTag": {
      "type": "string",
      "defaultValue": "Dev",
      "metadata": {
        "description": "Optional. Deployment environment of the application, workload. (Default: Dev)"
      },
      "allowedValues": [
        "Prod",
        "Dev",
        "StagingÂ "
      ]
    },
    "time": {
      "type": "string",
      "defaultValue": "[utcNow()]",
      "metadata": {
        "description": "Do not modify, used to set unique value for resource deployment."
      }
    },
    "enableTelemetry": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "Enable usage and telemetry feedback to Microsoft."
      }
    }
  },
  "variables": {
    "varActionGroupName": "[if(parameters('customNaming'), parameters('actionGroupCustomName'), format('ag-avd-{0}', variables('varNamingStandard')))]",
    "varNamingStandard": "[format('{0}', variables('varLocationAcronym'))]",
    "varLocationLowercase": "[toLower(parameters('sharedServicesLocation'))]",
    "varResourceGroupName": "[if(parameters('customNaming'), parameters('resourceGroupCustomName'), format('rg-avd-{0}-shared-services', variables('varNamingStandard')))]",
    "varImageGalleryName": "[if(parameters('customNaming'), parameters('imageGalleryCustomName'), format('gal_avd_{0}', variables('varNamingStandard')))]",
    "varUserAssignedManagedIdentityName": "[if(parameters('customNaming'), parameters('userAssignedManagedIdentityCustomName'), format('id-aib-{0}', variables('varNamingStandard')))]",
    "varLogAnalyticsWorkspaceName": "[if(parameters('customNaming'), parameters('logAnalyticsWorkspaceCustomName'), format('log-avd-{0}', variables('varNamingStandard')))]",
    "varImageDefinitionName": "[if(parameters('customNaming'), parameters('imageDefinitionCustomName'), format('avd-{0}', parameters('operatingSystemImage')))]",
    "varImageTemplateName": "[if(parameters('customNaming'), parameters('imageTemplateCustomName'), format('it-avd-{0}', parameters('operatingSystemImage')))]",
    "varAutomationAccountName": "[if(parameters('customNaming'), parameters('automationAccountCustomName'), format('aa-avd-{0}', variables('varNamingStandard')))]",
    "varLocationAcronym": "[variables('varLocationAcronyms')[variables('varLocationLowercase')]]",
    "varLocationAcronyms": {
      "eastasia": "eas",
      "southeastasia": "seas",
      "centralus": "cus",
      "eastus": "eus",
      "eastus2": "eus2",
      "westus": "wus",
      "northcentralus": "ncus",
      "southcentralus": "scus",
      "northeurope": "neu",
      "westeurope": "weu",
      "japanwest": "jpw",
      "japaneast": "jpe",
      "brazilsouth": "drs",
      "australiaeast": "aue",
      "australiasoutheast": "ause",
      "southindia": "sin",
      "centralindia": "cin",
      "westindia": "win",
      "canadacentral": "cac",
      "canadaeast": "cae",
      "uksouth": "uks",
      "ukwest": "ukw",
      "westcentralus": "wcus",
      "westus2": "wus2",
      "koreacentral": "krc",
      "koreasouth": "krs",
      "francecentral": "frc",
      "francesouth": "frs",
      "australiacentral": "auc",
      "australiacentral2": "auc2",
      "uaecentral": "aec",
      "uaenorth": "aen",
      "southafricanorth": "zan",
      "southafricawest": "zaw",
      "switzerlandnorth": "chn",
      "switzerlandwest": "chw",
      "germanynorth": "den",
      "germanywestcentral": "dewc",
      "norwaywest": "now",
      "norwayeast": "noe",
      "brazilsoutheast": "brse",
      "westus3": "wus3",
      "swedencentral": "sec"
    },
    "varTimeZone": "[variables('varTimeZones')[parameters('aibLocation')]]",
    "varTimeZones": {
      "australiacentral": "AUS Eastern Standard time",
      "australiacentral2": "AUS Eastern Standard time",
      "australiaeast": "AUS Eastern Standard time",
      "australiasoutheast": "AUS Eastern Standard time",
      "brazilsouth": "E. South America Standard time",
      "brazilsoutheast": "E. South America Standard time",
      "canadacentral": "Eastern Standard time",
      "canadaeast": "Eastern Standard time",
      "centralindia": "India Standard time",
      "centralus": "Central Standard time",
      "chinaeast": "China Standard time",
      "chinaeast2": "China Standard time",
      "chinanorth": "China Standard time",
      "chinanorth2": "China Standard time",
      "eastasia": "China Standard time",
      "eastus": "Eastern Standard time",
      "eastus2": "Eastern Standard time",
      "francecentral": "Central Europe Standard time",
      "francesouth": "Central Europe Standard time",
      "germanynorth": "Central Europe Standard time",
      "germanywestcentral": "Central Europe Standard time",
      "japaneast": "Tokyo Standard time",
      "japanwest": "Tokyo Standard time",
      "jioindiacentral": "India Standard time",
      "jioindiawest": "India Standard time",
      "koreacentral": "Korea Standard time",
      "koreasouth": "Korea Standard time",
      "northcentralus": "Central Standard time",
      "northeurope": "GMT Standard time",
      "norwayeast": "Central Europe Standard time",
      "norwaywest": "Central Europe Standard time",
      "southafricanorth": "South Africa Standard time",
      "southafricawest": "South Africa Standard time",
      "southcentralus": "Central Standard time",
      "southindia": "India Standard time",
      "southeastasia": "Singapore Standard time",
      "swedencentral": "Central Europe Standard time",
      "switzerlandnorth": "Central Europe Standard time",
      "switzerlandwest": "Central Europe Standard time",
      "uaecentral": "Arabian Standard time",
      "uaenorth": "Arabian Standard time",
      "uksouth": "GMT Standard time",
      "ukwest": "GMT Standard time",
      "usdodcentral": "Central Standard time",
      "usdodeast": "Eastern Standard time",
      "usgovarizona": "Mountain Standard time",
      "usgoviowa": "Central Standard time",
      "usgovtexas": "Central Standard time",
      "usgovvirginia": "Eastern Standard time",
      "westcentralus": "Mountain Standard time",
      "westeurope": "Central Europe Standard time",
      "westindia": "India Standard time",
      "westus": "Pacific Standard time",
      "westus2": "Pacific Standard time",
      "westus3": "Mountain Standard time"
    },
    "varCommonResourceTags": "[if(parameters('enableResourceTags'), createObject('ImageBuildName', parameters('imageBuildNameTag'), 'WorkloadName', parameters('workloadNameTag'), 'DataClassification', parameters('dataClassificationTag'), 'Department', parameters('departmentTag'), 'Criticality', if(equals(parameters('criticalityTag'), 'Custom'), parameters('criticalityCustomTag'), parameters('criticalityTag')), 'ApplicationName', parameters('applicationNameTag'), 'OpsTeam', parameters('operationsTeamTag'), 'Owner', parameters('ownerTag'), 'CostCenter', parameters('costCenterTag'), 'Environment', parameters('environmentTag')), createObject())]",
    "varVmSize": "Standard_D4s_v3",
    "varOperatingSystemImageDefinitions": {
      "win10_21h2_office": {
        "name": "Windows10_21H2_Office",
        "osType": "Windows",
        "osState": "Generalized",
        "offer": "office-365",
        "publisher": "MicrosoftWindowsDesktop",
        "sku": "win10-21h2-avd-m365",
        "osAccountType": "Standard_LRS",
        "hyperVGeneration": "V1"
      },
      "win10_21h2": {
        "name": "Windows10_21H2",
        "osType": "Windows",
        "osState": "Generalized",
        "offer": "windows-10",
        "publisher": "MicrosoftWindowsDesktop",
        "sku": "win10-21h2-avd",
        "osAccountType": "Standard_LRS",
        "hyperVGeneration": "V1"
      },
      "win11_21h2_office": {
        "name": "Windows11_21H2",
        "osType": "Windows",
        "osState": "Generalized",
        "offer": "office-365",
        "publisher": "MicrosoftWindowsDesktop",
        "sku": "win11-21h2-avd-m365",
        "osAccountType": "Standard_LRS",
        "hyperVGeneration": "V2"
      },
      "win11_21h2": {
        "name": "Windows11_21H2",
        "osType": "Windows",
        "osState": "Generalized",
        "offer": "windows-11",
        "publisher": "MicrosoftWindowsDesktop",
        "sku": "win11-21h2-avd",
        "osAccountType": "Standard_LRS",
        "hyperVGeneration": "V2"
      }
    },
    "varBaseScriptUri": "https://raw.githubusercontent.com/jamasten/avdaccelerator/main/workload/",
    "varTelemetryId": "[format('pid-b04f18f1-9100-4b92-8e41-71f0d73e3755-{0}', parameters('sharedServicesLocation'))]",
    "varRdpShortPathCustomizer": "[if(parameters('rdpShortPath'), createArray(createObject('type', 'PowerShell', 'name', 'rdpShortPath', 'runElevated', true(), 'runAsSystem', true(), 'scriptUri', format('{0}scripts/Set-RdpShortpath.ps1', variables('varBaseScriptUri')))), createArray())]",
    "varScreenCaptureProtectionCustomizer": "[if(parameters('screenCaptureProtection'), createArray(createObject('type', 'PowerShell', 'name', 'screenCaptureProtection', 'runElevated', true(), 'runAsSystem', true(), 'scriptUri', format('{0}scripts/Set-ScreenCaptureProtection.ps1', variables('varBaseScriptUri')))), createArray())]",
    "varVdotCustomizer": [
      {
        "type": "PowerShell",
        "name": "VirtualDesktopOptimizationTool",
        "runElevated": true,
        "runAsSystem": true,
        "scriptUri": "[format('{0}scripts/Set-VirtualDesktopOptimizations.ps1', variables('varBaseScriptUri'))]"
      }
    ],
    "varScriptCustomizers": "[union(variables('varRdpShortPathCustomizer'), variables('varScreenCaptureProtectionCustomizer'), variables('varVdotCustomizer'))]",
    "varRemainingCustomizers": [
      {
        "type": "WindowsRestart",
        "restartCheckCommand": "Write-Host \"Restarting post script customizers\"",
        "restarttimeout": "10m"
      },
      {
        "type": "WindowsUpdate",
        "searchCriteria": "IsInstalled=0",
        "filters": [
          "exclude:$_.Title -like '*Preview*'",
          "include:$true"
        ],
        "updateLimit": 40
      },
      {
        "type": "PowerShell",
        "name": "Sleep for a min",
        "runElevated": true,
        "runAsSystem": true,
        "inline": [
          "Write-Host \"Sleep for a 5 min\"",
          "Start-Sleep -Seconds 300"
        ]
      },
      {
        "type": "WindowsRestart",
        "restartCheckCommand": "Write-Host \"restarting post Windows updates\"",
        "restarttimeout": "10m"
      },
      {
        "type": "PowerShell",
        "name": "Sleep for a min",
        "runElevated": true,
        "runAsSystem": true,
        "inline": [
          "Write-Host \"Sleep for a min\"",
          "Start-Sleep -Seconds 60"
        ]
      },
      {
        "type": "WindowsRestart",
        "restarttimeout": "10m"
      }
    ],
    "varCustomizationSteps": "[union(variables('varScriptCustomizers'), variables('varRemainingCustomizers'))]",
    "varAlerts": "[if(parameters('enableMonitoringAlerts'), createArray(createObject('name', 'Azure Image Builder - Build Failure', 'description', 'Sends an error alert when a build fails on an image template for Azure Image Builder.', 'severity', 0, 'evaluationFrequency', 'PT5M', 'windowSize', 'PT5M', 'criterias', createObject('allOf', createArray(createObject('query', 'AzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.AUTOMATION\"\n| where Category  == \"JobStreams\"\n| where ResultDescription has \"Image Template build failed\"', 'timeAggregation', 'Count', 'dimensions', createArray(createObject('name', 'ResultDescription', 'operator', 'Include', 'values', createArray('*'))), 'operator', 'GreaterThanOrEqual', 'threshold', 1, 'failingPeriods', createObject('numberOfEvaluationPeriods', 1, 'minFailingPeriodsToAlert', 1))))), createObject('name', 'Azure Image Builder - Build Success', 'description', 'Sends an informational alert when a build succeeds on an image template for Azure Image Builder.', 'severity', 3, 'evaluationFrequency', 'PT5M', 'windowSize', 'PT5M', 'criterias', createObject('allOf', createArray(createObject('query', 'AzureDiagnostics\n| where ResourceProvider == \"MICROSOFT.AUTOMATION\"\n| where Category  == \"JobStreams\"\n| where ResultDescription has \"Image Template build succeeded\"', 'timeAggregation', 'Count', 'dimensions', createArray(createObject('name', 'ResultDescription', 'operator', 'Include', 'values', createArray('*'))), 'operator', 'GreaterThanOrEqual', 'threshold', 1, 'failingPeriods', createObject('numberOfEvaluationPeriods', 1, 'minFailingPeriodsToAlert', 1)))))), createArray())]",
    "varModules": [
      {
        "name": "Az.Accounts",
        "uri": "https://www.powershellgallery.com/api/v2/package"
      },
      {
        "name": "Az.ImageBuilder",
        "uri": "https://www.powershellgallery.com/api/v2/package"
      }
    ],
    "varDistributionGroupRole": "[if(and(parameters('enableMonitoringAlerts'), parameters('useExistingVirtualNetwork')), createArray(createObject('resourceGroup', split(parameters('existingVirtualNetworkResourceId'), '/')[4], 'name', 'Virtual Network Join', 'description', 'Allow resources to join a subnet', 'actions', createArray('Microsoft.Network/virtualNetworks/read', 'Microsoft.Network/virtualNetworks/subnets/read', 'Microsoft.Network/virtualNetworks/subnets/join/action'))), createArray())]",
    "varImageTemplateRoles": [
      {
        "resourceGroup": "[variables('varResourceGroupName')]",
        "name": "Image Template Contributor",
        "description": "Allow the creation and management of images",
        "actions": [
          "Microsoft.Compute/galleries/read",
          "Microsoft.Compute/galleries/images/read",
          "Microsoft.Compute/galleries/images/versions/read",
          "Microsoft.Compute/galleries/images/versions/write",
          "Microsoft.Compute/images/read",
          "Microsoft.Compute/images/write",
          "Microsoft.Compute/images/delete"
        ]
      },
      {
        "resourceGroup": "[variables('varResourceGroupName')]",
        "name": "Image Template Build Automation",
        "description": "Allow Image Template build automation using a Managed Identity on an Automation Account.",
        "actions": [
          "Microsoft.VirtualMachineImages/imageTemplates/run/action",
          "Microsoft.VirtualMachineImages/imageTemplates/read",
          "Microsoft.Compute/locations/publishers/artifacttypes/offers/skus/versions/read",
          "Microsoft.Compute/locations/publishers/artifacttypes/offers/skus/read",
          "Microsoft.Compute/locations/publishers/artifacttypes/offers/read",
          "Microsoft.Compute/locations/publishers/read"
        ]
      }
    ],
    "varRoles": "[if(parameters('enableMonitoringAlerts'), union(variables('varDistributionGroupRole'), variables('varImageTemplateRoles')), variables('varImageTemplateRoles'))]"
  },
  "resources": [
    {
      "condition": "[parameters('enableTelemetry')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2021-04-01",
      "name": "[variables('varTelemetryId')]",
      "location": "[parameters('sharedServicesLocation')]",
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Resource-Group_{0}', parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('varResourceGroupName')]"
          },
          "location": {
            "value": "[parameters('sharedServicesLocation')]"
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "6739506385321379792"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the Resource Group"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[deployment().location]",
              "metadata": {
                "description": "Optional. Location of the Resource Group. It uses the deployment's location when not provided."
              }
            },
            "lock": {
              "type": "string",
              "defaultValue": "NotSpecified",
              "metadata": {
                "description": "Optional. Specify the type of lock."
              },
              "allowedValues": [
                "CanNotDelete",
                "NotSpecified",
                "ReadOnly"
              ]
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the storage account resource."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Resources/resourceGroups",
              "apiVersion": "2019-05-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {}
            },
            {
              "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-RG-{1}-Lock', uniqueString(deployment().name, parameters('location')), parameters('lock'))]",
              "resourceGroup": "[parameters('name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]"
                  },
                  "level": {
                    "value": "[parameters('lock')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "18423331498261092198"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The name of the Lock"
                      }
                    },
                    "level": {
                      "type": "string",
                      "defaultValue": "NotSpecified",
                      "metadata": {
                        "description": "Optional. Set lock level."
                      },
                      "allowedValues": [
                        "CanNotDelete",
                        "NotSpecified",
                        "ReadOnly"
                      ]
                    }
                  },
                  "variables": {
                    "lockNotes": {
                      "CanNotDelete": "Cannot delete resource or child resources.",
                      "ReadOnly": "Cannot modify the resource or child resources."
                    },
                    "lockName": "[if(empty(parameters('name')), format('{0}-lock', parameters('level')), parameters('name'))]"
                  },
                  "resources": [
                    {
                      "condition": "[not(equals(parameters('level'), 'NotSpecified'))]",
                      "type": "Microsoft.Authorization/locks",
                      "apiVersion": "2017-04-01",
                      "name": "[variables('lockName')]",
                      "properties": {
                        "level": "[parameters('level')]",
                        "notes": "[variables('lockNotes')[parameters('level')]]"
                      }
                    }
                  ],
                  "outputs": {
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Authorization/locks', variables('lockName'))]",
                      "metadata": {
                        "description": "The resource ID of the lock"
                      }
                    },
                    "name": {
                      "type": "string",
                      "value": "[variables('lockName')]",
                      "metadata": {
                        "description": "The name of the lock"
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "resourceGroup_rbac",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-RG-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "resourceGroup": "[parameters('name')]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "resourceGroupName": {
                    "value": "[parameters('name')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "5715331907833933843"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array"
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string"
                    },
                    "resourceGroupName": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "AcrDelete": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c2f4ef07-c644-48eb-af81-4b1b4947fb11')]",
                      "AcrImageSigner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '6cef56e8-d556-48e5-a04f-b8e64114680f')]",
                      "AcrPull": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f951dda-4ed3-4680-a7ca-43fe172d538d')]",
                      "AcrPush": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8311e382-0749-4cb8-b61a-304f252e45ec')]",
                      "AcrQuarantineReader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'cdda3590-29a3-44f6-95f2-9f980659eb04')]",
                      "AcrQuarantineWriter": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c8d4ff99-41c3-41a8-9f60-21dfdad59608')]",
                      "API Management Service Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '312a565d-c81f-4fd8-895a-4e21e48d571c')]",
                      "API Management Service Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e022efe7-f5ba-4159-bbe4-b44f577e9b61')]",
                      "API Management Service Reader Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '71522526-b88f-4d52-b57f-d31fc3546d0d')]",
                      "App Configuration Data Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5ae67dd6-50cb-40e7-96ff-dc2bfa4b606b')]",
                      "App Configuration Data Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '516239f1-63e1-4d78-a4de-a74fb236a071')]",
                      "Application Insights Component Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ae349356-3a1b-4a5e-921d-050484c6347e')]",
                      "Application Insights Snapshot Debugger": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '08954f03-6346-4c2e-81c0-ec3a5cfae23b')]",
                      "Attestation Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'bbf86eb8-f7b4-4cce-96e4-18cddf81d86e')]",
                      "Attestation Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'fd1bd22b-8476-40bc-a0bc-69b95687b9f3')]",
                      "Automation Job Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4fe576fe-1146-4730-92eb-48519fa6bf9f')]",
                      "Automation Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'd3881f73-407a-4167-8283-e981cbba0404')]",
                      "Automation Runbook Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5fb5aef8-1081-4b8e-bb16-9d5d0385bab5')]",
                      "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
                      "Avere Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c025889f-8102-4ebf-b32c-fc0c6f0c6bd9')]",
                      "Azure Connected Machine Onboarding": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b64e21ea-ac4e-4cdf-9dc9-5b892992bee7')]",
                      "Azure Connected Machine Resource Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'cd570a14-e51a-42ad-bac8-bafd67325302')]",
                      "Azure Digital Twins Owner (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'bcd981a7-7f74-457b-83e1-cceb9e632ffe')]",
                      "Azure Digital Twins Reader (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'd57506d4-4c8d-48b1-8587-93c323f6a5a3')]",
                      "Azure Event Hubs Data Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f526a384-b230-433a-b45c-95f59c4a2dec')]",
                      "Azure Event Hubs Data Receiver": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a638d3c7-ab3a-418d-83e6-5f17a39d4fde')]",
                      "Azure Event Hubs Data Sender": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '2b629674-e913-4c01-ae53-ef4638d8f975')]",
                      "Azure Kubernetes Service Cluster Admin Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8')]",
                      "Azure Kubernetes Service Cluster User Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4abbcc35-e782-43d8-92c5-2d3f1bd2253f')]",
                      "Azure Kubernetes Service Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8')]",
                      "Azure Maps Data Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8f5e0ce6-4f7b-4dcf-bddf-e6f48634a204')]",
                      "Azure Maps Data Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '423170ca-a8f6-4b0f-8487-9e4eb8f49bfa')]",
                      "Azure Sentinel Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ab8e14d6-4a74-4a29-9ba8-549422addade')]",
                      "Azure Sentinel Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8d289c81-5878-46d4-8554-54e1e3d8b5cb')]",
                      "Azure Sentinel Responder": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3e150937-b8fe-4cfb-8069-0eaf05ecd056')]",
                      "Azure Service Bus Data Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '090c5cfd-751d-490a-894a-3ce6f1109419')]",
                      "Azure Service Bus Data Receiver": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0')]",
                      "Azure Service Bus Data Sender": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '69a216fc-b8fb-44d8-bc22-1f3c2cd27a39')]",
                      "Azure Stack Registration Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '6f12a6df-dd06-4f3e-bcb1-ce8be600526a')]",
                      "Backup Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e467623-bb1f-42f4-a55d-6e525e11384b')]",
                      "Backup Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00c29273-979b-4161-815c-10b084fb9324')]",
                      "Backup Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a795c7a0-d4a2-40c1-ae25-d81f01202912')]",
                      "Billing Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64')]",
                      "BizTalk Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e3c6656-6cfa-4708-81fe-0de47ac73342')]",
                      "Blockchain Member Node Access (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '31a002a1-acaf-453e-8a5b-297c9ca1ea24')]",
                      "Blueprint Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '41077137-e803-4205-871c-5a86e6a753b4')]",
                      "Blueprint Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '437d2ced-4a38-4302-8479-ed2bcb43d090')]",
                      "CDN Endpoint Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '426e0c7f-0c7e-4658-b36f-ff54d6c29b45')]",
                      "CDN Endpoint Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '871e35f6-b5c1-49cc-a043-bde969a0f2cd')]",
                      "CDN Profile Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ec156ff8-a8d1-4d15-830c-5b80698ca432')]",
                      "CDN Profile Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8f96442b-4075-438f-813d-ad51ab4019af')]",
                      "Classic Network Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b34d265f-36f7-4a0d-a4d4-e158ca92e90f')]",
                      "Classic Storage Account Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '86e8f5dc-a6e9-4c67-9d15-de283e8eac25')]",
                      "Classic Storage Account Key Operator Service Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '985d6b00-f706-48f5-a6fe-d0ca12fb668d')]",
                      "Classic Virtual Machine Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'd73bb868-a0df-4d4d-bd69-98a00b01fccb')]",
                      "ClearDB MySQL DB Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9106cda0-8a86-4e81-b686-29a22c54effe')]",
                      "Cognitive Services Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68')]",
                      "Cognitive Services Custom Vision Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c1ff6cc2-c111-46fe-8896-e0ef812ad9f3')]",
                      "Cognitive Services Custom Vision Deployment": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5c4089e1-6d96-4d2f-b296-c1bc7137275f')]",
                      "Cognitive Services Custom Vision Labeler": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '88424f51-ebe7-446f-bc41-7fa16989e96c')]",
                      "Cognitive Services Custom Vision Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '93586559-c37d-4a6b-ba08-b9f0940c2d73')]",
                      "Cognitive Services Custom Vision Trainer": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0a5ae4ab-0d65-4eeb-be61-29fc9b54394b')]",
                      "Cognitive Services Data Reader (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b59867f0-fa02-499b-be73-45a86b5b3e1c')]",
                      "Cognitive Services QnA Maker Editor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f4cc2bf9-21be-47a1-bdf1-5c5804381025')]",
                      "Cognitive Services QnA Maker Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '466ccd10-b268-4a11-b098-b4849f024126')]",
                      "Cognitive Services User": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a97b65f3-24c7-4388-baec-2e87135dc908')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Cosmos DB Account Reader Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'fbdf93bf-df7d-467e-a4d2-9458aa1360c8')]",
                      "Cosmos DB Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '230815da-be43-4aae-9cb4-875f7bd000aa')]",
                      "CosmosBackupOperator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'db7b14f2-5adf-42da-9f96-f2ee17bab5cb')]",
                      "Cost Management Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '434105ed-43f6-45c7-a02f-909b2ba83430')]",
                      "Cost Management Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '72fafb9e-0641-4937-9268-a91bfd8191a3')]",
                      "Data Box Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'add466c9-e687-43fc-8d98-dfcf8d720be5')]",
                      "Data Box Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '028f4ed7-e2a9-465e-a8f4-9c0ffdfdc027')]",
                      "Data Factory Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '673868aa-7521-48a0-acc6-0f60742d39f5')]",
                      "Data Lake Analytics Developer": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '47b7735b-770e-4598-a7da-8b91488b4c88')]",
                      "Data Purger": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '150f5e0c-0603-4f03-8c7f-cf70034c4e90')]",
                      "Desktop Virtualization User": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63')]",
                      "DevTest Labs User": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '76283e04-6283-4c54-8f91-bcf1374a3c64')]",
                      "DNS Zone Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'befefa01-2a29-4197-83a8-272ff33ce314')]",
                      "DocumentDB Account Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5bd9cd88-fe45-4216-938b-f97437e15450')]",
                      "EventGrid EventSubscription Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '428e0ff0-5e57-4d9c-a221-2c70d0e0a443')]",
                      "EventGrid EventSubscription Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '2414bbcf-6497-4faf-8c65-045460748405')]",
                      "Experimentation Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f646f1b-fa08-80eb-a33b-edd6ce5c915c')]",
                      "Experimentation Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7f646f1b-fa08-80eb-a22b-edd6ce5c915c')]",
                      "Experimentation Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '49632ef5-d9ac-41f4-b8e7-bbe587fa74a1')]",
                      "FHIR Data Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5a1fc7df-4bf1-4951-a576-89034ee01acd')]",
                      "FHIR Data Exporter": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3db33094-8700-4567-8da5-1501d4e7e843')]",
                      "FHIR Data Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4c8d0bbc-75d3-4935-991f-5f3c56d81508')]",
                      "FHIR Data Writer": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3f88fce4-5892-4214-ae73-ba5294559913')]",
                      "Graph Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b60367af-1334-4454-b71e-769d9a4f83d9')]",
                      "HDInsight Cluster Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '61ed4efc-fab3-44fd-b111-e24485cc132a')]",
                      "HDInsight Domain Services Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8d8d5a11-05d3-4bda-a417-a08778121c7c')]",
                      "Hierarchy Settings Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '350f8d15-c687-4448-8ae1-157740a3936d')]",
                      "Hybrid Server Onboarding": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5d1e5ee4-7c68-4a71-ac8b-0739630a3dfb')]",
                      "Hybrid Server Resource Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '48b40c6e-82e0-4eb3-90d5-19e40f49b624')]",
                      "Integration Service Environment Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a41e2c5b-bd99-4a07-88f4-9bf657a760b8')]",
                      "Integration Service Environment Developer": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7aa55d3-1abb-444a-a5ca-5e51e485d6ec')]",
                      "Intelligent Systems Account Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '03a6d094-3444-4b3d-88af-7477090a9e5e')]",
                      "Key Vault Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f25e0fa2-a7c8-4377-a976-54943a77a395')]",
                      "Knowledge Consumer": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ee361c5d-f7b5-4119-b4b6-892157c8f64c')]",
                      "Kubernetes Cluster - Azure Arc Onboarding": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '34e09817-6cbe-4d01-b1a2-e0eac5743d41')]",
                      "Lab Creator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b97fb8bc-a8b2-4522-a38b-dd33c7e65ead')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Logic App Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '87a39d53-fc1b-424a-814c-f7e04687dc9e')]",
                      "Logic App Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '515c2055-d9d4-4321-b1b9-bd0c9a0f79fe')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "Managed Identity Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e40ec5ca-96e0-45a2-b4ff-59039f2c2b59')]",
                      "Managed Identity Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f1a07417-d97a-45cb-824c-7a7467783830')]",
                      "Managed Services Registration assignment Delete ": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '91c1777a-f3dc-4fae-b103-61d183457e46')]",
                      "Management Group Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5d58bcaf-24a5-4b20-bdb6-eed9f69fbe4c')]",
                      "Management Group Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ac63b705-f282-497d-ac71-919bf39d939d')]",
                      "Marketplace Admin": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'dd920d6d-f481-47f1-b461-f338c46b2d9f')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "Network Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                      "New Relic APM Account Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5d28c62d-5b37-4476-8438-e587778df237')]",
                      "Object Understanding Account Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4dd61c23-6743-42fe-a388-d8bdd41cb745')]",
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Policy Insights Data Writer (Preview)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '66bb4e9e-b016-4a94-8249-4c0511c2be84')]",
                      "Private DNS Zone Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b12aa53e-6015-4669-85d0-8515ebb3ae7f')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Reader and Data Access": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c12c1c16-33a1-487b-954d-41c89c60f349')]",
                      "Redis Cache Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e0f68234-74aa-48ed-b826-c38b57376e17')]",
                      "Remote Rendering Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3df8b902-2a6f-47c7-8cc5-360e9b272a7e')]",
                      "Remote Rendering Client": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'd39065c4-c120-43c9-ab0a-63eed9795f0a')]",
                      "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                      "Scheduler Job Collections Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '188a0f2f-5c9e-469b-ae67-2aa5ce574b94')]",
                      "Search Service Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7ca78c08-252a-4471-8644-bb5ff32d4ba0')]",
                      "Security Admin": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'fb1c8493-542b-48eb-b624-b4c8fea62acd')]",
                      "Security Assessment Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '612c2aa1-cb24-443b-ac28-3ab7272de6f5')]",
                      "Security Manager (Legacy)": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e3d13bf0-dd5a-482e-ba6b-9b8433878d10')]",
                      "Security Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '39bc4728-0917-49c7-9d2c-d95423bc2eb4')]",
                      "SignalR AccessKey Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '04165923-9d83-45d5-8227-78b77b0a687e')]",
                      "SignalR Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761')]",
                      "Site Recovery Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '6670b86e-a3f7-4917-ac9b-5d6ab1be4567')]",
                      "Site Recovery Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '494ae006-db33-4328-bf46-533a6560a3ca')]",
                      "Site Recovery Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'dbaa88c4-0c30-4179-9fb3-46319faa6149')]",
                      "Spatial Anchors Account Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8bbe83f1-e2a6-4df7-8cb4-4e04d4e5c827')]",
                      "Spatial Anchors Account Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '70bbe301-9835-447d-afdd-19eb3167307c')]",
                      "Spatial Anchors Account Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5d51204f-eb77-4b1c-b86a-2ec626c49413')]",
                      "SQL DB Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9b7fa17d-e63e-47b0-bb0a-15c516ac86ec')]",
                      "SQL Managed Instance Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4939a1f6-9ae0-4e48-a1e0-f2cbe897382d')]",
                      "SQL Security Manager": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '056cd41c-7e88-42e1-933e-88ba6a50c9c3')]",
                      "SQL Server Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437')]",
                      "Storage Account Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
                      "Storage Account Key Operator Service Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '81a9662b-bebf-436f-a333-f67b29880f12')]",
                      "Storage Blob Data Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
                      "Storage Blob Data Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
                      "Storage Blob Data Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '2a2b9908-6ea1-4ae2-8e65-a410df84e7d1')]",
                      "Storage Blob Delegator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'db58b8e5-c6ad-4a2a-8342-4190687cbf4a')]",
                      "Storage File Data SMB Share Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb')]",
                      "Storage File Data SMB Share Elevated Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a7264617-510b-434b-a828-9731dc254ea7')]",
                      "Storage File Data SMB Share Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'aba4ae5f-2193-4029-9191-0cb91df5e314')]",
                      "Storage Queue Data Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
                      "Storage Queue Data Message Processor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8a0f0c08-91a1-4084-bc3d-661d67233fed')]",
                      "Storage Queue Data Message Sender": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c6a89b2d-59bc-44d0-9896-0f6e12d7b80a')]",
                      "Storage Queue Data Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '19e7f393-937e-4f77-808e-94535e297925')]",
                      "Support Request Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'cfd33db0-3dd1-45e3-aa9d-cdbdf3b6f24e')]",
                      "Tag Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4a9ae827-6dc8-4573-8ac7-8239d42aa03f')]",
                      "Traffic Manager Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a4b10055-b0c7-44c2-b00f-c7b5b3550cf7')]",
                      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
                      "Virtual Machine Administrator Login": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '1c0163c0-47e6-4577-8991-ea5c82e286e4')]",
                      "Virtual Machine Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]",
                      "Virtual Machine User Login": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'fb879df8-f326-4884-b1cf-06f3ad86be52')]",
                      "Web Plan Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '2cc479cb-7b4d-49a8-b449-8c00fd0f0a4b')]",
                      "Website Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'de139f84-1756-47ae-9be6-808fbbe84772')]",
                      "Workbook Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e8ddcd69-c73f-4f9f-9844-4100522f16ad')]",
                      "Workbook Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b279062a-9be3-42a0-92ae-8b3cf002ec4d')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2021-04-01-preview",
                      "name": "[guid(parameters('resourceGroupName'), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the resource group"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[subscriptionResourceId('Microsoft.Resources/resourceGroups', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the resource group"
              }
            }
          }
        }
      }
    },
    {
      "copy": {
        "name": "roleDefinitions",
        "count": "[length(range(0, length(variables('varRoles'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Role-Definition_{0}_{1}', range(0, length(variables('varRoles')))[copyIndex()], parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "subscriptionId": {
            "value": "[parameters('sharedServicesSubId')]"
          },
          "description": {
            "value": "[variables('varRoles')[range(0, length(variables('varRoles')))[copyIndex()]].description]"
          },
          "roleName": {
            "value": "[variables('varRoles')[range(0, length(variables('varRoles')))[copyIndex()]].name]"
          },
          "actions": {
            "value": "[variables('varRoles')[range(0, length(variables('varRoles')))[copyIndex()]].actions]"
          },
          "assignableScopes": {
            "value": [
              "[format('/subscriptions/{0}', parameters('sharedServicesSubId'))]"
            ]
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "8350780597998278945"
            }
          },
          "parameters": {
            "roleName": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the custom RBAC role to be created."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Description of the custom RBAC role to be created."
              }
            },
            "actions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of allowed actions."
              }
            },
            "notActions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of denied actions."
              }
            },
            "dataActions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of allowed data actions. This is not supported if the assignableScopes contains Management Group Scopes"
              }
            },
            "notDataActions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of denied data actions. This is not supported if the assignableScopes contains Management Group Scopes"
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Optional. The subscription ID where the Role Definition and Target Scope will be applied to. If not provided, will use the current scope for deployment."
              }
            },
            "assignableScopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Role definition assignable scopes. If not provided, will use the current scope provided."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/roleDefinitions",
              "apiVersion": "2018-01-01-preview",
              "name": "[guid(parameters('roleName'), parameters('subscriptionId'))]",
              "properties": {
                "roleName": "[parameters('roleName')]",
                "description": "[parameters('description')]",
                "type": "customRole",
                "permissions": [
                  {
                    "actions": "[parameters('actions')]",
                    "notActions": "[parameters('notActions')]",
                    "dataActions": "[parameters('dataActions')]",
                    "notDataActions": "[parameters('notDataActions')]"
                  }
                ],
                "assignableScopes": "[if(not(empty(parameters('assignableScopes'))), parameters('assignableScopes'), array(subscription().id))]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[guid(parameters('roleName'), parameters('subscriptionId'))]",
              "metadata": {
                "description": "The GUID of the Role Definition"
              }
            },
            "scope": {
              "type": "string",
              "value": "[subscription().id]",
              "metadata": {
                "description": "The scope this Role Definition applies to"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Authorization/roleDefinitions', guid(parameters('roleName'), parameters('subscriptionId')))]",
              "metadata": {
                "description": "The resource ID of the Role Definition"
              }
            }
          }
        }
      }
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('User-Assigned-Managed-Identity_{0}', parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('varUserAssignedManagedIdentityName')]"
          },
          "location": {
            "value": "[parameters('sharedServicesLocation')]"
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "2583215207436574164"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "defaultValue": "[guid(resourceGroup().id)]",
              "metadata": {
                "description": "Optional. Name of the User Assigned Identity."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "lock": {
              "type": "string",
              "defaultValue": "NotSpecified",
              "metadata": {
                "description": "Optional. Specify the type of lock."
              },
              "allowedValues": [
                "CanNotDelete",
                "NotSpecified",
                "ReadOnly"
              ]
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
              "apiVersion": "2018-11-30",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]"
            },
            {
              "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2017-04-01",
              "scope": "[format('Microsoft.ManagedIdentity/userAssignedIdentities/{0}', parameters('name'))]",
              "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
              "properties": {
                "level": "[parameters('lock')]",
                "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "1882150209236915071"
                    }
                  },
                  "resources": []
                }
              }
            },
            {
              "copy": {
                "name": "userMsi_rbac",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-UserMSI-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "resourceId": {
                    "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "6624531388042247984"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array"
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string"
                    },
                    "resourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "Managed Identity Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'e40ec5ca-96e0-45a2-b4ff-59039f2c2b59')]",
                      "Managed Identity Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f1a07417-d97a-45cb-824c-7a7467783830')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2021-04-01-preview",
                      "scope": "[format('Microsoft.ManagedIdentity/userAssignedIdentities/{0}', last(split(parameters('resourceId'), '/')))]",
                      "name": "[guid(last(split(parameters('resourceId'), '/')), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the user assigned identity"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the user assigned identity"
              }
            },
            "principalId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))).principalId]",
              "metadata": {
                "description": "The principal ID of the user assigned identity"
              }
            },
            "clientId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', parameters('name'))).clientId]",
              "metadata": {
                "description": "The client ID of the user assigned identity"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group the user assigned identity was deployed into"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('sharedServicesSubId'), 'Microsoft.Resources/deployments', format('Resource-Group_{0}', parameters('time')))]"
      ]
    },
    {
      "copy": {
        "name": "roleAssignments",
        "count": "[length(range(0, length(variables('varRoles'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Role-Assignment_{0}_{1}', range(0, length(variables('varRoles')))[copyIndex()], parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varRoles')[range(0, length(variables('varRoles')))[copyIndex()]].resourceGroup]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "roleDefinitionIdOrName": {
            "value": "[reference(subscriptionResourceId(parameters('sharedServicesSubId'), 'Microsoft.Resources/deployments', format('Role-Definition_{0}_{1}', range(0, length(variables('varRoles')))[range(0, length(variables('varRoles')))[copyIndex()]], parameters('time')))).outputs.resourceId.value]"
          },
          "principalId": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('User-Assigned-Managed-Identity_{0}', parameters('time')))).outputs.principalId.value]"
          },
          "principalType": {
            "value": "ServicePrincipal"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "14700347637187874945"
            }
          },
          "parameters": {
            "roleDefinitionIdOrName": {
              "type": "string",
              "metadata": {
                "description": "Required. You can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
              }
            },
            "principalId": {
              "type": "string",
              "metadata": {
                "description": "Required. The Principal or Object ID of the Security Principal (User, Group, Service Principal, Managed Identity)"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Optional. Name of the Resource Group to assign the RBAC role to. If not provided, will use the current scope for deployment."
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Optional. Subscription ID of the subscription to assign the RBAC role to. If not provided, will use the current scope for deployment."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Description of role assignment"
              }
            },
            "delegatedManagedIdentityResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. ID of the delegated managed identity resource"
              }
            },
            "condition": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to"
              }
            },
            "conditionVersion": {
              "type": "string",
              "defaultValue": "2.0",
              "allowedValues": [
                "2.0"
              ],
              "metadata": {
                "description": "Optional. Version of the condition. Currently accepted value is \"2.0\""
              }
            },
            "principalType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "ServicePrincipal",
                "Group",
                "User",
                "ForeignGroup",
                "Device",
                ""
              ],
              "metadata": {
                "description": "Optional. The principal type of the assigned principal ID."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "variables": {
            "builtInRoleNames_var": {
              "AcrPush": "/providers/Microsoft.Authorization/roleDefinitions/8311e382-0749-4cb8-b61a-304f252e45ec",
              "API Management Service Contributor": "/providers/Microsoft.Authorization/roleDefinitions/312a565d-c81f-4fd8-895a-4e21e48d571c",
              "AcrPull": "/providers/Microsoft.Authorization/roleDefinitions/7f951dda-4ed3-4680-a7ca-43fe172d538d",
              "AcrImageSigner": "/providers/Microsoft.Authorization/roleDefinitions/6cef56e8-d556-48e5-a04f-b8e64114680f",
              "AcrDelete": "/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11",
              "AcrQuarantineReader": "/providers/Microsoft.Authorization/roleDefinitions/cdda3590-29a3-44f6-95f2-9f980659eb04",
              "AcrQuarantineWriter": "/providers/Microsoft.Authorization/roleDefinitions/c8d4ff99-41c3-41a8-9f60-21dfdad59608",
              "API Management Service Operator Role": "/providers/Microsoft.Authorization/roleDefinitions/e022efe7-f5ba-4159-bbe4-b44f577e9b61",
              "API Management Service Reader Role": "/providers/Microsoft.Authorization/roleDefinitions/71522526-b88f-4d52-b57f-d31fc3546d0d",
              "Application Insights Component Contributor": "/providers/Microsoft.Authorization/roleDefinitions/ae349356-3a1b-4a5e-921d-050484c6347e",
              "Application Insights Snapshot Debugger": "/providers/Microsoft.Authorization/roleDefinitions/08954f03-6346-4c2e-81c0-ec3a5cfae23b",
              "Attestation Reader": "/providers/Microsoft.Authorization/roleDefinitions/fd1bd22b-8476-40bc-a0bc-69b95687b9f3",
              "Automation Job Operator": "/providers/Microsoft.Authorization/roleDefinitions/4fe576fe-1146-4730-92eb-48519fa6bf9f",
              "Automation Runbook Operator": "/providers/Microsoft.Authorization/roleDefinitions/5fb5aef8-1081-4b8e-bb16-9d5d0385bab5",
              "Automation Operator": "/providers/Microsoft.Authorization/roleDefinitions/d3881f73-407a-4167-8283-e981cbba0404",
              "Avere Contributor": "/providers/Microsoft.Authorization/roleDefinitions/4f8fab4f-1852-4a58-a46a-8eaf358af14a",
              "Avere Operator": "/providers/Microsoft.Authorization/roleDefinitions/c025889f-8102-4ebf-b32c-fc0c6f0c6bd9",
              "Azure Kubernetes Service Cluster Admin Role": "/providers/Microsoft.Authorization/roleDefinitions/0ab0b1a8-8aac-4efd-b8c2-3ee1fb270be8",
              "Azure Kubernetes Service Cluster User Role": "/providers/Microsoft.Authorization/roleDefinitions/4abbcc35-e782-43d8-92c5-2d3f1bd2253f",
              "Azure Maps Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/423170ca-a8f6-4b0f-8487-9e4eb8f49bfa",
              "Azure Stack Registration Owner": "/providers/Microsoft.Authorization/roleDefinitions/6f12a6df-dd06-4f3e-bcb1-ce8be600526a",
              "Backup Contributor": "/providers/Microsoft.Authorization/roleDefinitions/5e467623-bb1f-42f4-a55d-6e525e11384b",
              "Billing Reader": "/providers/Microsoft.Authorization/roleDefinitions/fa23ad8b-c56e-40d8-ac0c-ce449e1d2c64",
              "Backup Operator": "/providers/Microsoft.Authorization/roleDefinitions/00c29273-979b-4161-815c-10b084fb9324",
              "Backup Reader": "/providers/Microsoft.Authorization/roleDefinitions/a795c7a0-d4a2-40c1-ae25-d81f01202912",
              "BizTalk Contributor": "/providers/Microsoft.Authorization/roleDefinitions/5e3c6656-6cfa-4708-81fe-0de47ac73342",
              "CDN Endpoint Contributor": "/providers/Microsoft.Authorization/roleDefinitions/426e0c7f-0c7e-4658-b36f-ff54d6c29b45",
              "CDN Endpoint Reader": "/providers/Microsoft.Authorization/roleDefinitions/871e35f6-b5c1-49cc-a043-bde969a0f2cd",
              "CDN Profile Contributor": "/providers/Microsoft.Authorization/roleDefinitions/ec156ff8-a8d1-4d15-830c-5b80698ca432",
              "CDN Profile Reader": "/providers/Microsoft.Authorization/roleDefinitions/8f96442b-4075-438f-813d-ad51ab4019af",
              "Classic Network Contributor": "/providers/Microsoft.Authorization/roleDefinitions/b34d265f-36f7-4a0d-a4d4-e158ca92e90f",
              "Classic Storage Account Contributor": "/providers/Microsoft.Authorization/roleDefinitions/86e8f5dc-a6e9-4c67-9d15-de283e8eac25",
              "Classic Storage Account Key Operator Service Role": "/providers/Microsoft.Authorization/roleDefinitions/985d6b00-f706-48f5-a6fe-d0ca12fb668d",
              "ClearDB MySQL DB Contributor": "/providers/Microsoft.Authorization/roleDefinitions/9106cda0-8a86-4e81-b686-29a22c54effe",
              "Classic Virtual Machine Contributor": "/providers/Microsoft.Authorization/roleDefinitions/d73bb868-a0df-4d4d-bd69-98a00b01fccb",
              "Cognitive Services User": "/providers/Microsoft.Authorization/roleDefinitions/a97b65f3-24c7-4388-baec-2e87135dc908",
              "Cognitive Services Contributor": "/providers/Microsoft.Authorization/roleDefinitions/25fbc0a9-bd7c-42a3-aa1a-3b75d497ee68",
              "CosmosBackupOperator": "/providers/Microsoft.Authorization/roleDefinitions/db7b14f2-5adf-42da-9f96-f2ee17bab5cb",
              "Contributor": "/providers/Microsoft.Authorization/roleDefinitions/b24988ac-6180-42a0-ab88-20f7382dd24c",
              "Cosmos DB Account Reader Role": "/providers/Microsoft.Authorization/roleDefinitions/fbdf93bf-df7d-467e-a4d2-9458aa1360c8",
              "Cost Management Contributor": "/providers/Microsoft.Authorization/roleDefinitions/434105ed-43f6-45c7-a02f-909b2ba83430",
              "Cost Management Reader": "/providers/Microsoft.Authorization/roleDefinitions/72fafb9e-0641-4937-9268-a91bfd8191a3",
              "Data Box Contributor": "/providers/Microsoft.Authorization/roleDefinitions/add466c9-e687-43fc-8d98-dfcf8d720be5",
              "Data Box Reader": "/providers/Microsoft.Authorization/roleDefinitions/028f4ed7-e2a9-465e-a8f4-9c0ffdfdc027",
              "Data Factory Contributor": "/providers/Microsoft.Authorization/roleDefinitions/673868aa-7521-48a0-acc6-0f60742d39f5",
              "Data Purger": "/providers/Microsoft.Authorization/roleDefinitions/150f5e0c-0603-4f03-8c7f-cf70034c4e90",
              "Data Lake Analytics Developer": "/providers/Microsoft.Authorization/roleDefinitions/47b7735b-770e-4598-a7da-8b91488b4c88",
              "DevTest Labs User": "/providers/Microsoft.Authorization/roleDefinitions/76283e04-6283-4c54-8f91-bcf1374a3c64",
              "DocumentDB Account Contributor": "/providers/Microsoft.Authorization/roleDefinitions/5bd9cd88-fe45-4216-938b-f97437e15450",
              "DNS Zone Contributor": "/providers/Microsoft.Authorization/roleDefinitions/befefa01-2a29-4197-83a8-272ff33ce314",
              "EventGrid EventSubscription Contributor": "/providers/Microsoft.Authorization/roleDefinitions/428e0ff0-5e57-4d9c-a221-2c70d0e0a443",
              "EventGrid EventSubscription Reader": "/providers/Microsoft.Authorization/roleDefinitions/2414bbcf-6497-4faf-8c65-045460748405",
              "Graph Owner": "/providers/Microsoft.Authorization/roleDefinitions/b60367af-1334-4454-b71e-769d9a4f83d9",
              "HDInsight Domain Services Contributor": "/providers/Microsoft.Authorization/roleDefinitions/8d8d5a11-05d3-4bda-a417-a08778121c7c",
              "Intelligent Systems Account Contributor": "/providers/Microsoft.Authorization/roleDefinitions/03a6d094-3444-4b3d-88af-7477090a9e5e",
              "Key Vault Contributor": "/providers/Microsoft.Authorization/roleDefinitions/f25e0fa2-a7c8-4377-a976-54943a77a395",
              "Knowledge Consumer": "/providers/Microsoft.Authorization/roleDefinitions/ee361c5d-f7b5-4119-b4b6-892157c8f64c",
              "Lab Creator": "/providers/Microsoft.Authorization/roleDefinitions/b97fb8bc-a8b2-4522-a38b-dd33c7e65ead",
              "Log Analytics Reader": "/providers/Microsoft.Authorization/roleDefinitions/73c42c96-874c-492b-b04d-ab87d138a893",
              "Log Analytics Contributor": "/providers/Microsoft.Authorization/roleDefinitions/92aaf0da-9dab-42b6-94a3-d43ce8d16293",
              "Logic App Operator": "/providers/Microsoft.Authorization/roleDefinitions/515c2055-d9d4-4321-b1b9-bd0c9a0f79fe",
              "Logic App Contributor": "/providers/Microsoft.Authorization/roleDefinitions/87a39d53-fc1b-424a-814c-f7e04687dc9e",
              "Managed Application Operator Role": "/providers/Microsoft.Authorization/roleDefinitions/c7393b34-138c-406f-901b-d8cf2b17e6ae",
              "Managed Applications Reader": "/providers/Microsoft.Authorization/roleDefinitions/b9331d33-8a36-4f8c-b097-4f54124fdb44",
              "Managed Identity Operator": "/providers/Microsoft.Authorization/roleDefinitions/f1a07417-d97a-45cb-824c-7a7467783830",
              "Managed Identity Contributor": "/providers/Microsoft.Authorization/roleDefinitions/e40ec5ca-96e0-45a2-b4ff-59039f2c2b59",
              "Management Group Contributor": "/providers/Microsoft.Authorization/roleDefinitions/5d58bcaf-24a5-4b20-bdb6-eed9f69fbe4c",
              "Management Group Reader": "/providers/Microsoft.Authorization/roleDefinitions/ac63b705-f282-497d-ac71-919bf39d939d",
              "Monitoring Metrics Publisher": "/providers/Microsoft.Authorization/roleDefinitions/3913510d-42f4-4e42-8a64-420c390055eb",
              "Monitoring Reader": "/providers/Microsoft.Authorization/roleDefinitions/43d0d8ad-25c7-4714-9337-8ba259a9fe05",
              "Network Contributor": "/providers/Microsoft.Authorization/roleDefinitions/4d97b98b-1d4f-4787-a291-c67834d212e7",
              "Monitoring Contributor": "/providers/Microsoft.Authorization/roleDefinitions/749f88d5-cbae-40b8-bcfc-e573ddc772fa",
              "New Relic APM Account Contributor": "/providers/Microsoft.Authorization/roleDefinitions/5d28c62d-5b37-4476-8438-e587778df237",
              "Owner": "/providers/Microsoft.Authorization/roleDefinitions/8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
              "Reader": "/providers/Microsoft.Authorization/roleDefinitions/acdd72a7-3385-48ef-bd42-f606fba81ae7",
              "Redis Cache Contributor": "/providers/Microsoft.Authorization/roleDefinitions/e0f68234-74aa-48ed-b826-c38b57376e17",
              "Reader and Data Access": "/providers/Microsoft.Authorization/roleDefinitions/c12c1c16-33a1-487b-954d-41c89c60f349",
              "Resource Policy Contributor": "/providers/Microsoft.Authorization/roleDefinitions/36243c78-bf99-498c-9df9-86d9f8d28608",
              "Scheduler Job Collections Contributor": "/providers/Microsoft.Authorization/roleDefinitions/188a0f2f-5c9e-469b-ae67-2aa5ce574b94",
              "Search Service Contributor": "/providers/Microsoft.Authorization/roleDefinitions/7ca78c08-252a-4471-8644-bb5ff32d4ba0",
              "Security Admin": "/providers/Microsoft.Authorization/roleDefinitions/fb1c8493-542b-48eb-b624-b4c8fea62acd",
              "Security Reader": "/providers/Microsoft.Authorization/roleDefinitions/39bc4728-0917-49c7-9d2c-d95423bc2eb4",
              "Spatial Anchors Account Contributor": "/providers/Microsoft.Authorization/roleDefinitions/8bbe83f1-e2a6-4df7-8cb4-4e04d4e5c827",
              "Site Recovery Contributor": "/providers/Microsoft.Authorization/roleDefinitions/6670b86e-a3f7-4917-ac9b-5d6ab1be4567",
              "Site Recovery Operator": "/providers/Microsoft.Authorization/roleDefinitions/494ae006-db33-4328-bf46-533a6560a3ca",
              "Spatial Anchors Account Reader": "/providers/Microsoft.Authorization/roleDefinitions/5d51204f-eb77-4b1c-b86a-2ec626c49413",
              "Site Recovery Reader": "/providers/Microsoft.Authorization/roleDefinitions/dbaa88c4-0c30-4179-9fb3-46319faa6149",
              "Spatial Anchors Account Owner": "/providers/Microsoft.Authorization/roleDefinitions/70bbe301-9835-447d-afdd-19eb3167307c",
              "SQL Managed Instance Contributor": "/providers/Microsoft.Authorization/roleDefinitions/4939a1f6-9ae0-4e48-a1e0-f2cbe897382d",
              "SQL DB Contributor": "/providers/Microsoft.Authorization/roleDefinitions/9b7fa17d-e63e-47b0-bb0a-15c516ac86ec",
              "SQL Security Manager": "/providers/Microsoft.Authorization/roleDefinitions/056cd41c-7e88-42e1-933e-88ba6a50c9c3",
              "Storage Account Contributor": "/providers/Microsoft.Authorization/roleDefinitions/17d1049b-9a84-46fb-8f53-869881c3d3ab",
              "SQL Server Contributor": "/providers/Microsoft.Authorization/roleDefinitions/6d8ee4ec-f05a-4a1d-8b00-a9b17e38b437",
              "Storage Account Key Operator Service Role": "/providers/Microsoft.Authorization/roleDefinitions/81a9662b-bebf-436f-a333-f67b29880f12",
              "Storage Blob Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/ba92f5b4-2d11-453d-a403-e96b0029c9fe",
              "Storage Blob Data Owner": "/providers/Microsoft.Authorization/roleDefinitions/b7e6dc6d-f1e8-4753-8033-0f276bb0955b",
              "Storage Blob Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/2a2b9908-6ea1-4ae2-8e65-a410df84e7d1",
              "Storage Queue Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/974c5e8b-45b9-4653-ba55-5f855dd0fb88",
              "Storage Queue Data Message Processor": "/providers/Microsoft.Authorization/roleDefinitions/8a0f0c08-91a1-4084-bc3d-661d67233fed",
              "Storage Queue Data Message Sender": "/providers/Microsoft.Authorization/roleDefinitions/c6a89b2d-59bc-44d0-9896-0f6e12d7b80a",
              "Storage Queue Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/19e7f393-937e-4f77-808e-94535e297925",
              "Support Request Contributor": "/providers/Microsoft.Authorization/roleDefinitions/cfd33db0-3dd1-45e3-aa9d-cdbdf3b6f24e",
              "Traffic Manager Contributor": "/providers/Microsoft.Authorization/roleDefinitions/a4b10055-b0c7-44c2-b00f-c7b5b3550cf7",
              "Virtual Machine Administrator Login": "/providers/Microsoft.Authorization/roleDefinitions/1c0163c0-47e6-4577-8991-ea5c82e286e4",
              "User Access Administrator": "/providers/Microsoft.Authorization/roleDefinitions/18d7d88d-d35e-4fb5-a5c3-7773c20a72d9",
              "Virtual Machine User Login": "/providers/Microsoft.Authorization/roleDefinitions/fb879df8-f326-4884-b1cf-06f3ad86be52",
              "Virtual Machine Contributor": "/providers/Microsoft.Authorization/roleDefinitions/9980e02c-c2be-4d73-94e8-173b1dc7cf3c",
              "Web Plan Contributor": "/providers/Microsoft.Authorization/roleDefinitions/2cc479cb-7b4d-49a8-b449-8c00fd0f0a4b",
              "Website Contributor": "/providers/Microsoft.Authorization/roleDefinitions/de139f84-1756-47ae-9be6-808fbbe84772",
              "Azure Service Bus Data Owner": "/providers/Microsoft.Authorization/roleDefinitions/090c5cfd-751d-490a-894a-3ce6f1109419",
              "Azure Event Hubs Data Owner": "/providers/Microsoft.Authorization/roleDefinitions/f526a384-b230-433a-b45c-95f59c4a2dec",
              "Attestation Contributor": "/providers/Microsoft.Authorization/roleDefinitions/bbf86eb8-f7b4-4cce-96e4-18cddf81d86e",
              "HDInsight Cluster Operator": "/providers/Microsoft.Authorization/roleDefinitions/61ed4efc-fab3-44fd-b111-e24485cc132a",
              "Cosmos DB Operator": "/providers/Microsoft.Authorization/roleDefinitions/230815da-be43-4aae-9cb4-875f7bd000aa",
              "Hybrid Server Resource Administrator": "/providers/Microsoft.Authorization/roleDefinitions/48b40c6e-82e0-4eb3-90d5-19e40f49b624",
              "Hybrid Server Onboarding": "/providers/Microsoft.Authorization/roleDefinitions/5d1e5ee4-7c68-4a71-ac8b-0739630a3dfb",
              "Azure Event Hubs Data Receiver": "/providers/Microsoft.Authorization/roleDefinitions/a638d3c7-ab3a-418d-83e6-5f17a39d4fde",
              "Azure Event Hubs Data Sender": "/providers/Microsoft.Authorization/roleDefinitions/2b629674-e913-4c01-ae53-ef4638d8f975",
              "Azure Service Bus Data Receiver": "/providers/Microsoft.Authorization/roleDefinitions/4f6d3b9b-027b-4f4c-9142-0e5a2a2247e0",
              "Azure Service Bus Data Sender": "/providers/Microsoft.Authorization/roleDefinitions/69a216fc-b8fb-44d8-bc22-1f3c2cd27a39",
              "Storage File Data SMB Share Reader": "/providers/Microsoft.Authorization/roleDefinitions/aba4ae5f-2193-4029-9191-0cb91df5e314",
              "Storage File Data SMB Share Contributor": "/providers/Microsoft.Authorization/roleDefinitions/0c867c2a-1d8c-454a-a3db-ab2ea1bdc8bb",
              "Private DNS Zone Contributor": "/providers/Microsoft.Authorization/roleDefinitions/b12aa53e-6015-4669-85d0-8515ebb3ae7f",
              "Storage Blob Delegator": "/providers/Microsoft.Authorization/roleDefinitions/db58b8e5-c6ad-4a2a-8342-4190687cbf4a",
              "Desktop Virtualization User": "/providers/Microsoft.Authorization/roleDefinitions/1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63",
              "Storage File Data SMB Share Elevated Contributor": "/providers/Microsoft.Authorization/roleDefinitions/a7264617-510b-434b-a828-9731dc254ea7",
              "Blueprint Contributor": "/providers/Microsoft.Authorization/roleDefinitions/41077137-e803-4205-871c-5a86e6a753b4",
              "Blueprint Operator": "/providers/Microsoft.Authorization/roleDefinitions/437d2ced-4a38-4302-8479-ed2bcb43d090",
              "Azure Sentinel Contributor": "/providers/Microsoft.Authorization/roleDefinitions/ab8e14d6-4a74-4a29-9ba8-549422addade",
              "Azure Sentinel Responder": "/providers/Microsoft.Authorization/roleDefinitions/3e150937-b8fe-4cfb-8069-0eaf05ecd056",
              "Azure Sentinel Reader": "/providers/Microsoft.Authorization/roleDefinitions/8d289c81-5878-46d4-8554-54e1e3d8b5cb",
              "Workbook Reader": "/providers/Microsoft.Authorization/roleDefinitions/b279062a-9be3-42a0-92ae-8b3cf002ec4d",
              "Workbook Contributor": "/providers/Microsoft.Authorization/roleDefinitions/e8ddcd69-c73f-4f9f-9844-4100522f16ad",
              "SignalR AccessKey Reader": "/providers/Microsoft.Authorization/roleDefinitions/04165923-9d83-45d5-8227-78b77b0a687e",
              "SignalR/Web PubSub Contributor": "/providers/Microsoft.Authorization/roleDefinitions/8cf5e20a-e4b2-4e9d-b3a1-5ceb692c2761",
              "Azure Connected Machine Onboarding": "/providers/Microsoft.Authorization/roleDefinitions/b64e21ea-ac4e-4cdf-9dc9-5b892992bee7",
              "Azure Connected Machine Resource Administrator": "/providers/Microsoft.Authorization/roleDefinitions/cd570a14-e51a-42ad-bac8-bafd67325302",
              "Managed Services Registration assignment Delete Role": "/providers/Microsoft.Authorization/roleDefinitions/91c1777a-f3dc-4fae-b103-61d183457e46",
              "App Configuration Data Owner": "/providers/Microsoft.Authorization/roleDefinitions/5ae67dd6-50cb-40e7-96ff-dc2bfa4b606b",
              "App Configuration Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/516239f1-63e1-4d78-a4de-a74fb236a071",
              "Kubernetes Cluster - Azure Arc Onboarding": "/providers/Microsoft.Authorization/roleDefinitions/34e09817-6cbe-4d01-b1a2-e0eac5743d41",
              "Experimentation Contributor": "/providers/Microsoft.Authorization/roleDefinitions/7f646f1b-fa08-80eb-a22b-edd6ce5c915c",
              "Cognitive Services QnA Maker Reader": "/providers/Microsoft.Authorization/roleDefinitions/466ccd10-b268-4a11-b098-b4849f024126",
              "Cognitive Services QnA Maker Editor": "/providers/Microsoft.Authorization/roleDefinitions/f4cc2bf9-21be-47a1-bdf1-5c5804381025",
              "Experimentation Administrator": "/providers/Microsoft.Authorization/roleDefinitions/7f646f1b-fa08-80eb-a33b-edd6ce5c915c",
              "Remote Rendering Administrator": "/providers/Microsoft.Authorization/roleDefinitions/3df8b902-2a6f-47c7-8cc5-360e9b272a7e",
              "Remote Rendering Client": "/providers/Microsoft.Authorization/roleDefinitions/d39065c4-c120-43c9-ab0a-63eed9795f0a",
              "Managed Application Contributor Role": "/providers/Microsoft.Authorization/roleDefinitions/641177b8-a67a-45b9-a033-47bc880bb21e",
              "Security Assessment Contributor": "/providers/Microsoft.Authorization/roleDefinitions/612c2aa1-cb24-443b-ac28-3ab7272de6f5",
              "Tag Contributor": "/providers/Microsoft.Authorization/roleDefinitions/4a9ae827-6dc8-4573-8ac7-8239d42aa03f",
              "Integration Service Environment Developer": "/providers/Microsoft.Authorization/roleDefinitions/c7aa55d3-1abb-444a-a5ca-5e51e485d6ec",
              "Integration Service Environment Contributor": "/providers/Microsoft.Authorization/roleDefinitions/a41e2c5b-bd99-4a07-88f4-9bf657a760b8",
              "Azure Kubernetes Service Contributor Role": "/providers/Microsoft.Authorization/roleDefinitions/ed7f3fbd-7b88-4dd4-9017-9adb7ce333f8",
              "Azure Digital Twins Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/d57506d4-4c8d-48b1-8587-93c323f6a5a3",
              "Azure Digital Twins Data Owner": "/providers/Microsoft.Authorization/roleDefinitions/bcd981a7-7f74-457b-83e1-cceb9e632ffe",
              "Hierarchy Settings Administrator": "/providers/Microsoft.Authorization/roleDefinitions/350f8d15-c687-4448-8ae1-157740a3936d",
              "FHIR Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/5a1fc7df-4bf1-4951-a576-89034ee01acd",
              "FHIR Data Exporter": "/providers/Microsoft.Authorization/roleDefinitions/3db33094-8700-4567-8da5-1501d4e7e843",
              "FHIR Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/4c8d0bbc-75d3-4935-991f-5f3c56d81508",
              "FHIR Data Writer": "/providers/Microsoft.Authorization/roleDefinitions/3f88fce4-5892-4214-ae73-ba5294559913",
              "Experimentation Reader": "/providers/Microsoft.Authorization/roleDefinitions/49632ef5-d9ac-41f4-b8e7-bbe587fa74a1",
              "Object Understanding Account Owner": "/providers/Microsoft.Authorization/roleDefinitions/4dd61c23-6743-42fe-a388-d8bdd41cb745",
              "Azure Maps Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/8f5e0ce6-4f7b-4dcf-bddf-e6f48634a204",
              "Cognitive Services Custom Vision Contributor": "/providers/Microsoft.Authorization/roleDefinitions/c1ff6cc2-c111-46fe-8896-e0ef812ad9f3",
              "Cognitive Services Custom Vision Deployment": "/providers/Microsoft.Authorization/roleDefinitions/5c4089e1-6d96-4d2f-b296-c1bc7137275f",
              "Cognitive Services Custom Vision Labeler": "/providers/Microsoft.Authorization/roleDefinitions/88424f51-ebe7-446f-bc41-7fa16989e96c",
              "Cognitive Services Custom Vision Reader": "/providers/Microsoft.Authorization/roleDefinitions/93586559-c37d-4a6b-ba08-b9f0940c2d73",
              "Cognitive Services Custom Vision Trainer": "/providers/Microsoft.Authorization/roleDefinitions/0a5ae4ab-0d65-4eeb-be61-29fc9b54394b",
              "Key Vault Administrator": "/providers/Microsoft.Authorization/roleDefinitions/00482a5a-887f-4fb3-b363-3b7fe8e74483",
              "Key Vault Crypto Officer": "/providers/Microsoft.Authorization/roleDefinitions/14b46e9e-c2b7-41b4-b07b-48a6ebf60603",
              "Key Vault Crypto User": "/providers/Microsoft.Authorization/roleDefinitions/12338af0-0e69-4776-bea7-57ae8d297424",
              "Key Vault Secrets Officer": "/providers/Microsoft.Authorization/roleDefinitions/b86a8fe4-44ce-4948-aee5-eccb2c155cd7",
              "Key Vault Secrets User": "/providers/Microsoft.Authorization/roleDefinitions/4633458b-17de-408a-b874-0445c86b69e6",
              "Key Vault Certificates Officer": "/providers/Microsoft.Authorization/roleDefinitions/a4417e6f-fecd-4de8-b567-7b0420556985",
              "Key Vault Reader": "/providers/Microsoft.Authorization/roleDefinitions/21090545-7ca7-4776-b22c-e363652d74d2",
              "Key Vault Crypto Service Encryption User": "/providers/Microsoft.Authorization/roleDefinitions/e147488a-f6f5-4113-8e2d-b22465e65bf6",
              "Azure Arc Kubernetes Viewer": "/providers/Microsoft.Authorization/roleDefinitions/63f0a09d-1495-4db4-a681-037d84835eb4",
              "Azure Arc Kubernetes Writer": "/providers/Microsoft.Authorization/roleDefinitions/5b999177-9696-4545-85c7-50de3797e5a1",
              "Azure Arc Kubernetes Cluster Admin": "/providers/Microsoft.Authorization/roleDefinitions/8393591c-06b9-48a2-a542-1bd6b377f6a2",
              "Azure Arc Kubernetes Admin": "/providers/Microsoft.Authorization/roleDefinitions/dffb1e0c-446f-4dde-a09f-99eb5cc68b96",
              "Azure Kubernetes Service RBAC Cluster Admin": "/providers/Microsoft.Authorization/roleDefinitions/b1ff04bb-8a4e-4dc4-8eb5-8693973ce19b",
              "Azure Kubernetes Service RBAC Admin": "/providers/Microsoft.Authorization/roleDefinitions/3498e952-d568-435e-9b2c-8d77e338d7f7",
              "Azure Kubernetes Service RBAC Reader": "/providers/Microsoft.Authorization/roleDefinitions/7f6c6a51-bcf8-42ba-9220-52d62157d7db",
              "Azure Kubernetes Service RBAC Writer": "/providers/Microsoft.Authorization/roleDefinitions/a7ffa36f-339b-4b5c-8bdf-e2c188b2c0eb",
              "Services Hub Operator": "/providers/Microsoft.Authorization/roleDefinitions/82200a5b-e217-47a5-b665-6d8765ee745b",
              "Object Understanding Account Reader": "/providers/Microsoft.Authorization/roleDefinitions/d18777c0-1514-4662-8490-608db7d334b6",
              "Azure Arc Enabled Kubernetes Cluster User Role": "/providers/Microsoft.Authorization/roleDefinitions/00493d72-78f6-4148-b6c5-d3ce8e4799dd",
              "SignalR REST API Owner": "/providers/Microsoft.Authorization/roleDefinitions/fd53cd77-2268-407a-8f46-7e7863d0f521",
              "Collaborative Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/daa9e50b-21df-454c-94a6-a8050adab352",
              "Device Update Reader": "/providers/Microsoft.Authorization/roleDefinitions/e9dba6fb-3d52-4cf0-bce3-f06ce71b9e0f",
              "Device Update Administrator": "/providers/Microsoft.Authorization/roleDefinitions/02ca0879-e8e4-47a5-a61e-5c618b76e64a",
              "Device Update Content Administrator": "/providers/Microsoft.Authorization/roleDefinitions/0378884a-3af5-44ab-8323-f5b22f9f3c98",
              "Device Update Deployments Administrator": "/providers/Microsoft.Authorization/roleDefinitions/e4237640-0e3d-4a46-8fda-70bc94856432",
              "Device Update Deployments Reader": "/providers/Microsoft.Authorization/roleDefinitions/49e2f5d2-7741-4835-8efa-19e1fe35e47f",
              "Device Update Content Reader": "/providers/Microsoft.Authorization/roleDefinitions/d1ee9a80-8b14-47f0-bdc2-f4a351625a7b",
              "Cognitive Services Metrics Advisor Administrator": "/providers/Microsoft.Authorization/roleDefinitions/cb43c632-a144-4ec5-977c-e80c4affc34a",
              "Cognitive Services Metrics Advisor User": "/providers/Microsoft.Authorization/roleDefinitions/3b20f47b-3825-43cb-8114-4bd2201156a8",
              "AgFood Platform Service Reader": "/providers/Microsoft.Authorization/roleDefinitions/7ec7ccdc-f61e-41fe-9aaf-980df0a44eba",
              "AgFood Platform Service Contributor": "/providers/Microsoft.Authorization/roleDefinitions/8508508a-4469-4e45-963b-2518ee0bb728",
              "AgFood Platform Service Admin": "/providers/Microsoft.Authorization/roleDefinitions/f8da80de-1ff9-4747-ad80-a19b7f6079e3",
              "Managed HSM contributor": "/providers/Microsoft.Authorization/roleDefinitions/18500a29-7fe2-46b2-a342-b16a415e101d",
              "Security Detonation Chamber Submitter": "/providers/Microsoft.Authorization/roleDefinitions/0b555d9b-b4a7-4f43-b330-627f0e5be8f0",
              "SignalR REST API Reader": "/providers/Microsoft.Authorization/roleDefinitions/ddde6b66-c0df-4114-a159-3618637b3035",
              "SignalR Service Owner": "/providers/Microsoft.Authorization/roleDefinitions/7e4f1700-ea5a-4f59-8f37-079cfe29dce3",
              "Reservation Purchaser": "/providers/Microsoft.Authorization/roleDefinitions/f7b75c60-3036-4b75-91c3-6b41c27c1689",
              "Storage Account Backup Contributor Role": "/providers/Microsoft.Authorization/roleDefinitions/e5e2a7ff-d759-4cd2-bb51-3152d37e2eb1",
              "Experimentation Metric Contributor": "/providers/Microsoft.Authorization/roleDefinitions/6188b7c9-7d01-4f99-a59f-c88b630326c0",
              "Project Babylon Data Curator": "/providers/Microsoft.Authorization/roleDefinitions/9ef4ef9c-a049-46b0-82ab-dd8ac094c889",
              "Project Babylon Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/c8d896ba-346d-4f50-bc1d-7d1c84130446",
              "Project Babylon Data Source Administrator": "/providers/Microsoft.Authorization/roleDefinitions/05b7651b-dc44-475e-b74d-df3db49fae0f",
              "Application Group Contributor": "/providers/Microsoft.Authorization/roleDefinitions/ca6382a4-1721-4bcf-a114-ff0c70227b6b",
              "Desktop Virtualization Reader": "/providers/Microsoft.Authorization/roleDefinitions/49a72310-ab8d-41df-bbb0-79b649203868",
              "Desktop Virtualization Contributor": "/providers/Microsoft.Authorization/roleDefinitions/082f0a83-3be5-4ba1-904c-961cca79b387",
              "Desktop Virtualization Workspace Contributor": "/providers/Microsoft.Authorization/roleDefinitions/21efdde3-836f-432b-bf3d-3e8e734d4b2b",
              "Desktop Virtualization User Session Operator": "/providers/Microsoft.Authorization/roleDefinitions/ea4bfff8-7fb4-485a-aadd-d4129a0ffaa6",
              "Desktop Virtualization Session Host Operator": "/providers/Microsoft.Authorization/roleDefinitions/2ad6aaab-ead9-4eaa-8ac5-da422f562408",
              "Desktop Virtualization Host Pool Reader": "/providers/Microsoft.Authorization/roleDefinitions/ceadfde2-b300-400a-ab7b-6143895aa822",
              "Desktop Virtualization Host Pool Contributor": "/providers/Microsoft.Authorization/roleDefinitions/e307426c-f9b6-4e81-87de-d99efb3c32bc",
              "Desktop Virtualization Application Group Reader": "/providers/Microsoft.Authorization/roleDefinitions/aebf23d0-b568-4e86-b8f9-fe83a2c6ab55",
              "Desktop Virtualization Application Group Contributor": "/providers/Microsoft.Authorization/roleDefinitions/86240b0e-9422-4c43-887b-b61143f32ba8",
              "Desktop Virtualization Workspace Reader": "/providers/Microsoft.Authorization/roleDefinitions/0fa44ee9-7a7d-466b-9bb2-2bf446b1204d",
              "Disk Backup Reader": "/providers/Microsoft.Authorization/roleDefinitions/3e5e47e6-65f7-47ef-90b5-e5dd4d455f24",
              "Disk Restore Operator": "/providers/Microsoft.Authorization/roleDefinitions/b50d9833-a0cb-478e-945f-707fcc997c13",
              "Disk Snapshot Contributor": "/providers/Microsoft.Authorization/roleDefinitions/7efff54f-a5b4-42b5-a1c5-5411624893ce",
              "Microsoft.Kubernetes connected cluster role": "/providers/Microsoft.Authorization/roleDefinitions/5548b2cf-c94c-4228-90ba-30851930a12f",
              "Security Detonation Chamber Submission Manager": "/providers/Microsoft.Authorization/roleDefinitions/a37b566d-3efa-4beb-a2f2-698963fa42ce",
              "Security Detonation Chamber Publisher": "/providers/Microsoft.Authorization/roleDefinitions/352470b3-6a9c-4686-b503-35deb827e500",
              "Collaborative Runtime Operator": "/providers/Microsoft.Authorization/roleDefinitions/7a6f0e70-c033-4fb1-828c-08514e5f4102",
              "CosmosRestoreOperator": "/providers/Microsoft.Authorization/roleDefinitions/5432c526-bc82-444a-b7ba-57c5b0b5b34f",
              "FHIR Data Converter": "/providers/Microsoft.Authorization/roleDefinitions/a1705bd2-3a8f-45a5-8683-466fcfd5cc24",
              "Azure Sentinel Automation Contributor": "/providers/Microsoft.Authorization/roleDefinitions/f4c81013-99ee-4d62-a7ee-b3f1f648599a",
              "Quota Request Operator": "/providers/Microsoft.Authorization/roleDefinitions/0e5f05e5-9ab9-446b-b98d-1e2157c94125",
              "EventGrid Contributor": "/providers/Microsoft.Authorization/roleDefinitions/1e241071-0855-49ea-94dc-649edcd759de",
              "Security Detonation Chamber Reader": "/providers/Microsoft.Authorization/roleDefinitions/28241645-39f8-410b-ad48-87863e2951d5",
              "Object Anchors Account Reader": "/providers/Microsoft.Authorization/roleDefinitions/4a167cdf-cb95-4554-9203-2347fe489bd9",
              "Object Anchors Account Owner": "/providers/Microsoft.Authorization/roleDefinitions/ca0835dd-bacc-42dd-8ed2-ed5e7230d15b",
              "WorkloadBuilder Migration Agent Role": "/providers/Microsoft.Authorization/roleDefinitions/d17ce0a2-0697-43bc-aac5-9113337ab61c",
              "Azure Spring Cloud Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/b5537268-8956-4941-a8f0-646150406f0c",
              "Cognitive Services Speech User": "/providers/Microsoft.Authorization/roleDefinitions/f2dc8367-1007-4938-bd23-fe263f013447",
              "Cognitive Services Speech Contributor": "/providers/Microsoft.Authorization/roleDefinitions/0e75ca1e-0464-4b4d-8b93-68208a576181",
              "Cognitive Services Face Recognizer": "/providers/Microsoft.Authorization/roleDefinitions/9894cab4-e18a-44aa-828b-cb588cd6f2d7",
              "Media Services Account Administrator": "/providers/Microsoft.Authorization/roleDefinitions/054126f8-9a2b-4f1c-a9ad-eca461f08466",
              "Media Services Live Events Administrator": "/providers/Microsoft.Authorization/roleDefinitions/532bc159-b25e-42c0-969e-a1d439f60d77",
              "Media Services Media Operator": "/providers/Microsoft.Authorization/roleDefinitions/e4395492-1534-4db2-bedf-88c14621589c",
              "Media Services Policy Administrator": "/providers/Microsoft.Authorization/roleDefinitions/c4bba371-dacd-4a26-b320-7250bca963ae",
              "Media Services Streaming Endpoints Administrator": "/providers/Microsoft.Authorization/roleDefinitions/99dba123-b5fe-44d5-874c-ced7199a5804",
              "Stream Analytics Query Tester": "/providers/Microsoft.Authorization/roleDefinitions/1ec5b3c1-b17e-4e25-8312-2acb3c3c5abf",
              "AnyBuild Builder": "/providers/Microsoft.Authorization/roleDefinitions/a2138dac-4907-4679-a376-736901ed8ad8",
              "IoT Hub Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/b447c946-2db7-41ec-983d-d8bf3b1c77e3",
              "IoT Hub Twin Contributor": "/providers/Microsoft.Authorization/roleDefinitions/494bdba2-168f-4f31-a0a1-191d2f7c028c",
              "IoT Hub Registry Contributor": "/providers/Microsoft.Authorization/roleDefinitions/4ea46cd5-c1b2-4a8e-910b-273211f9ce47",
              "IoT Hub Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/4fc6c259-987e-4a07-842e-c321cc9d413f",
              "Test Base Reader": "/providers/Microsoft.Authorization/roleDefinitions/15e0f5a1-3450-4248-8e25-e2afe88a9e85",
              "Search Index Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/1407120a-92aa-4202-b7e9-c0e197c71c8f",
              "Search Index Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/8ebe5a00-799e-43f5-93ac-243d3dce84a7",
              "Storage Table Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/76199698-9eea-4c19-bc75-cec21354c6b6",
              "Storage Table Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/0a9a7e1f-b9d0-4cc4-a60d-0319b160aaa3",
              "DICOM Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/e89c7a3c-2f64-4fa1-a847-3e4c9ba4283a",
              "DICOM Data Owner": "/providers/Microsoft.Authorization/roleDefinitions/58a3b984-7adf-4c20-983a-32417c86fbc8",
              "EventGrid Data Sender": "/providers/Microsoft.Authorization/roleDefinitions/d5a91429-5739-47e2-a06b-3470a27159e7",
              "Disk Pool Operator": "/providers/Microsoft.Authorization/roleDefinitions/60fc6e62-5479-42d4-8bf4-67625fcc2840",
              "AzureML Data Scientist": "/providers/Microsoft.Authorization/roleDefinitions/f6c7c914-8db3-469d-8ca1-694a8f32e121",
              "Grafana Admin": "/providers/Microsoft.Authorization/roleDefinitions/22926164-76b3-42b3-bc55-97df8dab3e41",
              "Azure Connected SQL Server Onboarding": "/providers/Microsoft.Authorization/roleDefinitions/e8113dce-c529-4d33-91fa-e9b972617508",
              "Azure Relay Sender": "/providers/Microsoft.Authorization/roleDefinitions/26baccc8-eea7-41f1-98f4-1762cc7f685d",
              "Azure Relay Owner": "/providers/Microsoft.Authorization/roleDefinitions/2787bf04-f1f5-4bfe-8383-c8a24483ee38",
              "Azure Relay Listener": "/providers/Microsoft.Authorization/roleDefinitions/26e0b698-aa6d-4085-9386-aadae190014d",
              "Grafana Viewer": "/providers/Microsoft.Authorization/roleDefinitions/60921a7e-fef1-4a43-9b16-a26c52ad4769",
              "Grafana Editor": "/providers/Microsoft.Authorization/roleDefinitions/a79a5197-3a5c-4973-a920-486035ffd60f",
              "Automation Contributor": "/providers/Microsoft.Authorization/roleDefinitions/f353d9bd-d4a6-484e-a77a-8050b599b867",
              "Kubernetes Extension Contributor": "/providers/Microsoft.Authorization/roleDefinitions/85cb6faf-e071-4c9b-8136-154b5a04f717",
              "Device Provisioning Service Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/10745317-c249-44a1-a5ce-3a4353c0bbd8",
              "Device Provisioning Service Data Contributor": "/providers/Microsoft.Authorization/roleDefinitions/dfce44e4-17b7-4bd1-a6d1-04996ec95633",
              "CodeSigning Certificate Profile Signer": "/providers/Microsoft.Authorization/roleDefinitions/2837e146-70d7-4cfd-ad55-7efa6464f958",
              "Azure Spring Cloud Service Registry Reader": "/providers/Microsoft.Authorization/roleDefinitions/cff1b556-2399-4e7e-856d-a8f754be7b65",
              "Azure Spring Cloud Service Registry Contributor": "/providers/Microsoft.Authorization/roleDefinitions/f5880b48-c26d-48be-b172-7927bfa1c8f1",
              "Azure Spring Cloud Config Server Reader": "/providers/Microsoft.Authorization/roleDefinitions/d04c6db6-4947-4782-9e91-30a88feb7be7",
              "Azure Spring Cloud Config Server Contributor": "/providers/Microsoft.Authorization/roleDefinitions/a06f5c24-21a7-4e1a-aa2b-f19eb6684f5b",
              "Azure VM Managed identities restore Contributor": "/providers/Microsoft.Authorization/roleDefinitions/6ae96244-5829-4925-a7d3-5975537d91dd",
              "Azure Maps Search and Render Data Reader": "/providers/Microsoft.Authorization/roleDefinitions/6be48352-4f82-47c9-ad5e-0acacefdb005",
              "Azure Maps Contributor": "/providers/Microsoft.Authorization/roleDefinitions/dba33070-676a-4fb0-87fa-064dc56ff7fb"
            },
            "roleDefinitionId_var": "[if(contains(variables('builtInRoleNames_var'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames_var')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]"
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "name": "[guid(parameters('subscriptionId'), parameters('resourceGroupName'), variables('roleDefinitionId_var'), parameters('principalId'))]",
              "properties": {
                "roleDefinitionId": "[variables('roleDefinitionId_var')]",
                "principalId": "[parameters('principalId')]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]",
                "delegatedManagedIdentityResourceId": "[if(not(empty(parameters('delegatedManagedIdentityResourceId'))), parameters('delegatedManagedIdentityResourceId'), null())]",
                "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
                "condition": "[if(not(empty(parameters('condition'))), parameters('condition'), null())]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[guid(parameters('subscriptionId'), parameters('resourceGroupName'), variables('roleDefinitionId_var'), parameters('principalId'))]",
              "metadata": {
                "description": "The GUID of the Role Assignment"
              }
            },
            "scope": {
              "type": "string",
              "value": "[resourceGroup().id]",
              "metadata": {
                "description": "The resource ID of the Role Assignment"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId(parameters('resourceGroupName'), 'Microsoft.Authorization/roleAssignments', guid(parameters('subscriptionId'), parameters('resourceGroupName'), variables('roleDefinitionId_var'), parameters('principalId')))]",
              "metadata": {
                "description": "The scope this Role Assignment applies to"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The name of the resource group the role assignment was applied at"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('sharedServicesSubId'), 'Microsoft.Resources/deployments', format('Role-Definition_{0}_{1}', range(0, length(variables('varRoles')))[range(0, length(variables('varRoles')))[copyIndex()]], parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('User-Assigned-Managed-Identity_{0}', parameters('time')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Compute-Gallery_{0}', parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('varImageGalleryName')]"
          },
          "location": {
            "value": "[parameters('sharedServicesLocation')]"
          },
          "galleryDescription": {
            "value": "Azure Virtual Desktops Images"
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "15356750087209843483"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Azure Shared Image Gallery"
              },
              "minLength": 1
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "galleryDescription": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Description of the Azure Shared Image Gallery"
              }
            },
            "images": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Images to create"
              }
            },
            "lock": {
              "type": "string",
              "defaultValue": "NotSpecified",
              "metadata": {
                "description": "Optional. Specify the type of lock."
              },
              "allowedValues": [
                "CanNotDelete",
                "NotSpecified",
                "ReadOnly"
              ]
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags for all resources."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Compute/galleries",
              "apiVersion": "2020-09-30",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "description": "[parameters('galleryDescription')]",
                "identifier": {}
              }
            },
            {
              "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2017-04-01",
              "scope": "[format('Microsoft.Compute/galleries/{0}', parameters('name'))]",
              "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
              "properties": {
                "level": "[parameters('lock')]",
                "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "gallery_rbac",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-Gallery-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "description": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
                  },
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "principalType": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "resourceId": {
                    "value": "[resourceId('Microsoft.Compute/galleries', parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "11246476276625673255"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array",
                      "metadata": {
                        "description": "Required. The IDs of the prinicpals to assign to role to"
                      }
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead"
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The resource ID of the resource to apply the role assignment to"
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup",
                        "Device",
                        ""
                      ],
                      "metadata": {
                        "description": "Optional. The principal type of the assigned principal ID."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Description of role assignment"
                      }
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "Reservation Purchaser": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f7b75c60-3036-4b75-91c3-6b41c27c1689')]",
                      "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2021-04-01-preview",
                      "scope": "[format('Microsoft.Compute/galleries/{0}', last(split(parameters('resourceId'), '/')))]",
                      "name": "[guid(last(split(parameters('resourceId'), '/')), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "description": "[parameters('description')]",
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]",
                        "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "galleries_images",
                "count": "[length(parameters('images'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-Gallery-Image-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('images')[copyIndex()].name]"
                  },
                  "galleryName": {
                    "value": "[parameters('name')]"
                  },
                  "osType": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'osType'), parameters('images')[copyIndex()].osType, 'Windows')]"
                  },
                  "osState": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'osState'), parameters('images')[copyIndex()].osState, 'Generalized')]"
                  },
                  "publisher": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'publisher'), parameters('images')[copyIndex()].publisher, 'MicrosoftWindowsServer')]"
                  },
                  "offer": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'offer'), parameters('images')[copyIndex()].offer, 'WindowsServer')]"
                  },
                  "sku": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'sku'), parameters('images')[copyIndex()].sku, '2019-Datacenter')]"
                  },
                  "minRecommendedvCPUs": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'minRecommendedvCPUs'), parameters('images')[copyIndex()].minRecommendedvCPUs, 1)]"
                  },
                  "maxRecommendedvCPUs": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'maxRecommendedvCPUs'), parameters('images')[copyIndex()].maxRecommendedvCPUs, 4)]"
                  },
                  "minRecommendedMemory": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'minRecommendedMemory'), parameters('images')[copyIndex()].minRecommendedMemory, 4)]"
                  },
                  "maxRecommendedMemory": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'maxRecommendedMemory'), parameters('images')[copyIndex()].maxRecommendedMemory, 16)]"
                  },
                  "hyperVGeneration": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'hyperVGeneration'), parameters('images')[copyIndex()].hyperVGeneration, 'V1')]"
                  },
                  "imageDefinitionDescription": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'imageDefinitionDescription'), parameters('images')[copyIndex()].imageDefinitionDescription, '')]"
                  },
                  "eula": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'eula'), parameters('images')[copyIndex()].eula, '')]"
                  },
                  "privacyStatementUri": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'privacyStatementUri'), parameters('images')[copyIndex()].privacyStatementUri, '')]"
                  },
                  "releaseNoteUri": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'releaseNoteUri'), parameters('images')[copyIndex()].releaseNoteUri, '')]"
                  },
                  "productName": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'productName'), parameters('images')[copyIndex()].productName, '')]"
                  },
                  "planName": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'planName'), parameters('images')[copyIndex()].planName, '')]"
                  },
                  "planPublisherName": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'planPublisherName'), parameters('images')[copyIndex()].planPublisherName, '')]"
                  },
                  "endOfLife": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'endOfLife'), parameters('images')[copyIndex()].endOfLife, '')]"
                  },
                  "excludedDiskTypes": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'excludedDiskTypes'), parameters('images')[copyIndex()].excludedDiskTypes, createArray())]"
                  },
                  "roleAssignments": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'roleAssignments'), parameters('images')[copyIndex()].roleAssignments, createArray())]"
                  },
                  "tags": {
                    "value": "[if(contains(parameters('images')[copyIndex()], 'tags'), parameters('images')[copyIndex()].tags, createObject())]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[parameters('enableDefaultTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "3746783456014250418"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the image definition."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Location for all resources."
                      }
                    },
                    "galleryName": {
                      "type": "string",
                      "minLength": 1,
                      "metadata": {
                        "description": "Required. Name of the Azure Shared Image Gallery"
                      }
                    },
                    "osType": {
                      "type": "string",
                      "defaultValue": "Windows",
                      "allowedValues": [
                        "Windows",
                        "Linux"
                      ],
                      "metadata": {
                        "description": "Optional. OS type of the image to be created."
                      }
                    },
                    "osState": {
                      "type": "string",
                      "defaultValue": "Generalized",
                      "allowedValues": [
                        "Generalized",
                        "Specialized"
                      ],
                      "metadata": {
                        "description": "Optional. This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'."
                      }
                    },
                    "publisher": {
                      "type": "string",
                      "defaultValue": "MicrosoftWindowsServer",
                      "metadata": {
                        "description": "Optional. The name of the gallery Image Definition publisher."
                      }
                    },
                    "offer": {
                      "type": "string",
                      "defaultValue": "WindowsServer",
                      "metadata": {
                        "description": "Optional. The name of the gallery Image Definition offer."
                      }
                    },
                    "sku": {
                      "type": "string",
                      "defaultValue": "2019-Datacenter",
                      "metadata": {
                        "description": "Optional. The name of the gallery Image Definition SKU."
                      }
                    },
                    "minRecommendedvCPUs": {
                      "type": "int",
                      "defaultValue": 1,
                      "maxValue": 128,
                      "minValue": 1,
                      "metadata": {
                        "description": "Optional. The minimum number of the CPU cores recommended for this image."
                      }
                    },
                    "maxRecommendedvCPUs": {
                      "type": "int",
                      "defaultValue": 4,
                      "maxValue": 128,
                      "minValue": 1,
                      "metadata": {
                        "description": "Optional. The maximum number of the CPU cores recommended for this image."
                      }
                    },
                    "minRecommendedMemory": {
                      "type": "int",
                      "defaultValue": 4,
                      "maxValue": 4000,
                      "minValue": 1,
                      "metadata": {
                        "description": "Optional. The minimum amount of RAM in GB recommended for this image."
                      }
                    },
                    "maxRecommendedMemory": {
                      "type": "int",
                      "defaultValue": 16,
                      "maxValue": 4000,
                      "minValue": 1,
                      "metadata": {
                        "description": "Optional. The maximum amount of RAM in GB recommended for this image."
                      }
                    },
                    "hyperVGeneration": {
                      "type": "string",
                      "defaultValue": "V1",
                      "allowedValues": [
                        "V1",
                        "V2"
                      ],
                      "metadata": {
                        "description": "Optional. The hypervisor generation of the Virtual Machine. Applicable to OS disks only. - V1 or V2"
                      }
                    },
                    "imageDefinitionDescription": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of this gallery Image Definition resource. This property is updatable."
                      }
                    },
                    "eula": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The Eula agreement for the gallery Image Definition. Has to be a valid URL."
                      }
                    },
                    "privacyStatementUri": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The privacy statement uri. Has to be a valid URL."
                      }
                    },
                    "releaseNoteUri": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The release note uri. Has to be a valid URL."
                      }
                    },
                    "productName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The product ID."
                      }
                    },
                    "planName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The plan ID."
                      }
                    },
                    "planPublisherName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The publisher ID."
                      }
                    },
                    "endOfLife": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable. Allowed format: 2020-01-10T23:00:00.000Z"
                      }
                    },
                    "excludedDiskTypes": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. List of the excluded disk types. E.g. Standard_LRS"
                      }
                    },
                    "roleAssignments": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags for all resources."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Compute/galleries/images",
                      "apiVersion": "2020-09-30",
                      "name": "[format('{0}/{1}', parameters('galleryName'), parameters('name'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "osType": "[parameters('osType')]",
                        "osState": "[parameters('osState')]",
                        "identifier": {
                          "publisher": "[parameters('publisher')]",
                          "offer": "[parameters('offer')]",
                          "sku": "[parameters('sku')]"
                        },
                        "recommended": {
                          "vCPUs": {
                            "min": "[parameters('minRecommendedvCPUs')]",
                            "max": "[parameters('maxRecommendedvCPUs')]"
                          },
                          "memory": {
                            "min": "[parameters('minRecommendedMemory')]",
                            "max": "[parameters('maxRecommendedMemory')]"
                          }
                        },
                        "hyperVGeneration": "[parameters('hyperVGeneration')]",
                        "description": "[parameters('imageDefinitionDescription')]",
                        "eula": "[parameters('eula')]",
                        "privacyStatementUri": "[parameters('privacyStatementUri')]",
                        "releaseNoteUri": "[parameters('releaseNoteUri')]",
                        "purchasePlan": {
                          "product": "[if(not(empty(parameters('productName'))), parameters('productName'), null())]",
                          "name": "[if(not(empty(parameters('planName'))), parameters('planName'), null())]",
                          "publisher": "[if(not(empty(parameters('planPublisherName'))), parameters('planPublisherName'), null())]"
                        },
                        "endOfLifeDate": "[parameters('endOfLife')]",
                        "disallowed": {
                          "diskTypes": "[parameters('excludedDiskTypes')]"
                        }
                      }
                    },
                    {
                      "copy": {
                        "name": "galleryImage_rbac",
                        "count": "[length(parameters('roleAssignments'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-Rbac-{1}', deployment().name, copyIndex())]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "description": {
                            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
                          },
                          "principalIds": {
                            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                          },
                          "principalType": {
                            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
                          },
                          "roleDefinitionIdOrName": {
                            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                          },
                          "resourceId": {
                            "value": "[resourceId('Microsoft.Compute/galleries/images', parameters('galleryName'), parameters('name'))]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.11.1.770",
                              "templateHash": "15279393836706496578"
                            }
                          },
                          "parameters": {
                            "principalIds": {
                              "type": "array",
                              "metadata": {
                                "description": "Required. The IDs of the prinicpals to assign to role to"
                              }
                            },
                            "roleDefinitionIdOrName": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead"
                              }
                            },
                            "resourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. The resource ID of the resource to apply the role assignment to"
                              }
                            },
                            "principalType": {
                              "type": "string",
                              "defaultValue": "",
                              "allowedValues": [
                                "ServicePrincipal",
                                "Group",
                                "User",
                                "ForeignGroup",
                                "Device",
                                ""
                              ],
                              "metadata": {
                                "description": "Optional. The principal type of the assigned principal ID."
                              }
                            },
                            "description": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional. Description of role assignment"
                              }
                            }
                          },
                          "variables": {
                            "builtInRoleNames": {
                              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                              "Avere Cluster Create": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a7b1b19a-0e83-4fe5-935c-faaefbfd18c3')]",
                              "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
                              "Azure Service Deploy Release Management Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '21d96096-b162-414a-8302-d8354f9d91b2')]",
                              "CAL-Custom-Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7b266cd7-0bba-4ae2-8423-90ede5e1e898')]",
                              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                              "masterreader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a48d7796-14b4-4889-afef-fbb65a93e5a2')]",
                              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                              "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                              "myCustomRoleAtSub": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '60cb79d9-783a-50a4-9f05-d4c579fb8ce3')]"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "roleAssignment",
                                "count": "[length(parameters('principalIds'))]"
                              },
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2021-04-01-preview",
                              "scope": "[format('Microsoft.Compute/galleries/{0}/images/{1}', split(format('{0}/{1}', split(parameters('resourceId'), '/')[8], split(parameters('resourceId'), '/')[10]), '/')[0], split(format('{0}/{1}', split(parameters('resourceId'), '/')[8], split(parameters('resourceId'), '/')[10]), '/')[1])]",
                              "name": "[guid(format('{0}/{1}', split(parameters('resourceId'), '/')[8], split(parameters('resourceId'), '/')[10]), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                              "properties": {
                                "description": "[parameters('description')]",
                                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                                "principalId": "[parameters('principalIds')[copyIndex()]]",
                                "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Compute/galleries/images', parameters('galleryName'), parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group the image was deployed into"
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Compute/galleries/images', parameters('galleryName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the image"
                      }
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the image"
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/galleries', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the deployed image gallery"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group of the deployed image gallery"
              }
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the deployed image gallery"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('sharedServicesSubId'), 'Microsoft.Resources/deployments', format('Resource-Group_{0}', parameters('time')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Image-Definition_{0}', parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "galleryName": {
            "value": "[if(parameters('sharedImage'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Compute-Gallery_{0}', parameters('time')))).outputs.name.value, '')]"
          },
          "name": {
            "value": "[variables('varImageDefinitionName')]"
          },
          "osState": {
            "value": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].osState]"
          },
          "osType": {
            "value": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].osType]"
          },
          "publisher": {
            "value": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].publisher]"
          },
          "offer": {
            "value": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].offer]"
          },
          "sku": {
            "value": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].sku]"
          },
          "location": {
            "value": "[parameters('aibLocation')]"
          },
          "hyperVGeneration": {
            "value": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].hyperVGeneration]"
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "3746783456014250418"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the image definition."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "galleryName": {
              "type": "string",
              "minLength": 1,
              "metadata": {
                "description": "Required. Name of the Azure Shared Image Gallery"
              }
            },
            "osType": {
              "type": "string",
              "defaultValue": "Windows",
              "allowedValues": [
                "Windows",
                "Linux"
              ],
              "metadata": {
                "description": "Optional. OS type of the image to be created."
              }
            },
            "osState": {
              "type": "string",
              "defaultValue": "Generalized",
              "allowedValues": [
                "Generalized",
                "Specialized"
              ],
              "metadata": {
                "description": "Optional. This property allows the user to specify whether the virtual machines created under this image are 'Generalized' or 'Specialized'."
              }
            },
            "publisher": {
              "type": "string",
              "defaultValue": "MicrosoftWindowsServer",
              "metadata": {
                "description": "Optional. The name of the gallery Image Definition publisher."
              }
            },
            "offer": {
              "type": "string",
              "defaultValue": "WindowsServer",
              "metadata": {
                "description": "Optional. The name of the gallery Image Definition offer."
              }
            },
            "sku": {
              "type": "string",
              "defaultValue": "2019-Datacenter",
              "metadata": {
                "description": "Optional. The name of the gallery Image Definition SKU."
              }
            },
            "minRecommendedvCPUs": {
              "type": "int",
              "defaultValue": 1,
              "maxValue": 128,
              "minValue": 1,
              "metadata": {
                "description": "Optional. The minimum number of the CPU cores recommended for this image."
              }
            },
            "maxRecommendedvCPUs": {
              "type": "int",
              "defaultValue": 4,
              "maxValue": 128,
              "minValue": 1,
              "metadata": {
                "description": "Optional. The maximum number of the CPU cores recommended for this image."
              }
            },
            "minRecommendedMemory": {
              "type": "int",
              "defaultValue": 4,
              "maxValue": 4000,
              "minValue": 1,
              "metadata": {
                "description": "Optional. The minimum amount of RAM in GB recommended for this image."
              }
            },
            "maxRecommendedMemory": {
              "type": "int",
              "defaultValue": 16,
              "maxValue": 4000,
              "minValue": 1,
              "metadata": {
                "description": "Optional. The maximum amount of RAM in GB recommended for this image."
              }
            },
            "hyperVGeneration": {
              "type": "string",
              "defaultValue": "V1",
              "allowedValues": [
                "V1",
                "V2"
              ],
              "metadata": {
                "description": "Optional. The hypervisor generation of the Virtual Machine. Applicable to OS disks only. - V1 or V2"
              }
            },
            "imageDefinitionDescription": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of this gallery Image Definition resource. This property is updatable."
              }
            },
            "eula": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The Eula agreement for the gallery Image Definition. Has to be a valid URL."
              }
            },
            "privacyStatementUri": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The privacy statement uri. Has to be a valid URL."
              }
            },
            "releaseNoteUri": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The release note uri. Has to be a valid URL."
              }
            },
            "productName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The product ID."
              }
            },
            "planName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The plan ID."
              }
            },
            "planPublisherName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The publisher ID."
              }
            },
            "endOfLife": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The end of life date of the gallery Image Definition. This property can be used for decommissioning purposes. This property is updatable. Allowed format: 2020-01-10T23:00:00.000Z"
              }
            },
            "excludedDiskTypes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of the excluded disk types. E.g. Standard_LRS"
              }
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags for all resources."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Compute/galleries/images",
              "apiVersion": "2020-09-30",
              "name": "[format('{0}/{1}', parameters('galleryName'), parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "osType": "[parameters('osType')]",
                "osState": "[parameters('osState')]",
                "identifier": {
                  "publisher": "[parameters('publisher')]",
                  "offer": "[parameters('offer')]",
                  "sku": "[parameters('sku')]"
                },
                "recommended": {
                  "vCPUs": {
                    "min": "[parameters('minRecommendedvCPUs')]",
                    "max": "[parameters('maxRecommendedvCPUs')]"
                  },
                  "memory": {
                    "min": "[parameters('minRecommendedMemory')]",
                    "max": "[parameters('maxRecommendedMemory')]"
                  }
                },
                "hyperVGeneration": "[parameters('hyperVGeneration')]",
                "description": "[parameters('imageDefinitionDescription')]",
                "eula": "[parameters('eula')]",
                "privacyStatementUri": "[parameters('privacyStatementUri')]",
                "releaseNoteUri": "[parameters('releaseNoteUri')]",
                "purchasePlan": {
                  "product": "[if(not(empty(parameters('productName'))), parameters('productName'), null())]",
                  "name": "[if(not(empty(parameters('planName'))), parameters('planName'), null())]",
                  "publisher": "[if(not(empty(parameters('planPublisherName'))), parameters('planPublisherName'), null())]"
                },
                "endOfLifeDate": "[parameters('endOfLife')]",
                "disallowed": {
                  "diskTypes": "[parameters('excludedDiskTypes')]"
                }
              }
            },
            {
              "copy": {
                "name": "galleryImage_rbac",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-Rbac-{1}', deployment().name, copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "description": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
                  },
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "principalType": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "resourceId": {
                    "value": "[resourceId('Microsoft.Compute/galleries/images', parameters('galleryName'), parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "15279393836706496578"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array",
                      "metadata": {
                        "description": "Required. The IDs of the prinicpals to assign to role to"
                      }
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead"
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The resource ID of the resource to apply the role assignment to"
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup",
                        "Device",
                        ""
                      ],
                      "metadata": {
                        "description": "Optional. The principal type of the assigned principal ID."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Description of role assignment"
                      }
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Avere Cluster Create": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a7b1b19a-0e83-4fe5-935c-faaefbfd18c3')]",
                      "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
                      "Azure Service Deploy Release Management Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '21d96096-b162-414a-8302-d8354f9d91b2')]",
                      "CAL-Custom-Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7b266cd7-0bba-4ae2-8423-90ede5e1e898')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "masterreader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a48d7796-14b4-4889-afef-fbb65a93e5a2')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "myCustomRoleAtSub": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '60cb79d9-783a-50a4-9f05-d4c579fb8ce3')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2021-04-01-preview",
                      "scope": "[format('Microsoft.Compute/galleries/{0}/images/{1}', split(format('{0}/{1}', split(parameters('resourceId'), '/')[8], split(parameters('resourceId'), '/')[10]), '/')[0], split(format('{0}/{1}', split(parameters('resourceId'), '/')[8], split(parameters('resourceId'), '/')[10]), '/')[1])]",
                      "name": "[guid(format('{0}/{1}', split(parameters('resourceId'), '/')[8], split(parameters('resourceId'), '/')[10]), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "description": "[parameters('description')]",
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]",
                        "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Compute/galleries/images', parameters('galleryName'), parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group the image was deployed into"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Compute/galleries/images', parameters('galleryName'), parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the image"
              }
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the image"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('sharedServicesSubId'), 'Microsoft.Resources/deployments', format('Resource-Group_{0}', parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Compute-Gallery_{0}', parameters('time')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Image-Template_{0}', parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('varImageTemplateName')]"
          },
          "subnetId": {
            "value": "[if(and(not(empty(parameters('existingVirtualNetworkResourceId'))), not(empty(parameters('subnetName')))), format('{0}/subnets/{1}', parameters('existingVirtualNetworkResourceId'), parameters('subnetName')), '')]"
          },
          "userMsiName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('User-Assigned-Managed-Identity_{0}', parameters('time')))).outputs.name.value]"
          },
          "userMsiResourceGroup": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('User-Assigned-Managed-Identity_{0}', parameters('time')))).outputs.resourceGroupName.value]"
          },
          "location": {
            "value": "[parameters('aibLocation')]"
          },
          "imageReplicationRegions": {
            "value": "[if(equals(parameters('sharedServicesLocation'), parameters('aibLocation')), array(format('{0}', parameters('sharedServicesLocation'))), concat(array(format('{0}', parameters('aibLocation'))), array(format('{0}', parameters('sharedServicesLocation')))))]"
          },
          "sigImageDefinitionId": {
            "value": "[if(parameters('sharedImage'), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Image-Definition_{0}', parameters('time')))).outputs.resourceId.value, '')]"
          },
          "vmSize": {
            "value": "[variables('varVmSize')]"
          },
          "customizationSteps": {
            "value": "[variables('varCustomizationSteps')]"
          },
          "imageSource": {
            "value": {
              "type": "PlatformImage",
              "publisher": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].publisher]",
              "offer": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].offer]",
              "sku": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].sku]",
              "osAccountType": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].osAccountType]",
              "version": "latest"
            }
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "6253409140786498343"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Image Template to be built by the Azure Image Builder service."
              }
            },
            "userMsiName": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the User Assigned Identity to be used to deploy Image Templates in Azure Image Builder."
              }
            },
            "userMsiResourceGroup": {
              "type": "string",
              "defaultValue": "[resourceGroup().name]",
              "metadata": {
                "description": "Optional. Resource group of the user assigned identity."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "buildTimeoutInMinutes": {
              "type": "int",
              "defaultValue": 0,
              "maxValue": 960,
              "minValue": 0,
              "metadata": {
                "description": "Optional. Image build timeout in minutes. Allowed values: 0-960. 0 means the default 240 minutes."
              }
            },
            "vmSize": {
              "type": "string",
              "defaultValue": "Standard_D2s_v3",
              "metadata": {
                "description": "Optional. Specifies the size for the VM."
              }
            },
            "osDiskSizeGB": {
              "type": "int",
              "defaultValue": 128,
              "metadata": {
                "description": "Optional. Specifies the size of OS disk."
              }
            },
            "subnetId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of an already existing subnet, e.g. '/subscriptions/<subscriptionId>/resourceGroups/<resourceGroupName>/providers/Microsoft.Network/virtualNetworks/<vnetName>/subnets/<subnetName>'. If no value is provided, a new VNET will be created in the target Resource Group."
              }
            },
            "imageSource": {
              "type": "object",
              "metadata": {
                "description": "Required. Image source definition in object format."
              }
            },
            "customizationSteps": {
              "type": "array",
              "metadata": {
                "description": "Required. Customization steps to be run when building the VM image."
              }
            },
            "managedImageName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Name of the managed image that will be created in the AIB resourcegroup."
              }
            },
            "unManagedImageName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Name of the unmanaged image that will be created in the AIB resourcegroup."
              }
            },
            "sigImageDefinitionId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of Shared Image Gallery to distribute image to, e.g.: /subscriptions/<subscriptionID>/resourceGroups/<SIG resourcegroup>/providers/Microsoft.Compute/galleries/<SIG name>/images/<image definition>."
              }
            },
            "imageReplicationRegions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of the regions the image produced by this solution should be stored in the Shared Image Gallery. When left empty, the deployment's location will be taken as a default value."
              }
            },
            "lock": {
              "type": "string",
              "defaultValue": "NotSpecified",
              "metadata": {
                "description": "Optional. Specify the type of lock."
              },
              "allowedValues": [
                "CanNotDelete",
                "NotSpecified",
                "ReadOnly"
              ]
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "baseTime": {
              "type": "string",
              "defaultValue": "[utcNow('yyyy-MM-dd-HH-mm-ss')]",
              "metadata": {
                "description": "Generated. Do not provide a value! This date value is used to generate a unique image template name."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
              }
            }
          },
          "variables": {
            "managedImageName_var": "[format('{0}-{1}', parameters('managedImageName'), parameters('baseTime'))]",
            "managedImageId": "[format('/subscriptions/{0}/resourceGroups/{1}/providers/Microsoft.Compute/images/{2}', subscription().subscriptionId, resourceGroup().name, variables('managedImageName_var'))]",
            "imageReplicationRegions_var": "[if(empty(parameters('imageReplicationRegions')), array(parameters('location')), parameters('imageReplicationRegions'))]",
            "managedImage": {
              "type": "ManagedImage",
              "imageId": "[variables('managedImageId')]",
              "location": "[parameters('location')]",
              "runOutputName": "[format('{0}-ManagedImage', variables('managedImageName_var'))]",
              "artifactTags": {
                "sourceType": "[parameters('imageSource').type]",
                "sourcePublisher": "[if(contains(parameters('imageSource'), 'publisher'), parameters('imageSource').publisher, null())]",
                "sourceOffer": "[if(contains(parameters('imageSource'), 'offer'), parameters('imageSource').offer, null())]",
                "sourceSku": "[if(contains(parameters('imageSource'), 'sku'), parameters('imageSource').sku, null())]",
                "sourceVersion": "[if(contains(parameters('imageSource'), 'version'), parameters('imageSource').version, null())]",
                "sourceImageId": "[if(contains(parameters('imageSource'), 'imageId'), parameters('imageSource').imageId, null())]",
                "sourceImageVersionID": "[if(contains(parameters('imageSource'), 'imageVersionID'), parameters('imageSource').imageVersionID, null())]",
                "creationTime": "[parameters('baseTime')]"
              }
            },
            "conditionalManagedImage": "[if(empty(parameters('managedImageName')), createArray(), array(variables('managedImage')))]",
            "sharedImage": {
              "type": "SharedImage",
              "galleryImageId": "[parameters('sigImageDefinitionId')]",
              "runOutputName": "[if(not(empty(parameters('sigImageDefinitionId'))), format('{0}-SharedImage', split(parameters('sigImageDefinitionId'), '/')[10]), 'SharedImage')]",
              "artifactTags": {
                "sourceType": "[parameters('imageSource').type]",
                "sourcePublisher": "[if(contains(parameters('imageSource'), 'publisher'), parameters('imageSource').publisher, null())]",
                "sourceOffer": "[if(contains(parameters('imageSource'), 'offer'), parameters('imageSource').offer, null())]",
                "sourceSku": "[if(contains(parameters('imageSource'), 'sku'), parameters('imageSource').sku, null())]",
                "sourceVersion": "[if(contains(parameters('imageSource'), 'version'), parameters('imageSource').version, null())]",
                "sourceImageId": "[if(contains(parameters('imageSource'), 'imageId'), parameters('imageSource').imageId, null())]",
                "sourceImageVersionID": "[if(contains(parameters('imageSource'), 'imageVersionID'), parameters('imageSource').imageVersionID, null())]",
                "creationTime": "[parameters('baseTime')]"
              },
              "replicationRegions": "[variables('imageReplicationRegions_var')]"
            },
            "conditionalSharedImage": "[if(empty(parameters('sigImageDefinitionId')), createArray(), array(variables('sharedImage')))]",
            "unManagedImage": {
              "type": "VHD",
              "runOutputName": "[format('{0}-VHD', parameters('unManagedImageName'))]",
              "artifactTags": {
                "sourceType": "[parameters('imageSource').type]",
                "sourcePublisher": "[if(contains(parameters('imageSource'), 'publisher'), parameters('imageSource').publisher, null())]",
                "sourceOffer": "[if(contains(parameters('imageSource'), 'offer'), parameters('imageSource').offer, null())]",
                "sourceSku": "[if(contains(parameters('imageSource'), 'sku'), parameters('imageSource').sku, null())]",
                "sourceVersion": "[if(contains(parameters('imageSource'), 'version'), parameters('imageSource').version, null())]",
                "sourceImageId": "[if(contains(parameters('imageSource'), 'imageId'), parameters('imageSource').imageId, null())]",
                "sourceImageVersionID": "[if(contains(parameters('imageSource'), 'imageVersionID'), parameters('imageSource').imageVersionID, null())]",
                "creationTime": "[parameters('baseTime')]"
              }
            },
            "conditionalUnManagedImage": "[if(empty(parameters('unManagedImageName')), createArray(), array(variables('unManagedImage')))]",
            "distribute": "[concat(variables('conditionalManagedImage'), variables('conditionalSharedImage'), variables('conditionalUnManagedImage'))]",
            "vnetConfig": {
              "subnetId": "[parameters('subnetId')]"
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.VirtualMachineImages/imageTemplates",
              "apiVersion": "2020-02-14",
              "name": "[format('{0}-{1}', parameters('name'), parameters('baseTime'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": {
                "type": "UserAssigned",
                "userAssignedIdentities": {
                  "[format('{0}', resourceId(parameters('userMsiResourceGroup'), 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('userMsiName')))]": {}
                }
              },
              "properties": {
                "buildTimeoutInMinutes": "[parameters('buildTimeoutInMinutes')]",
                "vmProfile": {
                  "vmSize": "[parameters('vmSize')]",
                  "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                  "vnetConfig": "[if(not(empty(parameters('subnetId'))), variables('vnetConfig'), null())]"
                },
                "source": "[parameters('imageSource')]",
                "customize": "[parameters('customizationSteps')]",
                "distribute": "[variables('distribute')]"
              }
            },
            {
              "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2017-04-01",
              "scope": "[format('Microsoft.VirtualMachineImages/imageTemplates/{0}', format('{0}-{1}', parameters('name'), parameters('baseTime')))]",
              "name": "[format('{0}-{1}-lock', format('{0}-{1}', parameters('name'), parameters('baseTime')), parameters('lock'))]",
              "properties": {
                "level": "[parameters('lock')]",
                "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.VirtualMachineImages/imageTemplates', format('{0}-{1}', parameters('name'), parameters('baseTime')))]"
              ]
            },
            {
              "copy": {
                "name": "imageTemplate_rbac",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ImageTemplate-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "description": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
                  },
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "principalType": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "resourceId": {
                    "value": "[resourceId('Microsoft.VirtualMachineImages/imageTemplates', format('{0}-{1}', parameters('name'), parameters('baseTime')))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "10011684216496135070"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array",
                      "metadata": {
                        "description": "Required. The IDs of the principals to assign the role to."
                      }
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The resource ID of the resource to apply the role assignment to."
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup",
                        "Device",
                        ""
                      ],
                      "metadata": {
                        "description": "Optional. The principal type of the assigned principal ID."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of the role assignment."
                      }
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2020-10-01-preview",
                      "scope": "[format('Microsoft.VirtualMachineImages/imageTemplates/{0}', last(split(parameters('resourceId'), '/')))]",
                      "name": "[guid(resourceId('Microsoft.VirtualMachineImages/imageTemplates', last(split(parameters('resourceId'), '/'))), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "description": "[parameters('description')]",
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]",
                        "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.VirtualMachineImages/imageTemplates', format('{0}-{1}', parameters('name'), parameters('baseTime')))]"
              ]
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.VirtualMachineImages/imageTemplates', format('{0}-{1}', parameters('name'), parameters('baseTime')))]",
              "metadata": {
                "description": "The resource ID of the image template."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group the image template was deployed into."
              }
            },
            "name": {
              "type": "string",
              "value": "[format('{0}-{1}', parameters('name'), parameters('baseTime'))]",
              "metadata": {
                "description": "The name of the image template."
              }
            },
            "runThisCommand": {
              "type": "string",
              "value": "[format('Invoke-AzResourceAction -ResourceName {0} -ResourceGroupName {1} -ResourceType Microsoft.VirtualMachineImages/imageTemplates -Action Run -Force', format('{0}-{1}', parameters('name'), parameters('baseTime')), resourceGroup().name)]",
              "metadata": {
                "description": "The command to run in order to trigger the image build."
              }
            },
            "location": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.VirtualMachineImages/imageTemplates', format('{0}-{1}', parameters('name'), parameters('baseTime'))), '2020-02-14', 'full').location]",
              "metadata": {
                "description": "The location the resource was deployed into."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('sharedServicesSubId'), 'Microsoft.Resources/deployments', format('Resource-Group_{0}', parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Compute-Gallery_{0}', parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Image-Definition_{0}', parameters('time')))]",
        "roleAssignments",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('User-Assigned-Managed-Identity_{0}', parameters('time')))]"
      ]
    },
    {
      "condition": "[and(parameters('enableMonitoringAlerts'), empty(parameters('existingLogAnalyticsWorkspaceResourceId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Log-Analytics-Workspace_{0}', parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('aibLocation')]"
          },
          "name": {
            "value": "[variables('varLogAnalyticsWorkspaceName')]"
          },
          "dataRetention": {
            "value": "[parameters('logAnalyticsWorkspaceDataRetention')]"
          },
          "useResourcePermissions": {
            "value": true
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "11457821678904637386"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Log Analytics workspace."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "serviceTier": {
              "type": "string",
              "defaultValue": "PerGB2018",
              "allowedValues": [
                "Free",
                "Standalone",
                "PerNode",
                "PerGB2018"
              ],
              "metadata": {
                "description": "Optional. Service Tier: PerGB2018, Free, Standalone, PerGB or PerNode."
              }
            },
            "storageInsightsConfigs": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of storage accounts to be read by the workspace."
              }
            },
            "linkedServices": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of services to be linked."
              }
            },
            "linkedStorageAccounts": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Conditional. List of Storage Accounts to be linked. Required if 'forceCmkForQuery' is set to 'true' and 'savedSearches' is not empty."
              }
            },
            "savedSearches": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Kusto Query Language searches to save."
              }
            },
            "dataSources": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. LAW data sources to configure."
              }
            },
            "gallerySolutions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of gallerySolutions to be created in the log analytics workspace."
              }
            },
            "dataRetention": {
              "type": "int",
              "defaultValue": 365,
              "maxValue": 730,
              "minValue": 0,
              "metadata": {
                "description": "Optional. Number of days data will be retained for."
              }
            },
            "dailyQuotaGb": {
              "type": "int",
              "defaultValue": -1,
              "minValue": -1,
              "metadata": {
                "description": "Optional. The workspace daily quota for ingestion."
              }
            },
            "publicNetworkAccessForIngestion": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Optional. The network access type for accessing Log Analytics ingestion."
              }
            },
            "publicNetworkAccessForQuery": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Optional. The network access type for accessing Log Analytics query."
              }
            },
            "useResourcePermissions": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Optional. Set to 'true' to use resource or workspace permissions and 'false' (or leave empty) to require workspace permissions."
              }
            },
            "diagnosticLogsRetentionInDays": {
              "type": "int",
              "defaultValue": 365,
              "maxValue": 365,
              "minValue": 0,
              "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
              }
            },
            "diagnosticStorageAccountId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of the diagnostic storage account."
              }
            },
            "diagnosticWorkspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of a log analytics workspace."
              }
            },
            "diagnosticEventHubAuthorizationRuleId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of the diagnostic event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
              }
            },
            "diagnosticEventHubName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Name of the diagnostic event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
              }
            },
            "forceCmkForQuery": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Indicates whether customer managed storage is mandatory for query management."
              }
            },
            "lock": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Specify the type of lock."
              },
              "allowedValues": [
                "",
                "CanNotDelete",
                "ReadOnly"
              ]
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            },
            "diagnosticLogCategoriesToEnable": {
              "type": "array",
              "defaultValue": [
                "Audit"
              ],
              "allowedValues": [
                "Audit"
              ],
              "metadata": {
                "description": "Optional. The name of logs that will be streamed."
              }
            },
            "diagnosticMetricsToEnable": {
              "type": "array",
              "defaultValue": [
                "AllMetrics"
              ],
              "allowedValues": [
                "AllMetrics"
              ],
              "metadata": {
                "description": "Optional. The name of metrics that will be streamed."
              }
            },
            "diagnosticSettingsName": {
              "type": "string",
              "defaultValue": "[format('{0}-diagnosticSettings', parameters('name'))]",
              "metadata": {
                "description": "Optional. The name of the diagnostic setting, if deployed."
              }
            }
          },
          "variables": {
            "copy": [
              {
                "name": "diagnosticsLogs",
                "count": "[length(parameters('diagnosticLogCategoriesToEnable'))]",
                "input": {
                  "category": "[parameters('diagnosticLogCategoriesToEnable')[copyIndex('diagnosticsLogs')]]",
                  "enabled": true,
                  "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                  }
                }
              },
              {
                "name": "diagnosticsMetrics",
                "count": "[length(parameters('diagnosticMetricsToEnable'))]",
                "input": {
                  "category": "[parameters('diagnosticMetricsToEnable')[copyIndex('diagnosticsMetrics')]]",
                  "timeGrain": null,
                  "enabled": true,
                  "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                  }
                }
              }
            ],
            "logAnalyticsSearchVersion": 1,
            "enableReferencedModulesTelemetry": false
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.OperationalInsights/workspaces",
              "apiVersion": "2021-06-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "features": {
                  "searchVersion": "[variables('logAnalyticsSearchVersion')]",
                  "enableLogAccessUsingOnlyResourcePermissions": "[parameters('useResourcePermissions')]"
                },
                "sku": {
                  "name": "[parameters('serviceTier')]"
                },
                "retentionInDays": "[parameters('dataRetention')]",
                "workspaceCapping": {
                  "dailyQuotaGb": "[parameters('dailyQuotaGb')]"
                },
                "publicNetworkAccessForIngestion": "[parameters('publicNetworkAccessForIngestion')]",
                "publicNetworkAccessForQuery": "[parameters('publicNetworkAccessForQuery')]",
                "forceCmkForQuery": "[parameters('forceCmkForQuery')]"
              }
            },
            {
              "condition": "[or(or(or(not(empty(parameters('diagnosticStorageAccountId'))), not(empty(parameters('diagnosticWorkspaceId')))), not(empty(parameters('diagnosticEventHubAuthorizationRuleId')))), not(empty(parameters('diagnosticEventHubName'))))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('name'))]",
              "name": "[parameters('diagnosticSettingsName')]",
              "properties": {
                "storageAccountId": "[if(not(empty(parameters('diagnosticStorageAccountId'))), parameters('diagnosticStorageAccountId'), null())]",
                "workspaceId": "[if(not(empty(parameters('diagnosticWorkspaceId'))), parameters('diagnosticWorkspaceId'), null())]",
                "eventHubAuthorizationRuleId": "[if(not(empty(parameters('diagnosticEventHubAuthorizationRuleId'))), parameters('diagnosticEventHubAuthorizationRuleId'), null())]",
                "eventHubName": "[if(not(empty(parameters('diagnosticEventHubName'))), parameters('diagnosticEventHubName'), null())]",
                "metrics": "[variables('diagnosticsMetrics')]",
                "logs": "[variables('diagnosticsLogs')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('lock')))]",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2017-04-01",
              "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', parameters('name'))]",
              "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
              "properties": {
                "level": "[parameters('lock')]",
                "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "logAnalyticsWorkspace_storageInsightConfigs",
                "count": "[length(parameters('storageInsightsConfigs'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-LAW-StorageInsightsConfig-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('name')]"
                  },
                  "containers": {
                    "value": "[if(contains(parameters('storageInsightsConfigs')[copyIndex()], 'containers'), parameters('storageInsightsConfigs')[copyIndex()].containers, createArray())]"
                  },
                  "tables": {
                    "value": "[if(contains(parameters('storageInsightsConfigs')[copyIndex()], 'tables'), parameters('storageInsightsConfigs')[copyIndex()].tables, createArray())]"
                  },
                  "storageAccountId": {
                    "value": "[parameters('storageInsightsConfigs')[copyIndex()].storageAccountId]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "2308516749768954247"
                    }
                  },
                  "parameters": {
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Log Analytics workspace. Required if the template is used in a standalone deployment."
                      }
                    },
                    "name": {
                      "type": "string",
                      "defaultValue": "[format('{0}-stinsconfig', last(split(parameters('storageAccountId'), '/')))]",
                      "metadata": {
                        "description": "Optional. The name of the storage insights config."
                      }
                    },
                    "storageAccountId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The Azure Resource Manager ID of the storage account resource."
                      }
                    },
                    "containers": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. The names of the blob containers that the workspace should read."
                      }
                    },
                    "tables": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. The names of the Azure tables that the workspace should read."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to configure in the resource."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/storageInsightConfigs",
                      "apiVersion": "2020-08-01",
                      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "containers": "[parameters('containers')]",
                        "tables": "[parameters('tables')]",
                        "storageAccount": {
                          "id": "[parameters('storageAccountId')]",
                          "key": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', last(split(parameters('storageAccountId'), '/'))), '2021-06-01').keys[0].value]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces/storageInsightConfigs', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed storage insights configuration."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group where the storage insight configuration is deployed."
                      }
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the storage insights configuration."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "logAnalyticsWorkspace_linkedServices",
                "count": "[length(parameters('linkedServices'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-LAW-LinkedService-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('name')]"
                  },
                  "name": {
                    "value": "[parameters('linkedServices')[copyIndex()].name]"
                  },
                  "resourceId": {
                    "value": "[if(contains(parameters('linkedServices')[copyIndex()], 'resourceId'), parameters('linkedServices')[copyIndex()].resourceId, '')]"
                  },
                  "writeAccessResourceId": {
                    "value": "[if(contains(parameters('linkedServices')[copyIndex()], 'writeAccessResourceId'), parameters('linkedServices')[copyIndex()].writeAccessResourceId, '')]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "10989487653061022103"
                    }
                  },
                  "parameters": {
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Log Analytics workspace. Required if the template is used in a standalone deployment."
                      }
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the link."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Required. The resource ID of the resource that will be linked to the workspace. This should be used for linking resources which require read access."
                      }
                    },
                    "writeAccessResourceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The resource ID of the resource that will be linked to the workspace. This should be used for linking resources which require write access."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to configure in the resource."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
                      "apiVersion": "2020-08-01",
                      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "resourceId": "[parameters('resourceId')]",
                        "writeAccessResourceId": "[if(empty(parameters('writeAccessResourceId')), null(), parameters('writeAccessResourceId'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed linked service."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces/linkedServices', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed linked service."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group where the linked service is deployed."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "logAnalyticsWorkspace_linkedStorageAccounts",
                "count": "[length(parameters('linkedStorageAccounts'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-LAW-LinkedStorageAccount-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('name')]"
                  },
                  "name": {
                    "value": "[parameters('linkedStorageAccounts')[copyIndex()].name]"
                  },
                  "resourceId": {
                    "value": "[parameters('linkedStorageAccounts')[copyIndex()].resourceId]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "5722671671034810823"
                    }
                  },
                  "parameters": {
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Log Analytics workspace. Required if the template is used in a standalone deployment."
                      }
                    },
                    "name": {
                      "type": "string",
                      "allowedValues": [
                        "Query",
                        "Alerts",
                        "CustomLogs",
                        "AzureWatson"
                      ],
                      "metadata": {
                        "description": "Required. Name of the link."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The resource ID of the resource that will be linked to the workspace. This should be used for linking resources which require read access."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/linkedStorageAccounts",
                      "apiVersion": "2020-08-01",
                      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "properties": {
                        "storageAccountIds": [
                          "[parameters('resourceId')]"
                        ]
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed linked storage account."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces/linkedStorageAccounts', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed linked storage account."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group where the linked storage account is deployed."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "logAnalyticsWorkspace_savedSearches",
                "count": "[length(parameters('savedSearches'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-LAW-SavedSearch-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('name')]"
                  },
                  "name": {
                    "value": "[format('{0}{1}', parameters('savedSearches')[copyIndex()].name, uniqueString(deployment().name))]"
                  },
                  "etag": {
                    "value": "[if(contains(parameters('savedSearches')[copyIndex()], 'eTag'), parameters('savedSearches')[copyIndex()].etag, '*')]"
                  },
                  "displayName": {
                    "value": "[parameters('savedSearches')[copyIndex()].displayName]"
                  },
                  "category": {
                    "value": "[parameters('savedSearches')[copyIndex()].category]"
                  },
                  "query": {
                    "value": "[parameters('savedSearches')[copyIndex()].query]"
                  },
                  "functionAlias": {
                    "value": "[if(contains(parameters('savedSearches')[copyIndex()], 'functionAlias'), parameters('savedSearches')[copyIndex()].functionAlias, '')]"
                  },
                  "functionParameters": {
                    "value": "[if(contains(parameters('savedSearches')[copyIndex()], 'functionParameters'), parameters('savedSearches')[copyIndex()].functionParameters, '')]"
                  },
                  "version": {
                    "value": "[if(contains(parameters('savedSearches')[copyIndex()], 'version'), parameters('savedSearches')[copyIndex()].version, 2)]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "7100454327502621320"
                    }
                  },
                  "parameters": {
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Log Analytics workspace. Required if the template is used in a standalone deployment."
                      }
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the saved search."
                      }
                    },
                    "displayName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Display name for the search."
                      }
                    },
                    "category": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Query category."
                      }
                    },
                    "query": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Kusto Query to be stored."
                      }
                    },
                    "tags": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Tags to configure in the resource."
                      }
                    },
                    "functionAlias": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The function alias if query serves as a function."
                      }
                    },
                    "functionParameters": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The optional function parameters if query serves as a function. Value should be in the following format: \"param-name1:type1 = default_value1, param-name2:type2 = default_value2\". For more examples and proper syntax please refer to /azure/kusto/query/functions/user-defined-functions."
                      }
                    },
                    "version": {
                      "type": "int",
                      "defaultValue": 2,
                      "metadata": {
                        "description": "Optional. The version number of the query language."
                      }
                    },
                    "etag": {
                      "type": "string",
                      "defaultValue": "*",
                      "metadata": {
                        "description": "Optional. The ETag of the saved search. To override an existing saved search, use \"*\" or specify the current Etag."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/savedSearches",
                      "apiVersion": "2020-08-01",
                      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "properties": {
                        "etag": "[parameters('etag')]",
                        "tags": "[parameters('tags')]",
                        "displayName": "[parameters('displayName')]",
                        "category": "[parameters('category')]",
                        "query": "[parameters('query')]",
                        "functionAlias": "[parameters('functionAlias')]",
                        "functionParameters": "[parameters('functionParameters')]",
                        "version": "[parameters('version')]"
                      }
                    }
                  ],
                  "outputs": {
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces/savedSearches', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed saved search."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group where the saved search is deployed."
                      }
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed saved search."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]",
                "logAnalyticsWorkspace_linkedStorageAccounts"
              ]
            },
            {
              "copy": {
                "name": "logAnalyticsWorkspace_dataSources",
                "count": "[length(parameters('dataSources'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-LAW-DataSource-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('name')]"
                  },
                  "name": {
                    "value": "[parameters('dataSources')[copyIndex()].name]"
                  },
                  "kind": {
                    "value": "[parameters('dataSources')[copyIndex()].kind]"
                  },
                  "linkedResourceId": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'linkedResourceId'), parameters('dataSources')[copyIndex()].linkedResourceId, '')]"
                  },
                  "eventLogName": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'eventLogName'), parameters('dataSources')[copyIndex()].eventLogName, '')]"
                  },
                  "eventTypes": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'eventTypes'), parameters('dataSources')[copyIndex()].eventTypes, createArray())]"
                  },
                  "objectName": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'objectName'), parameters('dataSources')[copyIndex()].objectName, '')]"
                  },
                  "instanceName": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'instanceName'), parameters('dataSources')[copyIndex()].instanceName, '')]"
                  },
                  "intervalSeconds": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'intervalSeconds'), parameters('dataSources')[copyIndex()].intervalSeconds, 60)]"
                  },
                  "counterName": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'counterName'), parameters('dataSources')[copyIndex()].counterName, '')]"
                  },
                  "state": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'state'), parameters('dataSources')[copyIndex()].state, '')]"
                  },
                  "syslogName": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'syslogName'), parameters('dataSources')[copyIndex()].syslogName, '')]"
                  },
                  "syslogSeverities": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'syslogSeverities'), parameters('dataSources')[copyIndex()].syslogSeverities, createArray())]"
                  },
                  "performanceCounters": {
                    "value": "[if(contains(parameters('dataSources')[copyIndex()], 'performanceCounters'), parameters('dataSources')[copyIndex()].performanceCounters, createArray())]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "8396482534622813868"
                    }
                  },
                  "parameters": {
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Log Analytics workspace. Required if the template is used in a standalone deployment."
                      }
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the solution."
                      }
                    },
                    "kind": {
                      "type": "string",
                      "defaultValue": "AzureActivityLog",
                      "allowedValues": [
                        "AzureActivityLog",
                        "WindowsEvent",
                        "WindowsPerformanceCounter",
                        "IISLogs",
                        "LinuxSyslog",
                        "LinuxSyslogCollection",
                        "LinuxPerformanceObject",
                        "LinuxPerformanceCollection"
                      ],
                      "metadata": {
                        "description": "Required. The kind of the DataSource."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to configure in the resource."
                      }
                    },
                    "linkedResourceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Resource ID of the resource to be linked."
                      }
                    },
                    "eventLogName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Windows event log name to configure when kind is WindowsEvent."
                      }
                    },
                    "eventTypes": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Windows event types to configure when kind is WindowsEvent."
                      }
                    },
                    "objectName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Name of the object to configure when kind is WindowsPerformanceCounter or LinuxPerformanceObject."
                      }
                    },
                    "instanceName": {
                      "type": "string",
                      "defaultValue": "*",
                      "metadata": {
                        "description": "Optional. Name of the instance to configure when kind is WindowsPerformanceCounter or LinuxPerformanceObject."
                      }
                    },
                    "intervalSeconds": {
                      "type": "int",
                      "defaultValue": 60,
                      "metadata": {
                        "description": "Optional. Interval in seconds to configure when kind is WindowsPerformanceCounter or LinuxPerformanceObject."
                      }
                    },
                    "performanceCounters": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. List of counters to configure when the kind is LinuxPerformanceObject."
                      }
                    },
                    "counterName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Counter name to configure when kind is WindowsPerformanceCounter."
                      }
                    },
                    "state": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. State to configure when kind is IISLogs or LinuxSyslogCollection or LinuxPerformanceCollection."
                      }
                    },
                    "syslogName": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. System log to configure when kind is LinuxSyslog."
                      }
                    },
                    "syslogSeverities": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Severities to configure when kind is LinuxSyslog."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/dataSources",
                      "apiVersion": "2020-08-01",
                      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "kind": "[parameters('kind')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "linkedResourceId": "[if(and(not(empty(parameters('kind'))), equals(parameters('kind'), 'AzureActivityLog')), parameters('linkedResourceId'), null())]",
                        "eventLogName": "[if(and(not(empty(parameters('kind'))), equals(parameters('kind'), 'WindowsEvent')), parameters('eventLogName'), null())]",
                        "eventTypes": "[if(and(not(empty(parameters('kind'))), equals(parameters('kind'), 'WindowsEvent')), parameters('eventTypes'), null())]",
                        "objectName": "[if(and(not(empty(parameters('kind'))), or(equals(parameters('kind'), 'WindowsPerformanceCounter'), equals(parameters('kind'), 'LinuxPerformanceObject'))), parameters('objectName'), null())]",
                        "instanceName": "[if(and(not(empty(parameters('kind'))), or(equals(parameters('kind'), 'WindowsPerformanceCounter'), equals(parameters('kind'), 'LinuxPerformanceObject'))), parameters('instanceName'), null())]",
                        "intervalSeconds": "[if(and(not(empty(parameters('kind'))), or(equals(parameters('kind'), 'WindowsPerformanceCounter'), equals(parameters('kind'), 'LinuxPerformanceObject'))), parameters('intervalSeconds'), null())]",
                        "counterName": "[if(and(not(empty(parameters('kind'))), equals(parameters('kind'), 'WindowsPerformanceCounter')), parameters('counterName'), null())]",
                        "state": "[if(and(not(empty(parameters('kind'))), or(or(equals(parameters('kind'), 'IISLogs'), equals(parameters('kind'), 'LinuxSyslogCollection')), equals(parameters('kind'), 'LinuxPerformanceCollection'))), parameters('state'), null())]",
                        "syslogName": "[if(and(not(empty(parameters('kind'))), equals(parameters('kind'), 'LinuxSyslog')), parameters('syslogName'), null())]",
                        "syslogSeverities": "[if(and(not(empty(parameters('kind'))), or(equals(parameters('kind'), 'LinuxSyslog'), equals(parameters('kind'), 'LinuxPerformanceObject'))), parameters('syslogSeverities'), null())]",
                        "performanceCounters": "[if(and(not(empty(parameters('kind'))), equals(parameters('kind'), 'LinuxPerformanceObject')), parameters('performanceCounters'), null())]"
                      }
                    }
                  ],
                  "outputs": {
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces/dataSources', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed data source."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group where the data source is deployed."
                      }
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed data source."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('gallerySolutions')))]",
              "copy": {
                "name": "logAnalyticsWorkspace_solutions",
                "count": "[length(parameters('gallerySolutions'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-LAW-Solution-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('gallerySolutions')[copyIndex()].name]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "logAnalyticsWorkspaceName": {
                    "value": "[parameters('name')]"
                  },
                  "product": {
                    "value": "[if(contains(parameters('gallerySolutions')[copyIndex()], 'product'), parameters('gallerySolutions')[copyIndex()].product, 'OMSGallery')]"
                  },
                  "publisher": {
                    "value": "[if(contains(parameters('gallerySolutions')[copyIndex()], 'publisher'), parameters('gallerySolutions')[copyIndex()].publisher, 'Microsoft')]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "14616263177843561456"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the solution. For Microsoft published gallery solution the target solution resource name will be composed as `{name}({logAnalyticsWorkspaceName})`."
                      }
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the Log Analytics workspace where the solution will be deployed/enabled."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Location for all resources."
                      }
                    },
                    "product": {
                      "type": "string",
                      "defaultValue": "OMSGallery",
                      "metadata": {
                        "description": "Optional. The product of the deployed solution. For Microsoft published gallery solution it should be `OMSGallery` and the target solution resource product will be composed as `OMSGallery/{name}`. For third party solution, it can be anything. This is case sensitive."
                      }
                    },
                    "publisher": {
                      "type": "string",
                      "defaultValue": "Microsoft",
                      "metadata": {
                        "description": "Optional. The publisher name of the deployed solution. For Microsoft published gallery solution, it is `Microsoft`."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "variables": {
                    "solutionName": "[if(equals(parameters('publisher'), 'Microsoft'), format('{0}({1})', parameters('name'), parameters('logAnalyticsWorkspaceName')), parameters('name'))]",
                    "solutionProduct": "[if(equals(parameters('publisher'), 'Microsoft'), format('OMSGallery/{0}', parameters('name')), parameters('product'))]"
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.OperationsManagement/solutions",
                      "apiVersion": "2015-11-01-preview",
                      "name": "[variables('solutionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
                      },
                      "plan": {
                        "name": "[variables('solutionName')]",
                        "promotionCode": "",
                        "product": "[variables('solutionProduct')]",
                        "publisher": "[parameters('publisher')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[variables('solutionName')]",
                      "metadata": {
                        "description": "The name of the deployed solution."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationsManagement/solutions', variables('solutionName'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed solution."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group where the solution is deployed."
                      }
                    },
                    "location": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.OperationsManagement/solutions', variables('solutionName')), '2015-11-01-preview', 'full').location]",
                      "metadata": {
                        "description": "The location the resource was deployed into."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "logAnalyticsWorkspace_roleAssignments",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-LAW-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "description": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
                  },
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "principalType": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "condition": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'condition'), parameters('roleAssignments')[copyIndex()].condition, '')]"
                  },
                  "delegatedManagedIdentityResourceId": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'delegatedManagedIdentityResourceId'), parameters('roleAssignments')[copyIndex()].delegatedManagedIdentityResourceId, '')]"
                  },
                  "resourceId": {
                    "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "77811567399520992"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array",
                      "metadata": {
                        "description": "Required. The IDs of the principals to assign the role to."
                      }
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The resource ID of the resource to apply the role assignment to."
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup",
                        "Device",
                        ""
                      ],
                      "metadata": {
                        "description": "Optional. The principal type of the assigned principal ID."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of the role assignment."
                      }
                    },
                    "condition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\""
                      }
                    },
                    "conditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "allowedValues": [
                        "2.0"
                      ],
                      "metadata": {
                        "description": "Optional. Version of the condition."
                      }
                    },
                    "delegatedManagedIdentityResourceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Id of the delegated managed identity resource."
                      }
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Automation Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f353d9bd-d4a6-484e-a77a-8050b599b867')]",
                      "Azure Sentinel Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ab8e14d6-4a74-4a29-9ba8-549422addade')]",
                      "Azure Sentinel Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8d289c81-5878-46d4-8554-54e1e3d8b5cb')]",
                      "Azure Sentinel Responder": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3e150937-b8fe-4cfb-8069-0eaf05ecd056')]",
                      "Data Purger": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '150f5e0c-0603-4f03-8c7f-cf70034c4e90')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                      "Security Admin": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'fb1c8493-542b-48eb-b624-b4c8fea62acd')]",
                      "Security Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '39bc4728-0917-49c7-9d2c-d95423bc2eb4')]",
                      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.OperationalInsights/workspaces/{0}', last(split(parameters('resourceId'), '/')))]",
                      "name": "[guid(resourceId('Microsoft.OperationalInsights/workspaces', last(split(parameters('resourceId'), '/'))), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "description": "[parameters('description')]",
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]",
                        "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]",
                        "condition": "[if(not(empty(parameters('condition'))), parameters('condition'), null())]",
                        "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
                        "delegatedManagedIdentityResourceId": "[if(not(empty(parameters('delegatedManagedIdentityResourceId'))), parameters('delegatedManagedIdentityResourceId'), null())]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the deployed log analytics workspace."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group of the deployed log analytics workspace."
              }
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the deployed log analytics workspace."
              }
            },
            "logAnalyticsWorkspaceId": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('name'))).customerId]",
              "metadata": {
                "description": "The ID associated with the workspace."
              }
            },
            "location": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', parameters('name')), '2021-06-01', 'full').location]",
              "metadata": {
                "description": "The location the resource was deployed into."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('sharedServicesSubId'), 'Microsoft.Resources/deployments', format('Resource-Group_{0}', parameters('time')))]"
      ]
    },
    {
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Automation-Account_{0}', parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "diagnosticLogCategoriesToEnable": {
            "value": [
              "JobLogs",
              "JobStreams"
            ]
          },
          "diagnosticLogsRetentionInDays": {
            "value": 30
          },
          "diagnosticWorkspaceId": {
            "value": "[if(empty(parameters('distributionGroup')), '', if(empty(parameters('existingLogAnalyticsWorkspaceResourceId')), reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Log-Analytics-Workspace_{0}', parameters('time'))), '2020-10-01').outputs.resourceId.value, parameters('existingLogAnalyticsWorkspaceResourceId')))]"
          },
          "name": {
            "value": "[variables('varAutomationAccountName')]"
          },
          "jobSchedules": {
            "value": [
              {
                "parameters": {
                  "ClientId": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('User-Assigned-Managed-Identity_{0}', parameters('time')))).outputs.clientId.value]",
                  "EnvironmentName": "[environment().name]",
                  "ImageOffer": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].offer]",
                  "ImagePublisher": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].publisher]",
                  "ImageSku": "[variables('varOperatingSystemImageDefinitions')[parameters('operatingSystemImage')].sku]",
                  "Location": "[parameters('aibLocation')]",
                  "SubscriptionId": "[parameters('sharedServicesSubId')]",
                  "TemplateName": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Image-Template_{0}', parameters('time')))).outputs.name.value]",
                  "TemplateResourceGroupName": "[variables('varResourceGroupName')]",
                  "TenantId": "[subscription().tenantId]"
                },
                "runbookName": "AIB-Build-Automation",
                "scheduleName": "[variables('varImageTemplateName')]"
              }
            ]
          },
          "location": {
            "value": "[parameters('sharedServicesLocation')]"
          },
          "runbooks": {
            "value": [
              {
                "name": "AIB-Build-Automation",
                "description": "When this runbook is triggered, last build date is checked on the AIB image template.  If a new marketplace image has been released since that date, a new build is initiated. If a build has never been initiated then it will be start one.",
                "runbookType": "PowerShell",
                "uri": "https://raw.githubusercontent.com/jamasten/avdaccelerator/main/workload/scripts/New-AzureImageBuilderBuild.ps1",
                "version": "1.0.0.0"
              }
            ]
          },
          "schedules": {
            "value": [
              {
                "name": "[variables('varImageTemplateName')]",
                "frequency": "[if(equals(parameters('buildSchedule'), 'OneTime'), 'OneTime', 'Day')]",
                "interval": "[if(equals(parameters('buildSchedule'), 'OneTime'), 0, 1)]",
                "starttime": "[dateTimeAdd(parameters('time'), 'PT15M')]",
                "varTimeZone": "[variables('varTimeZone')]",
                "advancedSchedule": {}
              }
            ]
          },
          "skuName": {
            "value": "Free"
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          },
          "systemAssignedIdentity": {
            "value": false
          },
          "userAssignedIdentities": {
            "value": {
              "[format('{0}', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('User-Assigned-Managed-Identity_{0}', parameters('time')))).outputs.resourceId.value)]": {}
            }
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "13783267989946078561"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Automation Account."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "skuName": {
              "type": "string",
              "defaultValue": "Basic",
              "allowedValues": [
                "Free",
                "Basic"
              ],
              "metadata": {
                "description": "Optional. SKU name of the account."
              }
            },
            "cMKKeyVaultResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The resource ID of a key vault to reference a customer managed key for encryption from."
              }
            },
            "cMKKeyName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The name of the customer managed key to use for encryption."
              }
            },
            "cMKUserAssignedIdentityResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. User assigned identity to use when fetching the customer managed key. If not provided, a system-assigned identity can be used - but must be given access to the referenced key vault first."
              }
            },
            "cMKKeyVersion": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The version of the customer managed key to reference for encryption. If not provided, the latest key version is used."
              }
            },
            "modules": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of modules to be created in the automation account."
              }
            },
            "runbooks": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of runbooks to be created in the automation account."
              }
            },
            "schedules": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of schedules to be created in the automation account."
              }
            },
            "jobSchedules": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of jobSchedules to be created in the automation account."
              }
            },
            "variables": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of variables to be created in the automation account."
              }
            },
            "linkedWorkspaceResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. ID of the log analytics workspace to be linked to the deployed automation account."
              }
            },
            "gallerySolutions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of gallerySolutions to be created in the linked log analytics workspace."
              }
            },
            "softwareUpdateConfigurations": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of softwareUpdateConfigurations to be created in the automation account."
              }
            },
            "publicNetworkAccess": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "",
                "Enabled",
                "Disabled"
              ],
              "metadata": {
                "description": "Optional. Whether or not public network access is allowed for this resource. For security reasons it should be disabled. If not specified, it will be disabled by default if private endpoints are set."
              }
            },
            "disableLocalAuth": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Disable local authentication profile used within the resource."
              }
            },
            "privateEndpoints": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Configuration details for private endpoints. For security reasons, it is recommended to use private endpoints whenever possible."
              }
            },
            "diagnosticLogsRetentionInDays": {
              "type": "int",
              "defaultValue": 365,
              "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
              },
              "maxValue": 365,
              "minValue": 0
            },
            "diagnosticStorageAccountId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of the diagnostic storage account."
              }
            },
            "diagnosticWorkspaceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of the diagnostic log analytics workspace."
              }
            },
            "diagnosticEventHubAuthorizationRuleId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of the diagnostic event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
              }
            },
            "diagnosticEventHubName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Name of the diagnostic event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
              }
            },
            "systemAssignedIdentity": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Optional. Enables system assigned managed identity on the resource."
              }
            },
            "userAssignedIdentities": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The ID(s) to assign to the resource."
              }
            },
            "lock": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Specify the type of lock."
              },
              "allowedValues": [
                "",
                "CanNotDelete",
                "ReadOnly"
              ]
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the Automation Account resource."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            },
            "diagnosticLogCategoriesToEnable": {
              "type": "array",
              "defaultValue": [
                "JobLogs",
                "JobStreams",
                "DscNodeStatus"
              ],
              "allowedValues": [
                "JobLogs",
                "JobStreams",
                "DscNodeStatus"
              ],
              "metadata": {
                "description": "Optional. The name of logs that will be streamed."
              }
            },
            "diagnosticMetricsToEnable": {
              "type": "array",
              "defaultValue": [
                "AllMetrics"
              ],
              "allowedValues": [
                "AllMetrics"
              ],
              "metadata": {
                "description": "Optional. The name of metrics that will be streamed."
              }
            },
            "diagnosticSettingsName": {
              "type": "string",
              "defaultValue": "[format('{0}-diagnosticSettings', parameters('name'))]",
              "metadata": {
                "description": "Optional. The name of the diagnostic setting, if deployed."
              }
            }
          },
          "variables": {
            "copy": [
              {
                "name": "diagnosticsLogs",
                "count": "[length(parameters('diagnosticLogCategoriesToEnable'))]",
                "input": {
                  "category": "[parameters('diagnosticLogCategoriesToEnable')[copyIndex('diagnosticsLogs')]]",
                  "enabled": true,
                  "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                  }
                }
              },
              {
                "name": "diagnosticsMetrics",
                "count": "[length(parameters('diagnosticMetricsToEnable'))]",
                "input": {
                  "category": "[parameters('diagnosticMetricsToEnable')[copyIndex('diagnosticsMetrics')]]",
                  "timeGrain": null,
                  "enabled": true,
                  "retentionPolicy": {
                    "enabled": true,
                    "days": "[parameters('diagnosticLogsRetentionInDays')]"
                  }
                }
              }
            ],
            "enableReferencedModulesTelemetry": false,
            "identityType": "[if(parameters('systemAssignedIdentity'), if(not(empty(parameters('userAssignedIdentities'))), 'SystemAssigned,UserAssigned', 'SystemAssigned'), if(not(empty(parameters('userAssignedIdentities'))), 'UserAssigned', 'None'))]",
            "identity": "[if(not(equals(variables('identityType'), 'None')), createObject('type', variables('identityType'), 'userAssignedIdentities', if(not(empty(parameters('userAssignedIdentities'))), parameters('userAssignedIdentities'), null())), null())]"
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts",
              "apiVersion": "2021-06-22",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "identity": "[variables('identity')]",
              "properties": {
                "sku": {
                  "name": "[parameters('skuName')]"
                },
                "encryption": "[if(not(empty(parameters('cMKKeyName'))), createObject('keySource', 'Microsoft.KeyVault', 'identity', createObject('userAssignedIdentity', parameters('cMKUserAssignedIdentityResourceId')), 'keyVaultProperties', createObject('keyName', parameters('cMKKeyName'), 'keyVaultUri', reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('cMKKeyVaultResourceId'), '/')[2], split(parameters('cMKKeyVaultResourceId'), '/')[4]), 'Microsoft.KeyVault/vaults', last(split(parameters('cMKKeyVaultResourceId'), '/'))), '2021-10-01').vaultUri, 'keyVersion', if(not(empty(parameters('cMKKeyVersion'))), parameters('cMKKeyVersion'), last(split(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('cMKKeyVaultResourceId'), '/')[2], split(parameters('cMKKeyVaultResourceId'), '/')[4]), 'Microsoft.KeyVault/vaults/keys', split(format('{0}/{1}', last(split(parameters('cMKKeyVaultResourceId'), '/')), parameters('cMKKeyName')), '/')[0], split(format('{0}/{1}', last(split(parameters('cMKKeyVaultResourceId'), '/')), parameters('cMKKeyName')), '/')[1]), '2021-10-01').keyUriWithVersion, '/'))))), null())]",
                "publicNetworkAccess": "[if(not(empty(parameters('publicNetworkAccess'))), if(equals(parameters('publicNetworkAccess'), 'Disabled'), false(), true()), if(not(empty(parameters('privateEndpoints'))), false(), null()))]",
                "disableLocalAuth": "[parameters('disableLocalAuth')]"
              }
            },
            {
              "condition": "[not(empty(parameters('lock')))]",
              "type": "Microsoft.Authorization/locks",
              "apiVersion": "2017-04-01",
              "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('name'))]",
              "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
              "properties": {
                "level": "[parameters('lock')]",
                "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[or(or(or(not(empty(parameters('diagnosticStorageAccountId'))), not(empty(parameters('diagnosticWorkspaceId')))), not(empty(parameters('diagnosticEventHubAuthorizationRuleId')))), not(empty(parameters('diagnosticEventHubName'))))]",
              "type": "Microsoft.Insights/diagnosticSettings",
              "apiVersion": "2021-05-01-preview",
              "scope": "[format('Microsoft.Automation/automationAccounts/{0}', parameters('name'))]",
              "name": "[parameters('diagnosticSettingsName')]",
              "properties": {
                "storageAccountId": "[if(not(empty(parameters('diagnosticStorageAccountId'))), parameters('diagnosticStorageAccountId'), null())]",
                "workspaceId": "[if(not(empty(parameters('diagnosticWorkspaceId'))), parameters('diagnosticWorkspaceId'), null())]",
                "eventHubAuthorizationRuleId": "[if(not(empty(parameters('diagnosticEventHubAuthorizationRuleId'))), parameters('diagnosticEventHubAuthorizationRuleId'), null())]",
                "eventHubName": "[if(not(empty(parameters('diagnosticEventHubName'))), parameters('diagnosticEventHubName'), null())]",
                "metrics": "[variables('diagnosticsMetrics')]",
                "logs": "[variables('diagnosticsLogs')]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "automationAccount_modules",
                "count": "[length(parameters('modules'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-Module-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('modules')[copyIndex()].name]"
                  },
                  "automationAccountName": {
                    "value": "[parameters('name')]"
                  },
                  "version": {
                    "value": "[parameters('modules')[copyIndex()].version]"
                  },
                  "uri": {
                    "value": "[parameters('modules')[copyIndex()].uri]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "2560183311378928863"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the Automation Account module."
                      }
                    },
                    "automationAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Automation Account. Required if the template is used in a standalone deployment."
                      }
                    },
                    "uri": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Module package URI, e.g. https://www.powershellgallery.com/api/v2/package."
                      }
                    },
                    "version": {
                      "type": "string",
                      "defaultValue": "latest",
                      "metadata": {
                        "description": "Optional. Module version or specify latest to get the latest version."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Location for all resources."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags of the Automation Account resource."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Automation/automationAccounts/modules",
                      "apiVersion": "2020-01-13-preview",
                      "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('name'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "contentLink": {
                          "uri": "[if(not(equals(parameters('version'), 'latest')), format('{0}/{1}/{2}', parameters('uri'), parameters('name'), parameters('version')), format('{0}/{1}', parameters('uri'), parameters('name')))]",
                          "version": "[if(not(equals(parameters('version'), 'latest')), parameters('version'), null())]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed module."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Automation/automationAccounts/modules', parameters('automationAccountName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed module."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group of the deployed module."
                      }
                    },
                    "location": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Automation/automationAccounts/modules', parameters('automationAccountName'), parameters('name')), '2020-01-13-preview', 'full').location]",
                      "metadata": {
                        "description": "The location the resource was deployed into."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "automationAccount_schedules",
                "count": "[length(parameters('schedules'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-Schedule-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('schedules')[copyIndex()].name]"
                  },
                  "automationAccountName": {
                    "value": "[parameters('name')]"
                  },
                  "advancedSchedule": {
                    "value": "[if(contains(parameters('schedules')[copyIndex()], 'advancedSchedule'), parameters('schedules')[copyIndex()].advancedSchedule, null())]"
                  },
                  "scheduleDescription": {
                    "value": "[if(contains(parameters('schedules')[copyIndex()], 'description'), parameters('schedules')[copyIndex()].description, '')]"
                  },
                  "expiryTime": {
                    "value": "[if(contains(parameters('schedules')[copyIndex()], 'expiryTime'), parameters('schedules')[copyIndex()].expiryTime, '')]"
                  },
                  "frequency": {
                    "value": "[if(contains(parameters('schedules')[copyIndex()], 'frequency'), parameters('schedules')[copyIndex()].frequency, 'OneTime')]"
                  },
                  "interval": {
                    "value": "[if(contains(parameters('schedules')[copyIndex()], 'interval'), parameters('schedules')[copyIndex()].interval, 0)]"
                  },
                  "startTime": {
                    "value": "[if(contains(parameters('schedules')[copyIndex()], 'startTime'), parameters('schedules')[copyIndex()].startTime, '')]"
                  },
                  "timeZone": {
                    "value": "[if(contains(parameters('schedules')[copyIndex()], 'timeZone'), parameters('schedules')[copyIndex()].timeZone, '')]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "10213372487218874929"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the Automation Account schedule."
                      }
                    },
                    "automationAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Automation Account. Required if the template is used in a standalone deployment."
                      }
                    },
                    "advancedSchedule": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "monthDays": "Days of the month that the job should execute on. Must be between 1 and 31.",
                        "monthlyOccurrences": "Occurrences of days within a month.",
                        "weekDays": "Days of the week that the job should execute on.",
                        "description": "Optional. The properties of the create Advanced Schedule."
                      }
                    },
                    "scheduleDescription": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of the schedule."
                      }
                    },
                    "expiryTime": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The end time of the schedule."
                      }
                    },
                    "frequency": {
                      "type": "string",
                      "defaultValue": "OneTime",
                      "metadata": {
                        "description": "Optional. The frequency of the schedule."
                      },
                      "allowedValues": [
                        "Day",
                        "Hour",
                        "Minute",
                        "Month",
                        "OneTime",
                        "Week"
                      ]
                    },
                    "interval": {
                      "type": "int",
                      "defaultValue": 0,
                      "metadata": {
                        "description": "Optional. Anything."
                      }
                    },
                    "startTime": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The start time of the schedule."
                      }
                    },
                    "timeZone": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The time zone of the schedule."
                      }
                    },
                    "baseTime": {
                      "type": "string",
                      "defaultValue": "[utcNow('u')]",
                      "metadata": {
                        "description": "Generated. Time used as a basis for e.g. the schedule start date."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Automation/automationAccounts/schedules",
                      "apiVersion": "2020-01-13-preview",
                      "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('name'))]",
                      "properties": {
                        "advancedSchedule": "[if(not(empty(parameters('advancedSchedule'))), parameters('advancedSchedule'), null())]",
                        "description": "[if(not(empty(parameters('scheduleDescription'))), parameters('scheduleDescription'), null())]",
                        "expiryTime": "[if(not(empty(parameters('expiryTime'))), parameters('expiryTime'), null())]",
                        "frequency": "[if(not(empty(parameters('frequency'))), parameters('frequency'), 'OneTime')]",
                        "interval": "[if(not(equals(parameters('interval'), 0)), parameters('interval'), null())]",
                        "startTime": "[if(not(empty(parameters('startTime'))), parameters('startTime'), dateTimeAdd(parameters('baseTime'), 'PT10M'))]",
                        "timeZone": "[if(not(empty(parameters('timeZone'))), parameters('timeZone'), null())]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed schedule."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Automation/automationAccounts/schedules', parameters('automationAccountName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed schedule."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group of the deployed schedule."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "automationAccount_runbooks",
                "count": "[length(parameters('runbooks'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-Runbook-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('runbooks')[copyIndex()].name]"
                  },
                  "automationAccountName": {
                    "value": "[parameters('name')]"
                  },
                  "runbookType": {
                    "value": "[parameters('runbooks')[copyIndex()].runbookType]"
                  },
                  "runbookDescription": {
                    "value": "[if(contains(parameters('runbooks')[copyIndex()], 'description'), parameters('runbooks')[copyIndex()].description, '')]"
                  },
                  "uri": {
                    "value": "[if(contains(parameters('runbooks')[copyIndex()], 'uri'), parameters('runbooks')[copyIndex()].uri, '')]"
                  },
                  "version": {
                    "value": "[if(contains(parameters('runbooks')[copyIndex()], 'version'), parameters('runbooks')[copyIndex()].version, '')]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "17868112236359672085"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the Automation Account runbook."
                      }
                    },
                    "automationAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Automation Account. Required if the template is used in a standalone deployment."
                      }
                    },
                    "runbookType": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The type of the runbook."
                      },
                      "allowedValues": [
                        "Graph",
                        "GraphPowerShell",
                        "GraphPowerShellWorkflow",
                        "PowerShell",
                        "PowerShellWorkflow"
                      ]
                    },
                    "runbookDescription": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of the runbook."
                      }
                    },
                    "uri": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The uri of the runbook content."
                      }
                    },
                    "version": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The version of the runbook content."
                      }
                    },
                    "scriptStorageAccountId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. ID of the runbook storage account."
                      }
                    },
                    "baseTime": {
                      "type": "string",
                      "defaultValue": "[utcNow('u')]",
                      "metadata": {
                        "description": "Generated. Time used as a basis for e.g. the schedule start date."
                      }
                    },
                    "sasTokenValidityLength": {
                      "type": "string",
                      "defaultValue": "PT8H",
                      "metadata": {
                        "description": "Optional. SAS token validity length. Usage: 'PT8H' - valid for 8 hours; 'P5D' - valid for 5 days; 'P1Y' - valid for 1 year. When not provided, the SAS token will be valid for 8 hours."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Location for all resources."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags of the Automation Account resource."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "variables": {
                    "accountSasProperties": {
                      "signedServices": "b",
                      "signedPermission": "r",
                      "signedExpiry": "[dateTimeAdd(parameters('baseTime'), parameters('sasTokenValidityLength'))]",
                      "signedResourceTypes": "o",
                      "signedProtocol": "https"
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Automation/automationAccounts/runbooks",
                      "apiVersion": "2019-06-01",
                      "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('name'))]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "runbookType": "[parameters('runbookType')]",
                        "description": "[parameters('runbookDescription')]",
                        "publishContentLink": "[if(not(empty(parameters('uri'))), if(empty(parameters('uri')), null(), createObject('uri', if(not(empty(parameters('uri'))), if(empty(parameters('scriptStorageAccountId')), parameters('uri'), format('{0}{1}', parameters('uri'), listAccountSas(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', split(parameters('scriptStorageAccountId'), '/')[2], split(parameters('scriptStorageAccountId'), '/')[4]), 'Microsoft.Storage/storageAccounts', last(split(parameters('scriptStorageAccountId'), '/'))), '2021-04-01', variables('accountSasProperties')).accountSasToken)), null()), 'version', if(not(empty(parameters('version'))), parameters('version'), null()))), null())]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed runbook."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('automationAccountName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed runbook."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group of the deployed runbook."
                      }
                    },
                    "location": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Automation/automationAccounts/runbooks', parameters('automationAccountName'), parameters('name')), '2019-06-01', 'full').location]",
                      "metadata": {
                        "description": "The location the resource was deployed into."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "automationAccount_jobSchedules",
                "count": "[length(parameters('jobSchedules'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-JobSchedule-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "automationAccountName": {
                    "value": "[parameters('name')]"
                  },
                  "runbookName": {
                    "value": "[parameters('jobSchedules')[copyIndex()].runbookName]"
                  },
                  "scheduleName": {
                    "value": "[parameters('jobSchedules')[copyIndex()].scheduleName]"
                  },
                  "parameters": {
                    "value": "[if(contains(parameters('jobSchedules')[copyIndex()], 'parameters'), parameters('jobSchedules')[copyIndex()].parameters, createObject())]"
                  },
                  "runOn": {
                    "value": "[if(contains(parameters('jobSchedules')[copyIndex()], 'runOn'), parameters('jobSchedules')[copyIndex()].runOn, '')]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "733268183629627444"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "defaultValue": "[newGuid()]",
                      "metadata": {
                        "description": "Generated. Name of the Automation Account job schedule. Must be a GUID and is autogenerated. No need to provide this value."
                      }
                    },
                    "automationAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Automation Account. Required if the template is used in a standalone deployment."
                      }
                    },
                    "runbookName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The runbook property associated with the entity."
                      }
                    },
                    "scheduleName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The schedule property associated with the entity."
                      }
                    },
                    "parameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. List of job properties."
                      }
                    },
                    "runOn": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The hybrid worker group that the scheduled job should run on."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Automation/automationAccounts/jobSchedules",
                      "apiVersion": "2020-01-13-preview",
                      "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('name'))]",
                      "properties": {
                        "parameters": "[parameters('parameters')]",
                        "runbook": {
                          "name": "[parameters('runbookName')]"
                        },
                        "runOn": "[if(not(empty(parameters('runOn'))), parameters('runOn'), null())]",
                        "schedule": {
                          "name": "[parameters('scheduleName')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed job schedule."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Automation/automationAccounts/jobSchedules', parameters('automationAccountName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed job schedule."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group of the deployed job schedule."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]",
                "automationAccount_runbooks",
                "automationAccount_schedules"
              ]
            },
            {
              "copy": {
                "name": "automationAccount_variables",
                "count": "[length(parameters('variables'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-Variable-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "automationAccountName": {
                    "value": "[parameters('name')]"
                  },
                  "name": {
                    "value": "[parameters('variables')[copyIndex()].name]"
                  },
                  "description": {
                    "value": "[if(contains(parameters('variables')[copyIndex()], 'description'), parameters('variables')[copyIndex()].description, '')]"
                  },
                  "value": {
                    "value": "[parameters('variables')[copyIndex()].value]"
                  },
                  "isEncrypted": {
                    "value": "[if(contains(parameters('variables')[copyIndex()], 'isEncrypted'), parameters('variables')[copyIndex()].isEncrypted, true())]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "2794168205078858326"
                    }
                  },
                  "parameters": {
                    "automationAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Automation Account. Required if the template is used in a standalone deployment."
                      }
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the variable."
                      }
                    },
                    "value": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The value of the variable."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of the variable."
                      }
                    },
                    "isEncrypted": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. If the variable should be encrypted. For security reasons encryption of variables should be enabled."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Automation/automationAccounts/variables",
                      "apiVersion": "2020-01-13-preview",
                      "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('name'))]",
                      "properties": {
                        "description": "[parameters('description')]",
                        "isEncrypted": "[parameters('isEncrypted')]",
                        "value": "[parameters('value')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed variable."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Automation/automationAccounts/variables', parameters('automationAccountName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed variable."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group of the deployed variable."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('linkedWorkspaceResourceId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-LinkedService', uniqueString(deployment().name, parameters('location')))]",
              "subscriptionId": "[if(not(empty(parameters('linkedWorkspaceResourceId'))), split(parameters('linkedWorkspaceResourceId'), '/')[2], subscription().subscriptionId)]",
              "resourceGroup": "[if(not(empty(parameters('linkedWorkspaceResourceId'))), split(parameters('linkedWorkspaceResourceId'), '/')[4], resourceGroup().name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "automation"
                  },
                  "logAnalyticsWorkspaceName": {
                    "value": "[last(split(parameters('linkedWorkspaceResourceId'), '/'))]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  },
                  "resourceId": {
                    "value": "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
                  },
                  "tags": {
                    "value": "[parameters('tags')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "10989487653061022103"
                    }
                  },
                  "parameters": {
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Log Analytics workspace. Required if the template is used in a standalone deployment."
                      }
                    },
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the link."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Required. The resource ID of the resource that will be linked to the workspace. This should be used for linking resources which require read access."
                      }
                    },
                    "writeAccessResourceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The resource ID of the resource that will be linked to the workspace. This should be used for linking resources which require write access."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to configure in the resource."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.OperationalInsights/workspaces/linkedServices",
                      "apiVersion": "2020-08-01",
                      "name": "[format('{0}/{1}', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "resourceId": "[parameters('resourceId')]",
                        "writeAccessResourceId": "[if(empty(parameters('writeAccessResourceId')), null(), parameters('writeAccessResourceId'))]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed linked service."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationalInsights/workspaces/linkedServices', parameters('logAnalyticsWorkspaceName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed linked service."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group where the linked service is deployed."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            },
            {
              "condition": "[not(empty(parameters('linkedWorkspaceResourceId')))]",
              "copy": {
                "name": "automationAccount_solutions",
                "count": "[length(parameters('gallerySolutions'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-Solution-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "subscriptionId": "[if(not(empty(parameters('linkedWorkspaceResourceId'))), split(parameters('linkedWorkspaceResourceId'), '/')[2], subscription().subscriptionId)]",
              "resourceGroup": "[if(not(empty(parameters('linkedWorkspaceResourceId'))), split(parameters('linkedWorkspaceResourceId'), '/')[4], resourceGroup().name)]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('gallerySolutions')[copyIndex()].name]"
                  },
                  "location": {
                    "value": "[parameters('location')]"
                  },
                  "logAnalyticsWorkspaceName": {
                    "value": "[last(split(parameters('linkedWorkspaceResourceId'), '/'))]"
                  },
                  "product": {
                    "value": "[if(contains(parameters('gallerySolutions')[copyIndex()], 'product'), parameters('gallerySolutions')[copyIndex()].product, 'OMSGallery')]"
                  },
                  "publisher": {
                    "value": "[if(contains(parameters('gallerySolutions')[copyIndex()], 'publisher'), parameters('gallerySolutions')[copyIndex()].publisher, 'Microsoft')]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "14616263177843561456"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the solution. For Microsoft published gallery solution the target solution resource name will be composed as `{name}({logAnalyticsWorkspaceName})`."
                      }
                    },
                    "logAnalyticsWorkspaceName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the Log Analytics workspace where the solution will be deployed/enabled."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Location for all resources."
                      }
                    },
                    "product": {
                      "type": "string",
                      "defaultValue": "OMSGallery",
                      "metadata": {
                        "description": "Optional. The product of the deployed solution. For Microsoft published gallery solution it should be `OMSGallery` and the target solution resource product will be composed as `OMSGallery/{name}`. For third party solution, it can be anything. This is case sensitive."
                      }
                    },
                    "publisher": {
                      "type": "string",
                      "defaultValue": "Microsoft",
                      "metadata": {
                        "description": "Optional. The publisher name of the deployed solution. For Microsoft published gallery solution, it is `Microsoft`."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "variables": {
                    "solutionName": "[if(equals(parameters('publisher'), 'Microsoft'), format('{0}({1})', parameters('name'), parameters('logAnalyticsWorkspaceName')), parameters('name'))]",
                    "solutionProduct": "[if(equals(parameters('publisher'), 'Microsoft'), format('OMSGallery/{0}', parameters('name')), parameters('product'))]"
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.OperationsManagement/solutions",
                      "apiVersion": "2015-11-01-preview",
                      "name": "[variables('solutionName')]",
                      "location": "[parameters('location')]",
                      "properties": {
                        "workspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', parameters('logAnalyticsWorkspaceName'))]"
                      },
                      "plan": {
                        "name": "[variables('solutionName')]",
                        "promotionCode": "",
                        "product": "[variables('solutionProduct')]",
                        "publisher": "[parameters('publisher')]"
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[variables('solutionName')]",
                      "metadata": {
                        "description": "The name of the deployed solution."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.OperationsManagement/solutions', variables('solutionName'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed solution."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group where the solution is deployed."
                      }
                    },
                    "location": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.OperationsManagement/solutions', variables('solutionName')), '2015-11-01-preview', 'full').location]",
                      "metadata": {
                        "description": "The location the resource was deployed into."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', if(not(empty(parameters('linkedWorkspaceResourceId'))), split(parameters('linkedWorkspaceResourceId'), '/')[2], subscription().subscriptionId), if(not(empty(parameters('linkedWorkspaceResourceId'))), split(parameters('linkedWorkspaceResourceId'), '/')[4], resourceGroup().name)), 'Microsoft.Resources/deployments', format('{0}-AutoAccount-LinkedService', uniqueString(deployment().name, parameters('location'))))]"
              ]
            },
            {
              "copy": {
                "name": "automationAccount_softwareUpdateConfigurations",
                "count": "[length(parameters('softwareUpdateConfigurations'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-SwUpdateConfig-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "name": {
                    "value": "[parameters('softwareUpdateConfigurations')[copyIndex()].name]"
                  },
                  "automationAccountName": {
                    "value": "[parameters('name')]"
                  },
                  "frequency": {
                    "value": "[parameters('softwareUpdateConfigurations')[copyIndex()].frequency]"
                  },
                  "operatingSystem": {
                    "value": "[parameters('softwareUpdateConfigurations')[copyIndex()].operatingSystem]"
                  },
                  "rebootSetting": {
                    "value": "[parameters('softwareUpdateConfigurations')[copyIndex()].rebootSetting]"
                  },
                  "azureVirtualMachines": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'azureVirtualMachines'), parameters('softwareUpdateConfigurations')[copyIndex()].azureVirtualMachines, createArray())]"
                  },
                  "excludeUpdates": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'excludeUpdates'), parameters('softwareUpdateConfigurations')[copyIndex()].excludeUpdates, createArray())]"
                  },
                  "expiryTime": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'expiryTime'), parameters('softwareUpdateConfigurations')[copyIndex()].expiryTime, '')]"
                  },
                  "expiryTimeOffsetMinutes": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'expiryTimeOffsetMinutes'), parameters('softwareUpdateConfigurations')[copyIndex()].expiryTimeOffsetMinute, 0)]"
                  },
                  "includeUpdates": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'includeUpdates'), parameters('softwareUpdateConfigurations')[copyIndex()].includeUpdates, createArray())]"
                  },
                  "interval": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'interval'), parameters('softwareUpdateConfigurations')[copyIndex()].interval, 1)]"
                  },
                  "isEnabled": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'isEnabled'), parameters('softwareUpdateConfigurations')[copyIndex()].isEnabled, true())]"
                  },
                  "maintenanceWindow": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'maintenanceWindow'), parameters('softwareUpdateConfigurations')[copyIndex()].maintenanceWindow, 'PT2H')]"
                  },
                  "monthDays": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'monthDays'), parameters('softwareUpdateConfigurations')[copyIndex()].monthDays, createArray())]"
                  },
                  "monthlyOccurrences": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'monthlyOccurrences'), parameters('softwareUpdateConfigurations')[copyIndex()].monthlyOccurrences, createArray())]"
                  },
                  "nextRun": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'nextRun'), parameters('softwareUpdateConfigurations')[copyIndex()].nextRun, '')]"
                  },
                  "nextRunOffsetMinutes": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'nextRunOffsetMinutes'), parameters('softwareUpdateConfigurations')[copyIndex()].nextRunOffsetMinutes, 0)]"
                  },
                  "nonAzureComputerNames": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'nonAzureComputerNames'), parameters('softwareUpdateConfigurations')[copyIndex()].nonAzureComputerNames, createArray())]"
                  },
                  "nonAzureQueries": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'nonAzureQueries'), parameters('softwareUpdateConfigurations')[copyIndex()].nonAzureQueries, createArray())]"
                  },
                  "postTaskParameters": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'postTaskParameters'), parameters('softwareUpdateConfigurations')[copyIndex()].postTaskParameters, createObject())]"
                  },
                  "postTaskSource": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'postTaskSource'), parameters('softwareUpdateConfigurations')[copyIndex()].postTaskSource, '')]"
                  },
                  "preTaskParameters": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'preTaskParameters'), parameters('softwareUpdateConfigurations')[copyIndex()].preTaskParameters, createObject())]"
                  },
                  "preTaskSource": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'preTaskSource'), parameters('softwareUpdateConfigurations')[copyIndex()].preTaskSource, '')]"
                  },
                  "scheduleDescription": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'scheduleDescription'), parameters('softwareUpdateConfigurations')[copyIndex()].scheduleDescription, '')]"
                  },
                  "scopeByLocations": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'scopeByLocations'), parameters('softwareUpdateConfigurations')[copyIndex()].scopeByLocations, createArray())]"
                  },
                  "scopeByResources": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'scopeByResources'), parameters('softwareUpdateConfigurations')[copyIndex()].scopeByResources, createArray(subscription().id))]"
                  },
                  "scopeByTags": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'scopeByTags'), parameters('softwareUpdateConfigurations')[copyIndex()].scopeByTags, createObject())]"
                  },
                  "scopeByTagsOperation": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'scopeByTagsOperation'), parameters('softwareUpdateConfigurations')[copyIndex()].scopeByTagsOperation, 'All')]"
                  },
                  "startTime": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'startTime'), parameters('softwareUpdateConfigurations')[copyIndex()].startTime, '')]"
                  },
                  "timeZone": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'timeZone'), parameters('softwareUpdateConfigurations')[copyIndex()].timeZone, 'UTC')]"
                  },
                  "updateClassifications": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'updateClassifications'), parameters('softwareUpdateConfigurations')[copyIndex()].updateClassifications, createArray('Critical', 'Security'))]"
                  },
                  "weekDays": {
                    "value": "[if(contains(parameters('softwareUpdateConfigurations')[copyIndex()], 'weekDays'), parameters('softwareUpdateConfigurations')[copyIndex()].weekDays, createArray())]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "17395915767653741457"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the Deployment schedule."
                      }
                    },
                    "automationAccountName": {
                      "type": "string",
                      "metadata": {
                        "description": "Conditional. The name of the parent Automation Account. Required if the template is used in a standalone deployment."
                      }
                    },
                    "operatingSystem": {
                      "type": "string",
                      "allowedValues": [
                        "Windows",
                        "Linux"
                      ],
                      "metadata": {
                        "description": "Required. The operating system to be configured by the deployment schedule."
                      }
                    },
                    "rebootSetting": {
                      "type": "string",
                      "allowedValues": [
                        "IfRequired",
                        "Never",
                        "RebootOnly",
                        "Always"
                      ],
                      "metadata": {
                        "description": "Required. Reboot setting for the deployment schedule."
                      }
                    },
                    "frequency": {
                      "type": "string",
                      "allowedValues": [
                        "OneTime",
                        "Hour",
                        "Day",
                        "Week",
                        "Month"
                      ],
                      "metadata": {
                        "description": "Required. The frequency of the deployment schedule. When using 'Hour', 'Day', 'Week' or 'Month', an interval needs to be provided."
                      }
                    },
                    "maintenanceWindow": {
                      "type": "string",
                      "defaultValue": "PT2H",
                      "metadata": {
                        "description": "Optional. Maximum time allowed for the deployment schedule to run. Duration needs to be specified using the format PT[n]H[n]M[n]S as per ISO8601."
                      }
                    },
                    "updateClassifications": {
                      "type": "array",
                      "defaultValue": [
                        "Critical",
                        "Security"
                      ],
                      "allowedValues": [
                        "Critical",
                        "Security",
                        "UpdateRollup",
                        "FeaturePack",
                        "ServicePack",
                        "Definition",
                        "Tools",
                        "Updates",
                        "Other"
                      ],
                      "metadata": {
                        "description": "Optional. Update classification included in the deployment schedule."
                      }
                    },
                    "excludeUpdates": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. KB numbers or Linux packages excluded in the deployment schedule."
                      }
                    },
                    "includeUpdates": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. KB numbers or Linux packages included in the deployment schedule."
                      }
                    },
                    "scopeByResources": {
                      "type": "array",
                      "defaultValue": [
                        "[subscription().id]"
                      ],
                      "metadata": {
                        "description": "Optional. Specify the resources to scope the deployment schedule to."
                      }
                    },
                    "scopeByTags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Specify tags to which to scope the deployment schedule to."
                      }
                    },
                    "scopeByTagsOperation": {
                      "type": "string",
                      "defaultValue": "All",
                      "allowedValues": [
                        "All",
                        "Any"
                      ],
                      "metadata": {
                        "description": "Optional. Enables the scopeByTags to require All (Tag A and Tag B) or Any (Tag A or Tag B)."
                      }
                    },
                    "scopeByLocations": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Specify locations to which to scope the deployment schedule to."
                      }
                    },
                    "preTaskParameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Parameters provided to the task running before the deployment schedule."
                      }
                    },
                    "preTaskSource": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The source of the task running before the deployment schedule."
                      }
                    },
                    "postTaskParameters": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Parameters provided to the task running after the deployment schedule."
                      }
                    },
                    "postTaskSource": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The source of the task running after the deployment schedule."
                      }
                    },
                    "interval": {
                      "type": "int",
                      "defaultValue": 1,
                      "maxValue": 100,
                      "metadata": {
                        "description": "Optional. The interval of the frequency for the deployment schedule. 1 Hour is every hour, 2 Day is every second day, etc."
                      }
                    },
                    "isEnabled": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enables the deployment schedule."
                      }
                    },
                    "timeZone": {
                      "type": "string",
                      "defaultValue": "UTC",
                      "metadata": {
                        "description": "Optional. Time zone for the deployment schedule. IANA ID or a Windows Time Zone ID."
                      }
                    },
                    "nonAzureQueries": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Array of functions from a Log Analytics workspace, used to scope the deployment schedule."
                      }
                    },
                    "azureVirtualMachines": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. List of azure resource IDs for azure virtual machines in scope for the deployment schedule."
                      }
                    },
                    "nonAzureComputerNames": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. List of names of non-azure machines in scope for the deployment schedule."
                      }
                    },
                    "weekDays": {
                      "type": "array",
                      "defaultValue": [],
                      "allowedValues": [
                        "Monday",
                        "Tuesday",
                        "Wednesday",
                        "Thursday",
                        "Friday",
                        "Saturday",
                        "Sunday"
                      ],
                      "metadata": {
                        "description": "Optional. Required when used with frequency 'Week'. Specified the day of the week to run the deployment schedule."
                      }
                    },
                    "monthDays": {
                      "type": "array",
                      "defaultValue": [],
                      "allowedValues": [
                        1,
                        2,
                        3,
                        4,
                        5,
                        6,
                        7,
                        8,
                        9,
                        10,
                        11,
                        12,
                        13,
                        14,
                        15,
                        16,
                        17,
                        18,
                        19,
                        20,
                        21,
                        22,
                        23,
                        24,
                        25,
                        26,
                        27,
                        28,
                        29,
                        30,
                        31
                      ],
                      "metadata": {
                        "description": "Optional. Can be used with frequency 'Month'. Provides the specific days of the month to run the deployment schedule."
                      }
                    },
                    "monthlyOccurrences": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Can be used with frequency 'Month'. Provides the pattern/cadence for running the deployment schedule in a month. Takes objects formed like this {occurance(int),day(string)}. Day is the name of the day to run the deployment schedule, the occurance specifies which occurance of that day to run the deployment schedule."
                      }
                    },
                    "startTime": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The start time of the deployment schedule in ISO 8601 format. To specify a specific time use YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00. For schedules where we want to start the deployment as soon as possible, specify the time segment only in 24 hour format, HH:MM, 22:00."
                      }
                    },
                    "expiryTime": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The end time of the deployment schedule in ISO 8601 format. YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00."
                      }
                    },
                    "expiryTimeOffsetMinutes": {
                      "type": "int",
                      "defaultValue": 0,
                      "metadata": {
                        "description": "Optional. The expiry time's offset in minutes."
                      }
                    },
                    "nextRun": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The next time the deployment schedule runs in ISO 8601 format. YYYY-MM-DDTHH:MM:SS, 2021-12-31T23:00:00."
                      }
                    },
                    "nextRunOffsetMinutes": {
                      "type": "int",
                      "defaultValue": 0,
                      "metadata": {
                        "description": "Optional. The next run's offset in minutes."
                      }
                    },
                    "scheduleDescription": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The schedules description."
                      }
                    },
                    "baseTime": {
                      "type": "string",
                      "defaultValue": "[utcNow('u')]",
                      "metadata": {
                        "description": "Generated. Do not touch. Is used to provide the base time for time comparison for startTime. If startTime is specified in HH:MM format, baseTime is used to check if the provided startTime has passed, adding one day before setting the deployment schedule."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "variables": {
                    "updateClassifications_var": "[replace(replace(replace(replace(string(parameters('updateClassifications')), ',', ', '), '[', ''), ']', ''), '\"', '')]"
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Automation/automationAccounts/softwareUpdateConfigurations",
                      "apiVersion": "2019-06-01",
                      "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('name'))]",
                      "properties": {
                        "updateConfiguration": {
                          "operatingSystem": "[parameters('operatingSystem')]",
                          "duration": "[parameters('maintenanceWindow')]",
                          "linux": "[if(equals(parameters('operatingSystem'), 'Linux'), createObject('excludedPackageNameMasks', parameters('excludeUpdates'), 'includedPackageNameMasks', parameters('includeUpdates'), 'includedPackageClassifications', variables('updateClassifications_var'), 'rebootSetting', parameters('rebootSetting')), null())]",
                          "windows": "[if(equals(parameters('operatingSystem'), 'Windows'), createObject('excludedKbNumbers', parameters('excludeUpdates'), 'includedKbNumbers', parameters('includeUpdates'), 'includedUpdateClassifications', variables('updateClassifications_var'), 'rebootSetting', parameters('rebootSetting')), null())]",
                          "targets": {
                            "azureQueries": [
                              {
                                "scope": "[parameters('scopeByResources')]",
                                "tagSettings": {
                                  "tags": "[parameters('scopeByTags')]",
                                  "filterOperator": "[parameters('scopeByTagsOperation')]"
                                },
                                "locations": "[parameters('scopeByLocations')]"
                              }
                            ],
                            "nonAzureQueries": "[parameters('nonAzureQueries')]"
                          },
                          "azureVirtualMachines": "[parameters('azureVirtualMachines')]",
                          "nonAzureComputerNames": "[parameters('nonAzureComputerNames')]"
                        },
                        "tasks": {
                          "preTask": {
                            "parameters": "[if(empty(parameters('preTaskParameters')), null(), parameters('preTaskParameters'))]",
                            "source": "[if(empty(parameters('preTaskSource')), null(), parameters('preTaskSource'))]"
                          },
                          "postTask": {
                            "parameters": "[if(empty(parameters('postTaskParameters')), null(), parameters('postTaskParameters'))]",
                            "source": "[if(empty(parameters('postTaskSource')), null(), parameters('postTaskSource'))]"
                          }
                        },
                        "scheduleInfo": {
                          "interval": "[parameters('interval')]",
                          "frequency": "[parameters('frequency')]",
                          "isEnabled": "[parameters('isEnabled')]",
                          "timeZone": "[parameters('timeZone')]",
                          "advancedSchedule": {
                            "weekDays": "[if(empty(parameters('weekDays')), null(), parameters('weekDays'))]",
                            "monthDays": "[if(empty(parameters('monthDays')), null(), parameters('monthDays'))]",
                            "monthlyOccurrences": "[if(empty(parameters('monthlyOccurrences')), null(), parameters('monthlyOccurrences'))]"
                          },
                          "startTime": "[if(empty(parameters('startTime')), dateTimeAdd(parameters('baseTime'), 'PT10M'), parameters('startTime'))]",
                          "expiryTime": "[parameters('expiryTime')]",
                          "expiryTimeOffsetMinutes": "[parameters('expiryTimeOffsetMinutes')]",
                          "nextRun": "[parameters('nextRun')]",
                          "nextRunOffsetMinutes": "[parameters('nextRunOffsetMinutes')]",
                          "description": "[parameters('scheduleDescription')]"
                        }
                      }
                    }
                  ],
                  "outputs": {
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the deployed softwareUpdateConfiguration."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Automation/automationAccounts/softwareUpdateConfigurations', parameters('automationAccountName'), parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the deployed softwareUpdateConfiguration."
                      }
                    },
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group of the deployed softwareUpdateConfiguration."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]",
                "automationAccount_solutions"
              ]
            },
            {
              "copy": {
                "name": "automationAccount_privateEndpoints",
                "count": "[length(parameters('privateEndpoints'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutomationAccount-PrivateEndpoint-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "groupIds": {
                    "value": [
                      "[parameters('privateEndpoints')[copyIndex()].service]"
                    ]
                  },
                  "name": {
                    "value": "[if(contains(parameters('privateEndpoints')[copyIndex()], 'name'), parameters('privateEndpoints')[copyIndex()].name, format('pe-{0}-{1}-{2}', last(split(resourceId('Microsoft.Automation/automationAccounts', parameters('name')), '/')), parameters('privateEndpoints')[copyIndex()].service, copyIndex()))]"
                  },
                  "serviceResourceId": {
                    "value": "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
                  },
                  "subnetResourceId": {
                    "value": "[parameters('privateEndpoints')[copyIndex()].subnetResourceId]"
                  },
                  "enableDefaultTelemetry": {
                    "value": "[variables('enableReferencedModulesTelemetry')]"
                  },
                  "location": {
                    "value": "[reference(split(parameters('privateEndpoints')[copyIndex()].subnetResourceId, '/subnets/')[0], '2020-06-01', 'Full').location]"
                  },
                  "lock": {
                    "value": "[if(contains(parameters('privateEndpoints')[copyIndex()], 'lock'), parameters('privateEndpoints')[copyIndex()].lock, parameters('lock'))]"
                  },
                  "privateDnsZoneGroup": {
                    "value": "[if(contains(parameters('privateEndpoints')[copyIndex()], 'privateDnsZoneGroup'), parameters('privateEndpoints')[copyIndex()].privateDnsZoneGroup, createObject())]"
                  },
                  "roleAssignments": {
                    "value": "[if(contains(parameters('privateEndpoints')[copyIndex()], 'roleAssignments'), parameters('privateEndpoints')[copyIndex()].roleAssignments, createArray())]"
                  },
                  "tags": {
                    "value": "[if(contains(parameters('privateEndpoints')[copyIndex()], 'tags'), parameters('privateEndpoints')[copyIndex()].tags, createObject())]"
                  },
                  "manualPrivateLinkServiceConnections": {
                    "value": "[if(contains(parameters('privateEndpoints')[copyIndex()], 'manualPrivateLinkServiceConnections'), parameters('privateEndpoints')[copyIndex()].manualPrivateLinkServiceConnections, createArray())]"
                  },
                  "customDnsConfigs": {
                    "value": "[if(contains(parameters('privateEndpoints')[copyIndex()], 'customDnsConfigs'), parameters('privateEndpoints')[copyIndex()].customDnsConfigs, createArray())]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "12850716474812463254"
                    }
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Name of the private endpoint resource to create."
                      }
                    },
                    "subnetResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Resource ID of the subnet where the endpoint needs to be created."
                      }
                    },
                    "serviceResourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. Resource ID of the resource that needs to be connected to the network."
                      }
                    },
                    "groupIds": {
                      "type": "array",
                      "metadata": {
                        "description": "Required. Subtype(s) of the connection to be created. The allowed values depend on the type serviceResourceId refers to."
                      }
                    },
                    "privateDnsZoneGroup": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. The private DNS zone group configuration used to associate the private endpoint with one or multiple private DNS zones. A DNS zone group can support up to 5 DNS zones."
                      }
                    },
                    "location": {
                      "type": "string",
                      "defaultValue": "[resourceGroup().location]",
                      "metadata": {
                        "description": "Optional. Location for all Resources."
                      }
                    },
                    "lock": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Specify the type of lock."
                      },
                      "allowedValues": [
                        "",
                        "CanNotDelete",
                        "ReadOnly"
                      ]
                    },
                    "roleAssignments": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
                      }
                    },
                    "tags": {
                      "type": "object",
                      "defaultValue": {},
                      "metadata": {
                        "description": "Optional. Tags to be applied on all resources/resource groups in this deployment."
                      }
                    },
                    "customDnsConfigs": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Custom DNS configurations."
                      }
                    },
                    "manualPrivateLinkServiceConnections": {
                      "type": "array",
                      "defaultValue": [],
                      "metadata": {
                        "description": "Optional. Manual PrivateLink Service Connections."
                      }
                    },
                    "enableDefaultTelemetry": {
                      "type": "bool",
                      "defaultValue": true,
                      "metadata": {
                        "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                      }
                    }
                  },
                  "variables": {
                    "enableReferencedModulesTelemetry": false
                  },
                  "resources": [
                    {
                      "condition": "[parameters('enableDefaultTelemetry')]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2021-04-01",
                      "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
                      "properties": {
                        "mode": "Incremental",
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "resources": []
                        }
                      }
                    },
                    {
                      "type": "Microsoft.Network/privateEndpoints",
                      "apiVersion": "2021-08-01",
                      "name": "[parameters('name')]",
                      "location": "[parameters('location')]",
                      "tags": "[parameters('tags')]",
                      "properties": {
                        "privateLinkServiceConnections": [
                          {
                            "name": "[parameters('name')]",
                            "properties": {
                              "privateLinkServiceId": "[parameters('serviceResourceId')]",
                              "groupIds": "[parameters('groupIds')]"
                            }
                          }
                        ],
                        "manualPrivateLinkServiceConnections": "[parameters('manualPrivateLinkServiceConnections')]",
                        "subnet": {
                          "id": "[parameters('subnetResourceId')]"
                        },
                        "customDnsConfigs": "[parameters('customDnsConfigs')]"
                      }
                    },
                    {
                      "condition": "[not(empty(parameters('lock')))]",
                      "type": "Microsoft.Authorization/locks",
                      "apiVersion": "2017-04-01",
                      "scope": "[format('Microsoft.Network/privateEndpoints/{0}', parameters('name'))]",
                      "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
                      "properties": {
                        "level": "[parameters('lock')]",
                        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                      ]
                    },
                    {
                      "condition": "[not(empty(parameters('privateDnsZoneGroup')))]",
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-PrivateEndpoint-PrivateDnsZoneGroup', uniqueString(deployment().name, parameters('location')))]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "privateDNSResourceIds": {
                            "value": "[parameters('privateDnsZoneGroup').privateDNSResourceIds]"
                          },
                          "privateEndpointName": {
                            "value": "[parameters('name')]"
                          },
                          "enableDefaultTelemetry": {
                            "value": "[variables('enableReferencedModulesTelemetry')]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.11.1.770",
                              "templateHash": "7660337883881377224"
                            }
                          },
                          "parameters": {
                            "privateEndpointName": {
                              "type": "string",
                              "metadata": {
                                "description": "Conditional. The name of the parent private endpoint. Required if the template is used in a standalone deployment."
                              }
                            },
                            "privateDNSResourceIds": {
                              "type": "array",
                              "maxLength": 5,
                              "minLength": 1,
                              "metadata": {
                                "description": "Required. Array of private DNS zone resource IDs. A DNS zone group can support up to 5 DNS zones."
                              }
                            },
                            "name": {
                              "type": "string",
                              "defaultValue": "default",
                              "metadata": {
                                "description": "Optional. The name of the private DNS zone group."
                              }
                            },
                            "enableDefaultTelemetry": {
                              "type": "bool",
                              "defaultValue": true,
                              "metadata": {
                                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
                              }
                            }
                          },
                          "variables": {
                            "copy": [
                              {
                                "name": "privateDnsZoneConfigs",
                                "count": "[length(parameters('privateDNSResourceIds'))]",
                                "input": {
                                  "name": "[last(split(parameters('privateDNSResourceIds')[copyIndex('privateDnsZoneConfigs')], '/'))]",
                                  "properties": {
                                    "privateDnsZoneId": "[parameters('privateDNSResourceIds')[copyIndex('privateDnsZoneConfigs')]]"
                                  }
                                }
                              }
                            ]
                          },
                          "resources": [
                            {
                              "condition": "[parameters('enableDefaultTelemetry')]",
                              "type": "Microsoft.Resources/deployments",
                              "apiVersion": "2021-04-01",
                              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name))]",
                              "properties": {
                                "mode": "Incremental",
                                "template": {
                                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                                  "contentVersion": "1.0.0.0",
                                  "resources": []
                                }
                              }
                            },
                            {
                              "type": "Microsoft.Network/privateEndpoints/privateDnsZoneGroups",
                              "apiVersion": "2021-08-01",
                              "name": "[format('{0}/{1}', parameters('privateEndpointName'), parameters('name'))]",
                              "properties": {
                                "privateDnsZoneConfigs": "[variables('privateDnsZoneConfigs')]"
                              }
                            }
                          ],
                          "outputs": {
                            "name": {
                              "type": "string",
                              "value": "[parameters('name')]",
                              "metadata": {
                                "description": "The name of the private endpoint DNS zone group."
                              }
                            },
                            "resourceId": {
                              "type": "string",
                              "value": "[resourceId('Microsoft.Network/privateEndpoints/privateDnsZoneGroups', parameters('privateEndpointName'), parameters('name'))]",
                              "metadata": {
                                "description": "The resource ID of the private endpoint DNS zone group."
                              }
                            },
                            "resourceGroupName": {
                              "type": "string",
                              "value": "[resourceGroup().name]",
                              "metadata": {
                                "description": "The resource group the private endpoint DNS zone group was deployed into."
                              }
                            }
                          }
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                      ]
                    },
                    {
                      "copy": {
                        "name": "privateEndpoint_roleAssignments",
                        "count": "[length(parameters('roleAssignments'))]"
                      },
                      "type": "Microsoft.Resources/deployments",
                      "apiVersion": "2020-10-01",
                      "name": "[format('{0}-PrivateEndpoint-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
                      "properties": {
                        "expressionEvaluationOptions": {
                          "scope": "inner"
                        },
                        "mode": "Incremental",
                        "parameters": {
                          "description": {
                            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
                          },
                          "principalIds": {
                            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                          },
                          "principalType": {
                            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
                          },
                          "roleDefinitionIdOrName": {
                            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                          },
                          "condition": {
                            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'condition'), parameters('roleAssignments')[copyIndex()].condition, '')]"
                          },
                          "delegatedManagedIdentityResourceId": {
                            "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'delegatedManagedIdentityResourceId'), parameters('roleAssignments')[copyIndex()].delegatedManagedIdentityResourceId, '')]"
                          },
                          "resourceId": {
                            "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                          }
                        },
                        "template": {
                          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                          "contentVersion": "1.0.0.0",
                          "metadata": {
                            "_generator": {
                              "name": "bicep",
                              "version": "0.11.1.770",
                              "templateHash": "12971386418638505750"
                            }
                          },
                          "parameters": {
                            "principalIds": {
                              "type": "array",
                              "metadata": {
                                "description": "Required. The IDs of the principals to assign the role to."
                              }
                            },
                            "roleDefinitionIdOrName": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead."
                              }
                            },
                            "resourceId": {
                              "type": "string",
                              "metadata": {
                                "description": "Required. The resource ID of the resource to apply the role assignment to."
                              }
                            },
                            "principalType": {
                              "type": "string",
                              "defaultValue": "",
                              "allowedValues": [
                                "ServicePrincipal",
                                "Group",
                                "User",
                                "ForeignGroup",
                                "Device",
                                ""
                              ],
                              "metadata": {
                                "description": "Optional. The principal type of the assigned principal ID."
                              }
                            },
                            "description": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional. The description of the role assignment."
                              }
                            },
                            "condition": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\""
                              }
                            },
                            "conditionVersion": {
                              "type": "string",
                              "defaultValue": "2.0",
                              "allowedValues": [
                                "2.0"
                              ],
                              "metadata": {
                                "description": "Optional. Version of the condition."
                              }
                            },
                            "delegatedManagedIdentityResourceId": {
                              "type": "string",
                              "defaultValue": "",
                              "metadata": {
                                "description": "Optional. Id of the delegated managed identity resource."
                              }
                            }
                          },
                          "variables": {
                            "builtInRoleNames": {
                              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                              "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
                              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                              "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                              "Network Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
                              "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
                            }
                          },
                          "resources": [
                            {
                              "copy": {
                                "name": "roleAssignment",
                                "count": "[length(parameters('principalIds'))]"
                              },
                              "type": "Microsoft.Authorization/roleAssignments",
                              "apiVersion": "2022-04-01",
                              "scope": "[format('Microsoft.Network/privateEndpoints/{0}', last(split(parameters('resourceId'), '/')))]",
                              "name": "[guid(resourceId('Microsoft.Network/privateEndpoints', last(split(parameters('resourceId'), '/'))), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                              "properties": {
                                "description": "[parameters('description')]",
                                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                                "principalId": "[parameters('principalIds')[copyIndex()]]",
                                "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]",
                                "condition": "[if(not(empty(parameters('condition'))), parameters('condition'), null())]",
                                "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
                                "delegatedManagedIdentityResourceId": "[if(not(empty(parameters('delegatedManagedIdentityResourceId'))), parameters('delegatedManagedIdentityResourceId'), null())]"
                              }
                            }
                          ]
                        }
                      },
                      "dependsOn": [
                        "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]"
                      ]
                    }
                  ],
                  "outputs": {
                    "resourceGroupName": {
                      "type": "string",
                      "value": "[resourceGroup().name]",
                      "metadata": {
                        "description": "The resource group the private endpoint was deployed into."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "value": "[resourceId('Microsoft.Network/privateEndpoints', parameters('name'))]",
                      "metadata": {
                        "description": "The resource ID of the private endpoint."
                      }
                    },
                    "name": {
                      "type": "string",
                      "value": "[parameters('name')]",
                      "metadata": {
                        "description": "The name of the private endpoint."
                      }
                    },
                    "location": {
                      "type": "string",
                      "value": "[reference(resourceId('Microsoft.Network/privateEndpoints', parameters('name')), '2021-08-01', 'full').location]",
                      "metadata": {
                        "description": "The location the resource was deployed into."
                      }
                    }
                  }
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            },
            {
              "copy": {
                "name": "automationAccount_roleAssignments",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-AutoAccount-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "description": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
                  },
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "principalType": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "condition": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'condition'), parameters('roleAssignments')[copyIndex()].condition, '')]"
                  },
                  "delegatedManagedIdentityResourceId": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'delegatedManagedIdentityResourceId'), parameters('roleAssignments')[copyIndex()].delegatedManagedIdentityResourceId, '')]"
                  },
                  "resourceId": {
                    "value": "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "11645693613424810623"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array",
                      "metadata": {
                        "description": "Required. The IDs of the principals to assign the role to."
                      }
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The resource ID of the resource to apply the role assignment to."
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup",
                        "Device",
                        ""
                      ],
                      "metadata": {
                        "description": "Optional. The principal type of the assigned principal ID."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of the role assignment."
                      }
                    },
                    "condition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\""
                      }
                    },
                    "conditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "allowedValues": [
                        "2.0"
                      ],
                      "metadata": {
                        "description": "Optional. Version of the condition."
                      }
                    },
                    "delegatedManagedIdentityResourceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Id of the delegated managed identity resource."
                      }
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Automation Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f353d9bd-d4a6-484e-a77a-8050b599b867')]",
                      "Automation Job Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4fe576fe-1146-4730-92eb-48519fa6bf9f')]",
                      "Automation Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'd3881f73-407a-4167-8283-e981cbba0404')]",
                      "Automation Runbook Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5fb5aef8-1081-4b8e-bb16-9d5d0385bab5')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Automation/automationAccounts/{0}', last(split(parameters('resourceId'), '/')))]",
                      "name": "[guid(resourceId('Microsoft.Automation/automationAccounts', last(split(parameters('resourceId'), '/'))), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "description": "[parameters('description')]",
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]",
                        "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]",
                        "condition": "[if(not(empty(parameters('condition'))), parameters('condition'), null())]",
                        "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
                        "delegatedManagedIdentityResourceId": "[if(not(empty(parameters('delegatedManagedIdentityResourceId'))), parameters('delegatedManagedIdentityResourceId'), null())]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the deployed automation account."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Automation/automationAccounts', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the deployed automation account."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group of the deployed automation account."
              }
            },
            "systemAssignedPrincipalId": {
              "type": "string",
              "value": "[if(and(parameters('systemAssignedIdentity'), contains(reference(resourceId('Microsoft.Automation/automationAccounts', parameters('name')), '2021-06-22', 'full').identity, 'principalId')), reference(resourceId('Microsoft.Automation/automationAccounts', parameters('name')), '2021-06-22', 'full').identity.principalId, '')]",
              "metadata": {
                "description": "The principal ID of the system assigned identity."
              }
            },
            "location": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Automation/automationAccounts', parameters('name')), '2021-06-22', 'full').location]",
              "metadata": {
                "description": "The location the resource was deployed into."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Image-Template_{0}', parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('User-Assigned-Managed-Identity_{0}', parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Log-Analytics-Workspace_{0}', parameters('time')))]"
      ]
    },
    {
      "copy": {
        "name": "modules",
        "count": "[length(range(0, length(variables('varModules'))))]",
        "mode": "serial",
        "batchSize": 1
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Automation-Account-Module_{0}_{1}', range(0, length(variables('varModules')))[copyIndex()], parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[variables('varModules')[range(0, length(variables('varModules')))[copyIndex()]].name]"
          },
          "location": {
            "value": "[parameters('sharedServicesLocation')]"
          },
          "automationAccountName": {
            "value": "[reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Automation-Account_{0}', parameters('time')))).outputs.name.value]"
          },
          "uri": {
            "value": "[variables('varModules')[range(0, length(variables('varModules')))[copyIndex()]].uri]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "2560183311378928863"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Automation Account module."
              }
            },
            "automationAccountName": {
              "type": "string",
              "metadata": {
                "description": "Conditional. The name of the parent Automation Account. Required if the template is used in a standalone deployment."
              }
            },
            "uri": {
              "type": "string",
              "metadata": {
                "description": "Required. Module package URI, e.g. https://www.powershellgallery.com/api/v2/package."
              }
            },
            "version": {
              "type": "string",
              "defaultValue": "latest",
              "metadata": {
                "description": "Optional. Module version or specify latest to get the latest version."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the Automation Account resource."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Automation/automationAccounts/modules",
              "apiVersion": "2020-01-13-preview",
              "name": "[format('{0}/{1}', parameters('automationAccountName'), parameters('name'))]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "contentLink": {
                  "uri": "[if(not(equals(parameters('version'), 'latest')), format('{0}/{1}/{2}', parameters('uri'), parameters('name'), parameters('version')), format('{0}/{1}', parameters('uri'), parameters('name')))]",
                  "version": "[if(not(equals(parameters('version'), 'latest')), parameters('version'), null())]"
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the deployed module."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Automation/automationAccounts/modules', parameters('automationAccountName'), parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the deployed module."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group of the deployed module."
              }
            },
            "location": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Automation/automationAccounts/modules', parameters('automationAccountName'), parameters('name')), '2020-01-13-preview', 'full').location]",
              "metadata": {
                "description": "The location the resource was deployed into."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Automation-Account_{0}', parameters('time')))]"
      ]
    },
    {
      "condition": "[parameters('enableMonitoringAlerts')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Action-Group_{0}', parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "global"
          },
          "groupShortName": {
            "value": "aib-email"
          },
          "name": {
            "value": "[variables('varActionGroupName')]"
          },
          "enabled": {
            "value": true
          },
          "emailReceivers": {
            "value": [
              {
                "name": "[parameters('distributionGroup')]",
                "emailAddress": "[parameters('distributionGroup')]",
                "useCommonvarAlertschema": true
              }
            ]
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "12953045922734475142"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the action group."
              }
            },
            "groupShortName": {
              "type": "string",
              "metadata": {
                "description": "Required. The short name of the action group."
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Indicates whether this action group is enabled. If an action group is not enabled, then none of its receivers will receive communications."
              }
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
              }
            },
            "emailReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of email receivers that are part of this action group."
              }
            },
            "smsReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of SMS receivers that are part of this action group."
              }
            },
            "webhookReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of webhook receivers that are part of this action group."
              }
            },
            "itsmReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of ITSM receivers that are part of this action group."
              }
            },
            "azureAppPushReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of AzureAppPush receivers that are part of this action group."
              }
            },
            "automationRunbookReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of AutomationRunbook receivers that are part of this action group."
              }
            },
            "voiceReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of voice receivers that are part of this action group."
              }
            },
            "logicAppReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of logic app receivers that are part of this action group."
              }
            },
            "azureFunctionReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of function receivers that are part of this action group."
              }
            },
            "armRoleReceivers": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The list of ARM role receivers that are part of this action group. Roles are Azure RBAC roles and only built-in roles are supported."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "global",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            }
          },
          "resources": [
            {
              "type": "microsoft.insights/actionGroups",
              "apiVersion": "2019-06-01",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "properties": {
                "groupShortName": "[parameters('groupShortName')]",
                "enabled": "[parameters('enabled')]",
                "emailReceivers": "[if(empty(parameters('emailReceivers')), null(), parameters('emailReceivers'))]",
                "smsReceivers": "[if(empty(parameters('smsReceivers')), null(), parameters('smsReceivers'))]",
                "webhookReceivers": "[if(empty(parameters('webhookReceivers')), null(), parameters('webhookReceivers'))]",
                "itsmReceivers": "[if(empty(parameters('itsmReceivers')), null(), parameters('itsmReceivers'))]",
                "azureAppPushReceivers": "[if(empty(parameters('azureAppPushReceivers')), null(), parameters('azureAppPushReceivers'))]",
                "automationRunbookReceivers": "[if(empty(parameters('automationRunbookReceivers')), null(), parameters('automationRunbookReceivers'))]",
                "voiceReceivers": "[if(empty(parameters('voiceReceivers')), null(), parameters('voiceReceivers'))]",
                "logicAppReceivers": "[if(empty(parameters('logicAppReceivers')), null(), parameters('logicAppReceivers'))]",
                "azureFunctionReceivers": "[if(empty(parameters('azureFunctionReceivers')), null(), parameters('azureFunctionReceivers'))]",
                "armRoleReceivers": "[if(empty(parameters('armRoleReceivers')), null(), parameters('armRoleReceivers'))]"
              }
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "1882150209236915071"
                    }
                  },
                  "resources": []
                }
              }
            },
            {
              "copy": {
                "name": "actionGroup_rbac",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-ActionGroup-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "resourceId": {
                    "value": "[resourceId('microsoft.insights/actionGroups', parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "69138397619764739"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array"
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string"
                    },
                    "resourceId": {
                      "type": "string"
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Automation Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f353d9bd-d4a6-484e-a77a-8050b599b867')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2021-04-01-preview",
                      "scope": "[format('microsoft.insights/actionGroups/{0}', last(split(parameters('resourceId'), '/')))]",
                      "name": "[guid(last(split(parameters('resourceId'), '/')), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('microsoft.insights/actionGroups', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group the action group was deployed into"
              }
            },
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the action group "
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('microsoft.insights/actionGroups', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the action group "
              }
            }
          }
        }
      },
      "dependsOn": [
        "[subscriptionResourceId(parameters('sharedServicesSubId'), 'Microsoft.Resources/deployments', format('Resource-Group_{0}', parameters('time')))]"
      ]
    },
    {
      "condition": "[parameters('enableMonitoringAlerts')]",
      "copy": {
        "name": "scheduledQueryRules",
        "count": "[length(range(0, length(variables('varAlerts'))))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('Scheduled-Query-Rule_{0}_{1}', range(0, length(variables('varAlerts')))[copyIndex()], parameters('time'))]",
      "subscriptionId": "[parameters('sharedServicesSubId')]",
      "resourceGroup": "[variables('varResourceGroupName')]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "location": {
            "value": "[parameters('sharedServicesLocation')]"
          },
          "name": {
            "value": "[variables('varAlerts')[range(0, length(variables('varAlerts')))[copyIndex()]].name]"
          },
          "alertDescription": {
            "value": "[variables('varAlerts')[range(0, length(variables('varAlerts')))[copyIndex()]].description]"
          },
          "enabled": {
            "value": true
          },
          "kind": {
            "value": "LogAlert"
          },
          "autoMitigate": {
            "value": false
          },
          "skipQueryValidation": {
            "value": false
          },
          "targetResourceTypes": {
            "value": []
          },
          "roleAssignments": {
            "value": []
          },
          "scopes": {
            "value": "[if(empty(parameters('distributionGroup')), createArray(), if(empty(parameters('existingLogAnalyticsWorkspaceResourceId')), createArray(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Log-Analytics-Workspace_{0}', parameters('time'))), '2020-10-01').outputs.resourceId.value), createArray(parameters('existingLogAnalyticsWorkspaceResourceId'))))]"
          },
          "severity": {
            "value": "[variables('varAlerts')[range(0, length(variables('varAlerts')))[copyIndex()]].severity]"
          },
          "evaluationFrequency": {
            "value": "[variables('varAlerts')[range(0, length(variables('varAlerts')))[copyIndex()]].evaluationFrequency]"
          },
          "windowSize": {
            "value": "[variables('varAlerts')[range(0, length(variables('varAlerts')))[copyIndex()]].windowSize]"
          },
          "actions": {
            "value": "[if(not(empty(parameters('distributionGroup'))), createArray(reference(extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Action-Group_{0}', parameters('time'))), '2020-10-01').outputs.resourceId.value), createArray())]"
          },
          "criterias": {
            "value": "[variables('varAlerts')[range(0, length(variables('varAlerts')))[copyIndex()]].criterias]"
          },
          "tags": {
            "value": "[if(parameters('enableResourceTags'), variables('varCommonResourceTags'), createObject())]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "metadata": {
            "_generator": {
              "name": "bicep",
              "version": "0.11.1.770",
              "templateHash": "5323398236521491696"
            }
          },
          "parameters": {
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. The name of the Alert."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "alertDescription": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The description of the scheduled query rule."
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. The flag which indicates whether this scheduled query rule is enabled."
              }
            },
            "kind": {
              "type": "string",
              "defaultValue": "LogAlert",
              "allowedValues": [
                "LogAlert",
                "LogToMetric"
              ],
              "metadata": {
                "description": "Optional. Indicates the type of scheduled query rule."
              }
            },
            "autoMitigate": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. The flag that indicates whether the alert should be automatically resolved or not. Relevant only for rules of the kind LogAlert."
              }
            },
            "queryTimeRange": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. If specified (in ISO 8601 duration format) then overrides the query time range. Relevant only for rules of the kind LogAlert."
              }
            },
            "skipQueryValidation": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Optional. The flag which indicates whether the provided query should be validated or not. Relevant only for rules of the kind LogAlert."
              }
            },
            "targetResourceTypes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of resource type of the target resource(s) on which the alert is created/updated. For example if the scope is a resource group and targetResourceTypes is Microsoft.Compute/virtualMachines, then a different alert will be fired for each virtual machine in the resource group which meet the alert criteria. Relevant only for rules of the kind LogAlert."
              }
            },
            "roleAssignments": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'."
              }
            },
            "scopes": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Required. The list of resource IDs that this scheduled query rule is scoped to."
              }
            },
            "severity": {
              "type": "int",
              "defaultValue": 3,
              "allowedValues": [
                0,
                1,
                2,
                3,
                4
              ],
              "metadata": {
                "description": "Optional. Severity of the alert. Should be an integer between [0-4]. Value of 0 is severest. Relevant and required only for rules of the kind LogAlert."
              }
            },
            "evaluationFrequency": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. How often the scheduled query rule is evaluated represented in ISO 8601 duration format. Relevant and required only for rules of the kind LogAlert."
              }
            },
            "windowSize": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The period of time (in ISO 8601 duration format) on which the Alert query will be executed (bin size). Relevant and required only for rules of the kind LogAlert."
              }
            },
            "actions": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. Actions to invoke when the alert fires."
              }
            },
            "criterias": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The rule criteria that defines the conditions of the scheduled query rule."
              }
            },
            "suppressForMinutes": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Mute actions for the chosen period of time (in ISO 8601 duration format) after the alert is fired. If set, autoMitigate must be disabled.Relevant only for rules of the kind LogAlert."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "enableDefaultTelemetry": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Enable telemetry via the Customer Usage Attribution ID (GUID)."
              }
            }
          },
          "resources": [
            {
              "condition": "[parameters('enableDefaultTelemetry')]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2021-04-01",
              "name": "[format('pid-47ed15a6-730a-4827-bcb4-0fd963ffbd82-{0}', uniqueString(deployment().name, parameters('location')))]",
              "properties": {
                "mode": "Incremental",
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            },
            {
              "type": "Microsoft.Insights/scheduledQueryRules",
              "apiVersion": "2021-02-01-preview",
              "name": "[parameters('name')]",
              "location": "[parameters('location')]",
              "tags": "[parameters('tags')]",
              "kind": "[parameters('kind')]",
              "properties": {
                "actions": {
                  "actionGroups": "[parameters('actions')]",
                  "customProperties": {}
                },
                "autoMitigate": "[if(equals(parameters('kind'), 'LogAlert'), parameters('autoMitigate'), null())]",
                "criteria": "[parameters('criterias')]",
                "description": "[parameters('alertDescription')]",
                "displayName": "[parameters('name')]",
                "enabled": "[parameters('enabled')]",
                "evaluationFrequency": "[if(and(equals(parameters('kind'), 'LogAlert'), not(empty(parameters('evaluationFrequency')))), parameters('evaluationFrequency'), null())]",
                "muteActionsDuration": "[if(and(equals(parameters('kind'), 'LogAlert'), not(empty(parameters('suppressForMinutes')))), parameters('suppressForMinutes'), null())]",
                "overrideQueryTimeRange": "[if(and(equals(parameters('kind'), 'LogAlert'), not(empty(parameters('queryTimeRange')))), parameters('queryTimeRange'), null())]",
                "scopes": "[parameters('scopes')]",
                "severity": "[if(equals(parameters('kind'), 'LogAlert'), parameters('severity'), null())]",
                "skipQueryValidation": "[if(equals(parameters('kind'), 'LogAlert'), parameters('skipQueryValidation'), null())]",
                "targetResourceTypes": "[if(equals(parameters('kind'), 'LogAlert'), parameters('targetResourceTypes'), null())]",
                "windowSize": "[if(and(equals(parameters('kind'), 'LogAlert'), not(empty(parameters('windowSize')))), parameters('windowSize'), null())]"
              }
            },
            {
              "copy": {
                "name": "queryRule_roleAssignments",
                "count": "[length(parameters('roleAssignments'))]"
              },
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('{0}-QueryRule-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {
                  "description": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'description'), parameters('roleAssignments')[copyIndex()].description, '')]"
                  },
                  "principalIds": {
                    "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
                  },
                  "principalType": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'principalType'), parameters('roleAssignments')[copyIndex()].principalType, '')]"
                  },
                  "roleDefinitionIdOrName": {
                    "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
                  },
                  "condition": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'condition'), parameters('roleAssignments')[copyIndex()].condition, '')]"
                  },
                  "delegatedManagedIdentityResourceId": {
                    "value": "[if(contains(parameters('roleAssignments')[copyIndex()], 'delegatedManagedIdentityResourceId'), parameters('roleAssignments')[copyIndex()].delegatedManagedIdentityResourceId, '')]"
                  },
                  "resourceId": {
                    "value": "[resourceId('Microsoft.Insights/scheduledQueryRules', parameters('name'))]"
                  }
                },
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "metadata": {
                    "_generator": {
                      "name": "bicep",
                      "version": "0.11.1.770",
                      "templateHash": "9504854405407133315"
                    }
                  },
                  "parameters": {
                    "principalIds": {
                      "type": "array",
                      "metadata": {
                        "description": "Required. The IDs of the principals to assign the role to."
                      }
                    },
                    "roleDefinitionIdOrName": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The name of the role to assign. If it cannot be found you can specify the role definition ID instead."
                      }
                    },
                    "resourceId": {
                      "type": "string",
                      "metadata": {
                        "description": "Required. The resource ID of the resource to apply the role assignment to."
                      }
                    },
                    "principalType": {
                      "type": "string",
                      "defaultValue": "",
                      "allowedValues": [
                        "ServicePrincipal",
                        "Group",
                        "User",
                        "ForeignGroup",
                        "Device",
                        ""
                      ],
                      "metadata": {
                        "description": "Optional. The principal type of the assigned principal ID."
                      }
                    },
                    "description": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The description of the role assignment."
                      }
                    },
                    "condition": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. The conditions on the role assignment. This limits the resources it can be assigned to. e.g.: @Resource[Microsoft.Storage/storageAccounts/blobServices/containers:ContainerName] StringEqualsIgnoreCase \"foo_storage_container\""
                      }
                    },
                    "conditionVersion": {
                      "type": "string",
                      "defaultValue": "2.0",
                      "allowedValues": [
                        "2.0"
                      ],
                      "metadata": {
                        "description": "Optional. Version of the condition."
                      }
                    },
                    "delegatedManagedIdentityResourceId": {
                      "type": "string",
                      "defaultValue": "",
                      "metadata": {
                        "description": "Optional. Id of the delegated managed identity resource."
                      }
                    }
                  },
                  "variables": {
                    "builtInRoleNames": {
                      "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
                      "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
                      "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
                      "Application Insights Component Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ae349356-3a1b-4a5e-921d-050484c6347e')]",
                      "Automation Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f353d9bd-d4a6-484e-a77a-8050b599b867')]",
                      "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
                      "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
                      "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
                      "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
                      "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
                      "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
                      "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
                      "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
                      "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
                      "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
                    }
                  },
                  "resources": [
                    {
                      "copy": {
                        "name": "roleAssignment",
                        "count": "[length(parameters('principalIds'))]"
                      },
                      "type": "Microsoft.Authorization/roleAssignments",
                      "apiVersion": "2022-04-01",
                      "scope": "[format('Microsoft.Insights/scheduledQueryRules/{0}', last(split(parameters('resourceId'), '/')))]",
                      "name": "[guid(resourceId('Microsoft.Insights/scheduledQueryRules', last(split(parameters('resourceId'), '/'))), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
                      "properties": {
                        "description": "[parameters('description')]",
                        "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                        "principalId": "[parameters('principalIds')[copyIndex()]]",
                        "principalType": "[if(not(empty(parameters('principalType'))), parameters('principalType'), null())]",
                        "condition": "[if(not(empty(parameters('condition'))), parameters('condition'), null())]",
                        "conditionVersion": "[if(and(not(empty(parameters('conditionVersion'))), not(empty(parameters('condition')))), parameters('conditionVersion'), null())]",
                        "delegatedManagedIdentityResourceId": "[if(not(empty(parameters('delegatedManagedIdentityResourceId'))), parameters('delegatedManagedIdentityResourceId'), null())]"
                      }
                    }
                  ]
                }
              },
              "dependsOn": [
                "[resourceId('Microsoft.Insights/scheduledQueryRules', parameters('name'))]"
              ]
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The Name of the created query rule."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Insights/scheduledQueryRules', parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the created query rule."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The Resource Group of the created query rule."
              }
            },
            "location": {
              "type": "string",
              "value": "[reference(resourceId('Microsoft.Insights/scheduledQueryRules', parameters('name')), '2021-02-01-preview', 'full').location]",
              "metadata": {
                "description": "The location the resource was deployed into."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Action-Group_{0}', parameters('time')))]",
        "[extensionResourceId(format('/subscriptions/{0}/resourceGroups/{1}', parameters('sharedServicesSubId'), variables('varResourceGroupName')), 'Microsoft.Resources/deployments', format('Log-Analytics-Workspace_{0}', parameters('time')))]"
      ]
    }
  ]
}