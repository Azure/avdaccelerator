{
	"$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json",
	"view": {
		"kind": "Form",
		"properties": {
			"title": "Add Session Hosts to Host Pool",
			"steps": [
				{
					"name": "basics",
					"label": "Basics",
					"elements": [
						{
							"name": "resourceScope",
							"type": "Microsoft.Common.ResourceScope",
							"location": {
								"resourceTypes": [
									"microsoft.compute/virtualMachines"
								]
							},
							"instanceDetailsLabel": "Virtual Machines Region and Resource Group"
						},
						{
							"type": "Microsoft.Common.ResourceGroupSelector",
							"name": "resourceGroup",
							"label": "Resource Group",
							"allowedMode": "UseExisting",
							"scope": {
								"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]"
							}
						},
						{
							"name": "deployment",
							"type": "Microsoft.Common.Section",
							"label": "Deployment Details",
							"elements": [
								{
									"name": "prefix",
									"type": "Microsoft.Common.TextBox",
									"label": "Deployment Prefix",
									"subLabel": "",
									"defaultValue": "AVD1",
									"toolTip": "The name of the resource group to deploy. (Default: AVD1)",
									"constraints": {
										"required": true,
										"validations": [
											{
												"isValid": "[or(or(empty(steps('basics').deploymentPrefix),and(not(startsWith(steps('basics').deploymentPrefix,'[[')),startsWith(steps('basics').deploymentPrefix,'['),endsWith(steps('basics').deploymentPrefix,']'),greater(indexOf(steps('basics').deploymentPrefix,'('),-1),greater(indexOf(steps('basics').deploymentPrefix,')'),-1))),greaterOrEquals(length(steps('basics').deploymentPrefix),2))]",
												"message": "The value must have a length of at least 2."
											},
											{
												"isValid": "[or(or(empty(steps('basics').deploymentPrefix),and(not(startsWith(steps('basics').deploymentPrefix,'[[')),startsWith(steps('basics').deploymentPrefix,'['),endsWith(steps('basics').deploymentPrefix,']'),greater(indexOf(steps('basics').deploymentPrefix,'('),-1),greater(indexOf(steps('basics').deploymentPrefix,')'),-1))),lessOrEquals(length(steps('basics').deploymentPrefix),4))]",
												"message": "The value must have a length of at most 4."
											}
										]
									}
								},
								{
									"name": "environment",
									"type": "Microsoft.Common.DropDown",
									"label": "Deployment Environment",
									"defaultValue": "Dev",
									"toolTip": "The name of the resource group to deploy.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Dev",
												"value": "Dev"
											},
											{
												"label": "Test",
												"value": "Test"
											},
											{
												"label": "Prod",
												"value": "Prod"
											}
										]
									}
								},
								{
									"name": "hostPool",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": true,
									"label": "Hostpool to update",
									"resourceType": "Microsoft.DesktopVirtualization/hostPools",
									"constraints": {
										"required": true
									}
								}
							],
							"visible": true
						},
						{
							"name": "encryptionAtHostFeatureApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"condition": "[not(empty(steps('basics').resourceScope.subscription))]",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/providers/Microsoft.Features/providers/Microsoft.Compute/features/encryptionAtHost?api-version=2021-07-01')]"
							}
						}
					]
				},
				{
					"name": "virtualMachines",
					"label": "Virtual Machines",
					"elements": [
						{
							"name": "resourceSkusApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"condition": "[and(not(empty(steps('basics').resourceScope.subscription)), not(empty(steps('basics').resourceScope.location)))]",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/providers/Microsoft.Compute/skus?api-version=2021-07-01&$filter=location eq ', decodeUriComponent('%27'), steps('basics').resourceScope.location.name, decodeUriComponent('%27'))]"
							}
						},
						{
							"name": "naming",
							"type": "Microsoft.Common.Section",
							"label": "Virtual Machine Naming",
							"elements": [
								{
									"name": "customNaming",
									"type": "Microsoft.Common.CheckBox",
									"label": "Use Custom Session Host Name",
									"toolTip": "",
									"defaultValue": true
								},
								{
									"name": "vmNamePrefix",
									"type": "Microsoft.Common.TextBox",
									"label": "Session Host Name Prefix",
									"toolTip": "Session host prefix",
									"constraints": {
										"required": true,
										"regex": "^[a-zA-Z0-9_-]{1,11}$",
										"validationMessage": "The prefix can be 1-11 characters and must consist of only alphanumerics, underscores (_), or dashes (-)."
									},
									"visible": "[steps('virtualMachines').naming.customNaming]"
								},
								{
									"name": "index",
									"type": "Microsoft.Common.Slider",
									"label": "Starting number (index)",
									"defaultValue": 1,
									"toolTip": "Select the start number of the virtual machine suffix.",
									"min": 1,
									"max": 4998,
									"showStepMarkers": true,
									"constraints": {
										"required": true
									}
								},
								{
									"name": "count",
									"type": "Microsoft.Common.Slider",
									"label": "Number of Virtual Machines",
									"defaultValue": 1,
									"toolTip": "Select the number of virtual machines to deploy in your AVD host pool.",
									"min": 1,
									"max": 4999,
									"showStepMarkers": true,
									"constraints": {
										"required": true
									}
								}
							]
						},
						{
							"name": "settings",
							"type": "Microsoft.Common.Section",
							"label": "Virtual Machine Specs",
							"elements": [
								{
									"name": "diskSku",
									"type": "Microsoft.Common.DropDown",
									"label": "OS Disk SKU",
									"filter": true,
									"defaultValue": "Premium_LRS",
									"toolTip": "Select the disk SKU for the operating system disk.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Premium_LRS",
												"value": "Premium_LRS"
											},
											{
												"label": "Standard_LRS",
												"value": "Standard_LRS"
											},
											{
												"label": "StandardSSD_LRS",
												"value": "StandardSSD_LRS"
											}
										]
									}
								},
								{
									"name": "vmSize",
									"type": "Microsoft.Compute.SizeSelector",
									"label": "VM Size",
									"toolTip": "Select the size of the virtual machines. Multi-session hosts should have 4 - 24 vCPUs. Single session host should have 2 or more vCPUs.",
									"count": "[steps('virtualMachines').naming.count]",
									"recommendedSizes": [
										"Standard_D4ads_v5",
										"Standard_D8ads_v5",
										"Standard_D16ads_v5",
										"Standard_D32ads_v5",
										"Standard_D4ds_v4",
										"Standard_D8ds_v4",
										"Standard_D16ds_v4",
										"Standard_D32ds_v4",
										"Standard_D4s_v3",
										"Standard_D8s_v3",
										"Standard_D16s_v3",
										"Standard_D32s_v3"
									],
									"options": {
										"hideDiskTypeFilter": "[if(equals(steps('virtualMachines').settings.diskSku, 'Premium_LRS'), true, false)]"
									},
									"osPlatform": "Windows",
									"scope": {
										"location": "[steps('basics').resourceScope.location.name]",
										"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]"
									}
								},
								{
									"name": "enableAcceleratedNetworking",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable Accelerated Networking",
									"defaultValue": true,
									"toolTip": "Enables accelerated Networking on the session hosts."
								}
							]
						},
						{
							"name": "availability",
							"type": "Microsoft.Common.Section",
							"label": "Availability",
							"elements": [
								{
									"name": "option",
									"type": "Microsoft.Common.DropDown",
									"defaultValue": "[if(empty(first(map(first(map(filter(steps('virtualMachines').resourceSkusApi.value, (sku) => contains(sku.name, steps('virtualMachines').settings.vmSize)), (sku) => sku.locationInfo)), (sku) => sku.zones))), 'No infrastructure redundancy required', 'Availability Zones')]",
									"label": "Availability Option",
									"toolTip": "Select the redundancy / resiliency for the virtual machines.",
									"constraints": {
										"required": true,
										"allowedValues": "[if(empty(first(map(first(map(filter(steps('virtualMachines').resourceSkusApi.value, (sku) => contains(sku.name, steps('virtualMachines').settings.vmSize)), (sku) => sku.locationInfo)), (sku) => sku.zones))), parse('[{\"label\":\"No infrastructure redundancy required\",\"value\":\"None\"}]'), parse('[{\"label\":\"Availability Zones\",\"value\":\"AvailabilityZones\"},{\"label\":\"No infrastructure redundancy required\",\"value\":\"None\"}]'))]"
									}
								},
								{
									"name": "availabilityZones",
									"type": "Microsoft.Common.DropDown",
									"label": "Select Availability Zones",
									"defaultValue": [
										"Zone 1",
										"Zone 2",
										"Zone 3"
									],
									"multiselect": true,
									"selectAll": true,
									"toolTip": "Select the desired Availability Zones",
									"constraints": {
										"allowedValues": "[map(first(map(first(map(filter(steps('virtualMachines').resourceSkusApi.value, (sku) => contains(sku.name, steps('virtualMachines').settings.vmSize)), (sku) => sku.locationInfo)), (sku) => sku.zones)), (zone) => parse(concat('{\"label\":\"Zone ', zone, '\",\"value\":\"', zone, '\"}')))]",
										"required": true
									},
									"visible": "[equals(steps('virtualMachines').availability.option, 'AvailabilityZones')]"
								}
							]
						},
						{
							"name": "image",
							"type": "Microsoft.Common.Section",
							"label": "Operating System Image",
							"elements": [
								{
									"name": "source",
									"type": "Microsoft.Common.DropDown",
									"label": "Source",
									"filter": true,
									"defaultValue": "Marketplace",
									"toolTip": "Select marketplace or build custom image to deploy the session hosts.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Marketplace",
												"value": "marketplace"
											},
											{
												"label": "Compute Gallery",
												"value": "computegallery"
											}
										]
									}
								},
								{
									"name": "offer",
									"type": "Microsoft.Common.DropDown",
									"label": "Offer",
									"defaultValue": "Office 365",
									"toolTip": "Select the desired marketplace image offer.",
									"constraints": {
										"allowedValues": [
											{
												"label": "Office 365",
												"value": "office-365"
											},
											{
												"label": "Windows 10",
												"value": "Windows-10"
											},
											{
												"label": "Windows 11",
												"value": "windows-11"
											}
										],
										"required": true
									},
									"visible": "[equals(steps('virtualMachines').image.source, 'marketplace')]"
								},
								{
									"name": "skusApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[and(not(empty(steps('basics').resourceScope.subscription)), not(empty(steps('basics').resourceScope.location)), equals(steps('virtualMachines').image.source, 'marketplace'), not(empty(steps('virtualMachines').image.offer)))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').resourceScope.subscription.id, '/providers/Microsoft.Compute/locations/', steps('basics').resourceScope.location.name, '/publishers/MicrosoftWindowsDesktop/artifacttypes/vmimage/offers/', steps('virtualMachines').image.offer, '/skus?api-version=2022-08-01')]"
									}
								},
								{
									"name": "sku",
									"type": "Microsoft.Common.DropDown",
									"label": "SKU",
									"defaultValue": "win11-24h2-avd-m365",
									"toolTip": "Select the desired marketplace image SKU.",
									"constraints": {
										"allowedValues": "[map(steps('virtualMachines').image.skusApi, (sku) => parse(concat('{\"label\":\"', sku.name, '\",\"value\":\"', sku.name, '\"}')))]",
										"required": true
									},
									"visible": "[equals(steps('virtualMachines').image.source, 'marketplace')]"
								},
								{
									"name": "computeGallery",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": "[equals(steps('virtualMachines').image.source, 'computegallery')]",
									"label": "Compute Gallery",
									"resourceType": "Microsoft.Compute/galleries",
									"constraints": {
										"required": true
									}
								},
								{
									"name": "imageDefinitionsApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[and(equals(steps('virtualMachines').image.source, 'computegallery'), not(empty(steps('virtualMachines').image.computeGallery)))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('virtualMachines').image.computeGallery.id, '/images?api-version=2024-03-03')]",
										"transforms": {
											"list": "value|[*].{label:name, value:id}"
										}
									}
								},
								{
									"name": "imageDefinition",
									"type": "Microsoft.Common.DropDown",
									"label": "Image Definition",
									"constraints": {
										"allowedValues": "[steps('virtualMachines').image.imageDefinitionsApi.transformed.list]",
										"required": true
									},
									"visible": "[and(equals(steps('virtualMachines').image.source, 'computegallery'), not(empty(steps('virtualMachines').image.computeGallery)))]"
								}
							]
						},
						{
							"name": "security",
							"type": "Microsoft.Common.Section",
							"label": "Security Settings",
							"elements": [
								{
									"name": "asg",
									"type": "Microsoft.Solutions.ArmApiControl",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').resourceScope.resourceGroup.id, '/providers/Microsoft.Network/applicationSecurityGroups?api-version=2024-05-01')]"
									}
								},
								{
									"name": "securityType",
									"type": "Microsoft.Common.DropDown",
									"label": "Security Type",
									"placeholder": "",
									"defaultValue": "Trusted Launch",
									"toolTip": "Select the appropriate Security Type configuration for the Virtual Machine. Note that 'Confidential Virtual Machines' are not available in all regions and the option may not appear.",
									"constraints": {
										"allowedValues": [
											{
												"label": "Standard",
												"value": "Standard"
											},
											{
												"label": "Trusted Launch",
												"value": "TrustedLaunch"
											}
										],
										"required": true
									},
									"visible": true
								},
								{
									"name": "secureBootEnabled",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable Secure Boot",
									"toolTip": "Secure boot helps protect your VMs against boot kits, rootkits, and kernel-level malware.",
									"defaultValue": true,
									"visible": "[equals(steps('virtualMachines').security.securityType, 'TrustedLaunch')]"
								},
								{
									"name": "vTpmEnabled",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable vTPM",
									"toolTip": "Virtual Trusted Platform Module (vTPM) is TPM2.0 compliant and validates your VM boot integrity apart from securely storing keys and secrets.",
									"defaultValue": true,
									"visible": "[equals(steps('hosts').security.securityType, 'TrustedLaunch'))]"
								},
								{
									"name": "encryptionAtHost",
									"type": "Microsoft.Common.CheckBox",
									"label": "Encryption At Host",
									"toolTip": "Check to enable Encryption At Host",
									"defaultValue": "[if(equals(steps('basics').encryptionAtHostFeatureApi.properties.state, 'Registered'), true, false)]",
									"visible": "[equals(steps('basics').encryptionAtHostFeatureApi.properties.state, 'Registered')]"
								},
								{
									"name": "diskZeroTrust",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable Customer-Managed Keys on OS Disk",
									"toolTip": "Enables a zero trust configuration on the session host disks.",
									"visible": true
								},
								{
									"name": "diskEncryptionSetApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[steps('virtualMachines').security.diskZeroTrust]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').resourceScope.resourceGroup.id, '/providers/Microsoft.Compute/diskEncryptionSets?api-version=2024-03-02')]",
										"transforms": {
											"list": "value|[*].{label:name, value:id}"
										}
									}
								},
								{
									"name": "diskEncryptionSet",
									"type": "Microsoft.Common.DropDown",
									"label": "Disk Encryption Set",
									"constraints": {
										"allowedValues": "[steps('virtualMachines').security.diskEncryptionSetApi.transformed.list]",
										"required": true
									},
									"visible": "[steps('virtualMachines').security.diskZeroTrust]"
								},
								{
									"name": "deployAntiMalwareExt",
									"type": "Microsoft.Common.CheckBox",
									"label": "Deploy Anti-Malware Extension",
									"defaultValue": true,
									"toolTip": "Deploys anti-malware extension on session hosts."
								}
							]
						},
						{
							"name": "identityAndAccounts",
							"type": "Microsoft.Common.Section",
							"label": "Identity and Account Settings",
							"elements": [
								{
									"name": "identityServiceProvider",
									"type": "Microsoft.Common.OptionsGroup",
									"visible": true,
									"label": "Identity Service Provider",
									"defaultValue": "Active Directory (AD DS)",
									"toolTip": "Choose the identity service provider for your users and session hosts. Your choices explained:</br></br><b>Active Directory (ADDS)</b>: The users are sourced from ADDS and session hosts will be domain joined.</br></br><b>Microsoft Entra Domain Services</b>: The users are sourced from Entra ID or ADDS and the session hosts are joined to Entra Domain Services.</br></br><b>Microsoft Entra ID</b>: The users are sourced from Entra ID and the session hosts will join Entra ID.</br></br><b>Microsoft Entra ID Kerberos</b>: The Users are sourced from ADDS, but the session hosts will be joined to Entra ID.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Active Directory (AD DS)",
												"value": "ADDS"
											},
											{
												"label": "Microsoft Entra Domain Services",
												"value": "EntraDS"
											},
											{
												"label": "Microsoft Entra ID",
												"value": "EntraID"
											},
											{
												"label": "Microsoft Entra ID Kerberos",
												"value": "EntraIDKerberos"
											}
										]
									}
								},
								{
									"name": "identityServiceProviderInfo1",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[equals(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'EntraID')]",
									"options": {
										"text": "If you are deploying this solution with FSLogix Storage, storage account key access must be permitted within your subscription. This solution will securely configure your session host to access the FSLogix Azure Files storage with the storage account key.",
										"uri": "https://techcommunity.microsoft.com/blog/fslogix-blog/fslogix-profile-containers-for-azure-ad-cloud-only-identities/3739352",
										"style": "Warning"
									}
								},
								{
									"name": "intuneEnrollment",
									"type": "Microsoft.Common.CheckBox",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'EntraID')]",
									"label": "Intune enrollment",
									"toolTip": "If Intune is configured in your Microsoft Entra ID tenant, you can choose to have the VM automatically enrolled during the deployment by selecting this box."
								},
								{
									"name": "identityDomainName",
									"type": "Microsoft.Common.TextBox",
									"label": "Domain name",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS')]",
									"toolTip": "The full qualified domain name of the domain to which the virtual machines will be joined.",
									"placeholder": "Example: contoso.com",
									"constraints": {
										"required": true
									}
								},
								{
									"name": "ouPath",
									"type": "Microsoft.Common.TextBox",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS')]",
									"label": "OU Path",
									"toolTip": "Optionally, input the distinguished name of the desired organization unit for the AVD session hosts.",
									"placeholder": "Example: OU=pooled,OU=avd,DC=contoso,DC=com",
									"constraints": {
										"required": false
									}
								},
								{
									"name": "domainJoinUserPrincipalName",
									"type": "Microsoft.Common.TextBox",
									"placeholder": "domainjoin@contoso.com",
									"label": "Domain Join User Principal Name",
									"toolTip": "The User Principal Name of the domain join account.",
									"constraints": {
										"regex": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
										"required": true
									},
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS)]"
								},
								{
									"name": "secretsInfoBox1",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'EntraID')]",
									"options": {
										"text": "This add-on requires that the following secret names and values are stored in a key vault that you will select below:</br><ul><li><b>vmLocalUserName</b>: The virtual machine administrator username.</li><li><b>vmLocalUserPassword</b>: The virtual machine administrator password.",
										"style": "Info"
									}
								},
								{
									"name": "secretsInfoBox2",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS')]",
									"options": {
										"text": "This add-on requires that the following secret names and values are stored in a key vault that you will select below:</br><ul><li><b>domainJoinUserPassword</b>: The password associated with the user principal name specified above.</li><li><b>vmLocalUserName</b>: The virtual machine administrator username.</li><li><b>vmLocalUserPassword</b>: The virtual machine administrator password.",
										"style": "Info"
									}
								},
								{
									"name": "keyVault",
									"type": "Microsoft.Solutions.ResourceSelector",
									"label": "Select Keyvault containing workload secrets",
									"resourceType": "Microsoft.KeyVault/vaults",
									"toolTip": "Select Keyvault which contains the secrets",
									"constraints": {
										"required": true
									}
								}
							]
						},
						{
							"name": "network",
							"type": "Microsoft.Common.Section",
							"label": "Network",
							"elements": [
								{
									"name": "virtualNetwork",
									"type": "Microsoft.Solutions.ResourceSelector",
									"label": "Virtual Network",
									"resourceType": "Microsoft.Network/virtualNetworks",
									"constraints": {
										"required": true
									},
									"scope": {
										"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]",
										"location": "[steps('basics').resourceScope.location.name]"
									}
								},
								{
									"name": "subnetsApi",
									"condition": "[not(empty(steps('virtualMachines').network.virtualNetwork))]",
									"type": "Microsoft.Solutions.ArmApiControl",
									"request": {
										"method": "GET",
										"path": "[concat(steps('virtualMachines').network.virtualNetwork.id, '/subnets?api-version=2022-05-01')]",
										"transforms": {
											"list": "value|[*].{label:name, value:name}"
										}
									}
								},
								{
									"name": "subnet",
									"type": "Microsoft.Common.DropDown",
									"visible": true,
									"label": "Subnet",
									"defaultValue": "",
									"toolTip": "Select an existing subnet for the AVD session hosts.",
									"constraints": {
										"required": true,
										"allowedValues": "[steps('virtualMachines').network.subnetsApi.transformed.list]"
									}
								}
							]
						},
						{
							"name": "monitoring",
							"type": "Microsoft.Common.Section",
							"label": "Monitoring",
							"elements": [
								{
									"name": "enableMonitoring",
									"type": "Microsoft.Common.CheckBox",
									"label": "Deploy Azure Monitor Agent and Associate Data Collection Rule",
									"toolTip": "Deploy AVD monitoring resources and setings."
								},
								{
									"name": "laWorkspace",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": "[steps('virtualMachines').monitoring.enableMonitoring]",
									"label": "Log Analytics Workspace",
									"resourceType": "Microsoft.OperationalInsights/workspaces",
									"constraints": {
										"required": true
									}
								},
								{
									"name": "dataCollectionRule",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": "[steps('virtualMachines').monitoring.enableMonitoring]",
									"label": "AVD Insights Data Collection Rule",
									"resourceType": "Microsoft.Insights/dataCollectionRules",
									"constraints": {
										"required": true
									},
									"scope": {
										"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]",
										"location": "[steps('basics').resourceScope.location.name]"
									}
								}
							]
						},
						{
							"name": "fslogix",
							"type": "Microsoft.Common.Section",
							"label": "FSLogix",
							"elements": [
								{
									"name": "configureFslogix",
									"type": "Microsoft.Common.CheckBox",
									"label": "Configure Fslogix",
									"defaultValue": true,
									"toolTip": "Configure FSLogix on Session Hosts via the registry"
								},
								{
									"name": "storageAccount",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": "[steps('virtualMachines').fslogix.configureFslogix]",
									"label": "FSLogix Azure Files Storage Account",
									"resourceType": "Microsoft.Storage/storageAccounts",
									"constraints": {
										"required": true
									},
									"scope": {
										"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]",
										"location": "[steps('basics').resourceScope.location.name]"
									}
								},
								{
									"name": "sharesApi",
									"condition": "[not(empty(steps('virtualMachines').fslogix.storageAccount.id))]",
									"type": "Microsoft.Solutions.ArmApiControl",
									"request": {
										"method": "GET",
										"path": "[concat(steps('virtualMachines').fslogix.storageAccount.id, '/fileServices/default/shares?api-version=2023-05-01')]",
										"transforms": {
											"list": "value|[*].{label:name, value:name}"
										}
									}
								},
								{
									"name": "fileShareName",
									"type": "Microsoft.Common.DropDown",
									"label": "File Share Name",
									"constraints": {
										"allowedValues": "[steps('virtualMachines').fslogix.sharesApi.transformed.list]",
										"required": true
									},
									"visible": "[not(empty(steps('virtualMachines').fslogix.storageAccount.id))]"
								}
							]
						}
					]
				},
				{
					"name": "tags",
					"label": "Tags",
					"elements": [
						{
							"name": "createResourceTags",
							"type": "Microsoft.Common.CheckBox",
							"label": "Create Resource Tags",
							"toolTip": "Apply tags on resources."
						},
						{
							"name": "applicationNameTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Application Name Tag",
							"placeHolder": "Contoso-App",
							"toolTip": "Details about the application.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "costCenterTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Cost Center Tag",
							"placeHolder": "Contoso-CC",
							"toolTip": "Cost center of owner team.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "departmentTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Department Tag",
							"placeHolder": "Contoso-AVD",
							"toolTip": "Department that owns the deployment",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "dataClassificationTag",
							"type": "Microsoft.Common.DropDown",
							"label": "Data Classification Tag",
							"defaultValue": "Non-business",
							"toolTip": "Sensitivity of data hosted",
							"constraints": {
								"required": false,
								"allowedValues": [
									{
										"label": "Non-business",
										"value": "Non-business"
									},
									{
										"label": "Public",
										"value": "Public"
									},
									{
										"label": "General",
										"value": "General"
									},
									{
										"label": "Confidential",
										"value": "Confidential"
									},
									{
										"label": "Highly-confidential",
										"value": "Highly-confidential"
									}
								]
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "opsTeamTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Ops Team Tag",
							"placeHolder": "workload-admins@Contoso.com",
							"toolTip": "Team accountable for day-to-day operations.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "ownerTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Owner Tag",
							"defaultValue": "workload-owner@Contoso.com",
							"toolTip": "Organizational owner of the AVD deployment.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "workloadNameTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Workload Name Tag",
							"defaultValue": "Contoso-Workload",
							"toolTip": "The name of workload for tagging purposes.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "workloadTypeTag",
							"type": "Microsoft.Common.DropDown",
							"label": "Workload Type Tag",
							"subLabel": "",
							"defaultValue": "Light",
							"toolTip": "Reference to the size of the VM for your workloads",
							"constraints": {
								"required": false,
								"allowedValues": [
									{
										"label": "Light",
										"value": "Light"
									},
									{
										"label": "Medium",
										"value": "Medium"
									},
									{
										"label": "High",
										"value": "High"
									},
									{
										"label": "Power",
										"value": "Power"
									}
								]
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "workloadCriticalityTag",
							"type": "Microsoft.Common.DropDown",
							"label": "Workload Criticality Tag",
							"defaultValue": "Low",
							"toolTip": "Criticality of the workload.",
							"constraints": {
								"required": false,
								"allowedValues": [
									{
										"label": "Low",
										"value": "Low"
									},
									{
										"label": "Medium",
										"value": "Medium"
									},
									{
										"label": "High",
										"value": "High"
									},
									{
										"label": "Mission-critical",
										"value": "Mission-critical"
									},
									{
										"label": "Custom",
										"value": "Custom"
									}
								]
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "workloadCriticalityCustomValueTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Workload Criticality Custom Value Tag",
							"defaultValue": "Contoso-Critical",
							"toolTip": "Tag value for custom criticality value.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[and(steps('tags').createResourceTags, equals(steps('tags').workloadCriticalityTag, 'Custom'))]"
						},
						{
							"name": "workloadSlaTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Workload Sla Tag",
							"defaultValue": "Contoso-SLA",
							"toolTip": "Service level agreement level of the worload.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						}
					]
				}
			]
		},
		"outputs": {
			"kind": "Subscription",
			"subscriptionId": "[steps('basics').resourceScope.subscription.id]",
			"location": "[steps('basics').resourceScope.location.name]",
			"parameters": {
				"location": "[steps('basics').resourceScope.location.name]",
				"computeRgResourceGroupName": "[steps('basics').resourceGroup.value.name]",
				"deploymentPrefix": "[steps('basics').deployment.prefix]",
				"deploymentEnvironment": "[steps('basics').deployment.environment]",
				"hostPoolResourceId": "[steps('basics').deployment.hostPool.id]",
				"customNaming": "[steps('virtualMachines').naming.customNaming]",
				"sessionHostCustomNamePrefix": "[if(steps('virtualMachines').naming.customNaming, steps('virtualMachines').naming.vmNamePrefix, 'notapp')]",
				"count": "[steps('virtualMachines').naming.count]",
				"countIndex": "[steps('virtualMachines').naming.index]",
				"diskType": "[steps('virtualMachines').settings.diskSku]",
				"vmSize": "[steps('virtualMachines').settings.vmSize]",
				"enableAcceleratedNetworking": "[steps('virtualMachines').settings.enableAcceleratedNetworking]",
				"availability": "[steps('virtualMachines').availability.option]",
				"AvailabilityZones": "[if(equals(steps('virtualMachines').availability.option, 'AvailabilityZones'), steps('virtualMachines').availability.availabilityZones, parse('[]'))]",
				"useSharedImage": "[if(equals(steps('virtualMachines').image.source, 'computegallery'), true, false)]",
				"mpImageOffer": "[if(equals(steps('virtualMachines').image.source, 'marketplace'), steps('virtualMachines').image.offer, '')]",
				"mpImageSku": "[if(equals(steps('virtualMachines').image.source, 'marketplace'), steps('virtualMachines').image.sku, '')]",
				"customImageDefinitionId": "[if(equals(steps('virtualMachines').image.source, 'computeGallery'), steps('virtualMachines').image.imageDefinition, '')]",
				"asgResourceId": "[if(empty(steps('virtualMachines').security.asg), '', first(map(steps('virtualMachines').security.asg.value, (asg) => asg.id)))]",
				"securityType": "[steps('virtualMachines').security.securityType]",
				"secureBootEnabled": "[if(equals(steps('virtualMachines').security.securityType, 'TrustedLaunch'), steps('virtualMachines').security.secureBootEnabled, false)]",
				"vTpmEnabled": "[if(equals(steps('virtualMachines').security.securityType, 'TrustedLaunch'), steps('virtualMachines').security.vTpmEnabled, false)]",
				"encryptionAtHost": "[steps('virtualMachines').security.encryptionAtHost]",
				"diskEncryptionSetResourceId": "[if(steps('virtualMachines').security.diskZeroTrust, steps('virtualMachines').security.diskEncryptionSet, '')]",
				"deployAntiMalwareExt": "[steps('virtualMachines').security.deployAntiMalwareExt]",
				"identityServiceProvider": "[steps('virtualMachines').identityAndAccounts.identityServiceProvider]",
				"createIntuneEnrollment": "[steps('virtualMachines').identityAndAccounts.intuneEnrollment]",
				"identityDomainName": "[if(contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS'), steps('virtualMachines').identityAndAccounts.identityDomainName, '')]",
				"sessionHostOuPath": "[if(contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS'), steps('virtualMachines').identityAndAccounts.ouPath, '')]",
				"keyVaultResourceId": "[steps('virtualMachines').identityAndAccounts.keyVault.id]",
				"domainJoinUserPrincipalName": "[if(contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS'), steps('virtualMachines').identityAndAccounts.domainJoinUserPrincipalName, '')]",
				"subnetResourceId": "[steps('virtualMachines').network.subnet]",
				"enableMonitoring": "[steps('virtualMachines').monitoring.enableMonitoring]",
				"configureFslogix": "[steps('virtualMachines').fslogix.configureFslogix]",
				"laWorkspaceResourceId": "[if(steps('virtualMachines').monitoring.enableMonitoring, steps('virtualMachines').monitoring.laWorkspace.id, '')]",
				"fslogixStorageAccountResourceId": "[if(steps('virtualMachines').fslogix.configureFslogix, steps('virtualMachines').fslogix.storageAccount.id, '')]",
				"fslogixFileShareName": "[if(steps('virtualMachines').fslogix.configureFslogix, steps('virtualMachines').fslogix.fileShareName, '')]",
				"dataCollectionRuleId": "[if(steps('virtualMachines').monitoring.enableMonitoring, steps('virtualMachines').monitoring.dataCollectionRule.id, '')]",
				"createResourceTags": "[steps('tags').createResourceTags]",
				"applicationNameTag": "[if(steps('tags').createResourceTags, steps('tags').applicationNameTag, '')]",
				"costCenterTag": "[if(steps('tags').createResourceTags, steps('tags').costCenterTag, '')]",
				"departmentTag": "[if(steps('tags').createResourceTags, steps('tags').departmentTag, '')]",
				"dataClassificationTag": "[if(steps('tags').createResourceTags, steps('tags').dataClassificationTag, '')]",
				"opsTeamTag": "[if(steps('tags').createResourceTags, steps('tags').opsTeamTag, '')]",
				"ownerTag": "[if(steps('tags').createResourceTags, steps('tags').ownerTag, '')]",
				"workloadNameTag": "[if(steps('tags').createResourceTags, steps('tags').workloadNameTag, '')]",
				"workloadTypeTag": "[if(steps('tags').createResourceTags, steps('tags').workloadTypeTag, '')]",
				"workloadCriticalityTag": "[if(steps('tags').createResourceTags, steps('tags').workloadCriticalityTag, '')]",
				"workloadCriticalityCustomValueTag": "[if(and(steps('tags').createResourceTags, equals(steps('tags').workloadCriticalityTag, 'Custom')), steps('tags').workloadCriticalityCustomValueTag, '')]",
				"workloadSlaTag": "[if(steps('tags').createResourceTags, steps('tags').workloadSlaTag, '')]"
			}
		}
	}
}