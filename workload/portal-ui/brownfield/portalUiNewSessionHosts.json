{
<<<<<<< HEAD
	"$schema": "https://schema.management.azure.com/schemas/2021-09-09/uiFormDefinition.schema.json",
	"view": {
		"kind": "Form",
		"properties": {
			"title": "Add Session Hosts to Host Pool",
			"steps": [
				{
					"name": "basics",
					"label": "Basics",
					"elements": [
						{
							"name": "resourceScope",
							"type": "Microsoft.Common.ResourceScope",
							"location": {
								"resourceTypes": [
									"microsoft.compute/virtualMachines"
								]
							},
							"instanceDetailsLabel": "Virtual Machines Region and Resource Group"
						},
						{
							"type": "Microsoft.Common.ResourceGroupSelector",
							"name": "resourceGroup",
							"label": "Resource Group",
							"allowedMode": "UseExisting",
							"scope": {
								"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]"
							}
						},
						{
							"name": "deployment",
							"type": "Microsoft.Common.Section",
							"label": "Deployment Details",
							"elements": [
								{
									"name": "prefix",
									"type": "Microsoft.Common.TextBox",
									"label": "Deployment Prefix",
									"subLabel": "",
									"defaultValue": "AVD1",
									"toolTip": "The name of the resource group to deploy. (Default: AVD1)",
									"constraints": {
										"required": true,
										"validations": [
											{
												"isValid": "[or(or(empty(steps('basics').deploymentPrefix),and(not(startsWith(steps('basics').deploymentPrefix,'[[')),startsWith(steps('basics').deploymentPrefix,'['),endsWith(steps('basics').deploymentPrefix,']'),greater(indexOf(steps('basics').deploymentPrefix,'('),-1),greater(indexOf(steps('basics').deploymentPrefix,')'),-1))),greaterOrEquals(length(steps('basics').deploymentPrefix),2))]",
												"message": "The value must have a length of at least 2."
											},
											{
												"isValid": "[or(or(empty(steps('basics').deploymentPrefix),and(not(startsWith(steps('basics').deploymentPrefix,'[[')),startsWith(steps('basics').deploymentPrefix,'['),endsWith(steps('basics').deploymentPrefix,']'),greater(indexOf(steps('basics').deploymentPrefix,'('),-1),greater(indexOf(steps('basics').deploymentPrefix,')'),-1))),lessOrEquals(length(steps('basics').deploymentPrefix),4))]",
												"message": "The value must have a length of at most 4."
											}
										]
									}
								},
								{
									"name": "environment",
									"type": "Microsoft.Common.DropDown",
									"label": "Deployment Environment",
									"defaultValue": "Dev",
									"toolTip": "The name of the resource group to deploy.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Dev",
												"value": "Dev"
											},
											{
												"label": "Test",
												"value": "Test"
											},
											{
												"label": "Prod",
												"value": "Prod"
											}
										]
									}
								},
								{
									"name": "hostPool",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": true,
									"label": "Hostpool to update",
									"resourceType": "Microsoft.DesktopVirtualization/hostPools",
									"constraints": {
										"required": true
									}
								}
							],
							"visible": true
						},
						{
							"name": "encryptionAtHostFeatureApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"condition": "[not(empty(steps('basics').resourceScope.subscription))]",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/providers/Microsoft.Features/providers/Microsoft.Compute/features/encryptionAtHost?api-version=2021-07-01')]"
							}
						}
					]
				},
				{
					"name": "virtualMachines",
					"label": "Virtual Machines",
					"elements": [
						{
							"name": "resourceSkusApi",
							"type": "Microsoft.Solutions.ArmApiControl",
							"condition": "[and(not(empty(steps('basics').resourceScope.subscription)), not(empty(steps('basics').resourceScope.location)))]",
							"request": {
								"method": "GET",
								"path": "[concat(steps('basics').resourceScope.subscription.id, '/providers/Microsoft.Compute/skus?api-version=2021-07-01&$filter=location eq ', decodeUriComponent('%27'), steps('basics').resourceScope.location.name, decodeUriComponent('%27'))]"
							}
						},
						{
							"name": "naming",
							"type": "Microsoft.Common.Section",
							"label": "Virtual Machine Naming",
							"elements": [
								{
									"name": "customNaming",
									"type": "Microsoft.Common.CheckBox",
									"label": "Use Custom Session Host Name",
									"toolTip": "",
									"defaultValue": true
								},
								{
									"name": "vmNamePrefix",
									"type": "Microsoft.Common.TextBox",
									"label": "Session Host Name Prefix",
									"toolTip": "Session host prefix",
									"constraints": {
										"required": true,
										"regex": "^[a-zA-Z0-9_-]{1,11}$",
										"validationMessage": "The prefix can be 1-11 characters and must consist of only alphanumerics, underscores (_), or dashes (-)."
									},
									"visible": "[steps('virtualMachines').naming.customNaming]"
								},
								{
									"name": "index",
									"type": "Microsoft.Common.Slider",
									"label": "Starting number (index)",
									"defaultValue": 1,
									"toolTip": "Select the start number of the virtual machine suffix.",
									"min": 1,
									"max": 4998,
									"showStepMarkers": true,
									"constraints": {
										"required": true
									}
								},
								{
									"name": "count",
									"type": "Microsoft.Common.Slider",
									"label": "Number of Virtual Machines",
									"defaultValue": 1,
									"toolTip": "Select the number of virtual machines to deploy in your AVD host pool.",
									"min": 1,
									"max": 4999,
									"showStepMarkers": true,
									"constraints": {
										"required": true
									}
								}
							]
						},
						{
							"name": "settings",
							"type": "Microsoft.Common.Section",
							"label": "Virtual Machine Specs",
							"elements": [
								{
									"name": "diskSku",
									"type": "Microsoft.Common.DropDown",
									"label": "OS Disk SKU",
									"filter": true,
									"defaultValue": "Premium_LRS",
									"toolTip": "Select the disk SKU for the operating system disk.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Premium_LRS",
												"value": "Premium_LRS"
											},
											{
												"label": "Standard_LRS",
												"value": "Standard_LRS"
											},
											{
												"label": "StandardSSD_LRS",
												"value": "StandardSSD_LRS"
											}
										]
									}
								},
								{
									"name": "vmSize",
									"type": "Microsoft.Compute.SizeSelector",
									"label": "VM Size",
									"toolTip": "Select the size of the virtual machines. Multi-session hosts should have 4 - 24 vCPUs. Single session host should have 2 or more vCPUs.",
									"count": "[steps('virtualMachines').naming.count]",
									"recommendedSizes": [
										"Standard_D4ads_v5",
										"Standard_D8ads_v5",
										"Standard_D16ads_v5",
										"Standard_D32ads_v5",
										"Standard_D4ds_v4",
										"Standard_D8ds_v4",
										"Standard_D16ds_v4",
										"Standard_D32ds_v4",
										"Standard_D4s_v3",
										"Standard_D8s_v3",
										"Standard_D16s_v3",
										"Standard_D32s_v3"
									],
									"options": {
										"hideDiskTypeFilter": "[if(equals(steps('virtualMachines').settings.diskSku, 'Premium_LRS'), true, false)]"
									},
									"osPlatform": "Windows",
									"scope": {
										"location": "[steps('basics').resourceScope.location.name]",
										"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]"
									}
								},
								{
									"name": "enableAcceleratedNetworking",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable Accelerated Networking",
									"defaultValue": true,
									"toolTip": "Enables accelerated Networking on the session hosts."
								}
							]
						},
						{
							"name": "availability",
							"type": "Microsoft.Common.Section",
							"label": "Availability",
							"elements": [
								{
									"name": "option",
									"type": "Microsoft.Common.DropDown",
									"defaultValue": "[if(empty(first(map(first(map(filter(steps('virtualMachines').resourceSkusApi.value, (sku) => contains(sku.name, steps('virtualMachines').settings.vmSize)), (sku) => sku.locationInfo)), (sku) => sku.zones))), 'No infrastructure redundancy required', 'Availability Zones')]",
									"label": "Availability Option",
									"toolTip": "Select the redundancy / resiliency for the virtual machines.",
									"constraints": {
										"required": true,
										"allowedValues": "[if(empty(first(map(first(map(filter(steps('virtualMachines').resourceSkusApi.value, (sku) => contains(sku.name, steps('virtualMachines').settings.vmSize)), (sku) => sku.locationInfo)), (sku) => sku.zones))), parse('[{\"label\":\"No infrastructure redundancy required\",\"value\":\"None\"}]'), parse('[{\"label\":\"Availability Zones\",\"value\":\"AvailabilityZones\"},{\"label\":\"No infrastructure redundancy required\",\"value\":\"None\"}]'))]"
									}
								},
								{
									"name": "availabilityZones",
									"type": "Microsoft.Common.DropDown",
									"label": "Select Availability Zones",
									"defaultValue": [
										"Zone 1",
										"Zone 2",
										"Zone 3"
									],
									"multiselect": true,
									"selectAll": true,
									"toolTip": "Select the desired Availability Zones",
									"constraints": {
										"allowedValues": "[map(first(map(first(map(filter(steps('virtualMachines').resourceSkusApi.value, (sku) => contains(sku.name, steps('virtualMachines').settings.vmSize)), (sku) => sku.locationInfo)), (sku) => sku.zones)), (zone) => parse(concat('{\"label\":\"Zone ', zone, '\",\"value\":\"', zone, '\"}')))]",
										"required": true
									},
									"visible": "[equals(steps('virtualMachines').availability.option, 'AvailabilityZones')]"
								}
							]
						},
						{
							"name": "image",
							"type": "Microsoft.Common.Section",
							"label": "Operating System Image",
							"elements": [
								{
									"name": "source",
									"type": "Microsoft.Common.DropDown",
									"label": "Source",
									"filter": true,
									"defaultValue": "Marketplace",
									"toolTip": "Select marketplace or build custom image to deploy the session hosts.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Marketplace",
												"value": "marketplace"
											},
											{
												"label": "Compute Gallery",
												"value": "computegallery"
											}
										]
									}
								},
								{
									"name": "offer",
									"type": "Microsoft.Common.DropDown",
									"label": "Offer",
									"defaultValue": "Office 365",
									"toolTip": "Select the desired marketplace image offer.",
									"constraints": {
										"allowedValues": [
											{
												"label": "Office 365",
												"value": "office-365"
											},
											{
												"label": "Windows 10",
												"value": "Windows-10"
											},
											{
												"label": "Windows 11",
												"value": "windows-11"
											}
										],
										"required": true
									},
									"visible": "[equals(steps('virtualMachines').image.source, 'marketplace')]"
								},
								{
									"name": "skusApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[and(not(empty(steps('basics').resourceScope.subscription)), not(empty(steps('basics').resourceScope.location)), equals(steps('virtualMachines').image.source, 'marketplace'), not(empty(steps('virtualMachines').image.offer)))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').resourceScope.subscription.id, '/providers/Microsoft.Compute/locations/', steps('basics').resourceScope.location.name, '/publishers/MicrosoftWindowsDesktop/artifacttypes/vmimage/offers/', steps('virtualMachines').image.offer, '/skus?api-version=2022-08-01')]"
									}
								},
								{
									"name": "sku",
									"type": "Microsoft.Common.DropDown",
									"label": "SKU",
									"defaultValue": "win11-24h2-avd-m365",
									"toolTip": "Select the desired marketplace image SKU.",
									"constraints": {
										"allowedValues": "[map(steps('virtualMachines').image.skusApi, (sku) => parse(concat('{\"label\":\"', sku.name, '\",\"value\":\"', sku.name, '\"}')))]",
										"required": true
									},
									"visible": "[equals(steps('virtualMachines').image.source, 'marketplace')]"
								},
								{
									"name": "computeGallery",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": "[equals(steps('virtualMachines').image.source, 'computegallery')]",
									"label": "Compute Gallery",
									"resourceType": "Microsoft.Compute/galleries",
									"constraints": {
										"required": true
									}
								},
								{
									"name": "imageDefinitionsApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[and(equals(steps('virtualMachines').image.source, 'computegallery'), not(empty(steps('virtualMachines').image.computeGallery)))]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('virtualMachines').image.computeGallery.id, '/images?api-version=2024-03-03')]",
										"transforms": {
											"list": "value|[*].{label:name, value:id}"
										}
									}
								},
								{
									"name": "imageDefinition",
									"type": "Microsoft.Common.DropDown",
									"label": "Image Definition",
									"constraints": {
										"allowedValues": "[steps('virtualMachines').image.imageDefinitionsApi.transformed.list]",
										"required": true
									},
									"visible": "[and(equals(steps('virtualMachines').image.source, 'computegallery'), not(empty(steps('virtualMachines').image.computeGallery)))]"
								}
							]
						},
						{
							"name": "security",
							"type": "Microsoft.Common.Section",
							"label": "Security Settings",
							"elements": [
								{
									"name": "asg",
									"type": "Microsoft.Solutions.ArmApiControl",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').resourceScope.resourceGroup.id, '/providers/Microsoft.Network/applicationSecurityGroups?api-version=2024-05-01')]"
									}
								},
								{
									"name": "securityType",
									"type": "Microsoft.Common.DropDown",
									"label": "Security Type",
									"placeholder": "",
									"defaultValue": "Trusted Launch",
									"toolTip": "Select the appropriate Security Type configuration for the Virtual Machine. Note that 'Confidential Virtual Machines' are not available in all regions and the option may not appear.",
									"constraints": {
										"allowedValues": [
											{
												"label": "Standard",
												"value": "Standard"
											},
											{
												"label": "Trusted Launch",
												"value": "TrustedLaunch"
											}
										],
										"required": true
									},
									"visible": true
								},
								{
									"name": "secureBootEnabled",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable Secure Boot",
									"toolTip": "Secure boot helps protect your VMs against boot kits, rootkits, and kernel-level malware.",
									"defaultValue": true,
									"visible": "[equals(steps('virtualMachines').security.securityType, 'TrustedLaunch')]"
								},
								{
									"name": "vTpmEnabled",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable vTPM",
									"toolTip": "Virtual Trusted Platform Module (vTPM) is TPM2.0 compliant and validates your VM boot integrity apart from securely storing keys and secrets.",
									"defaultValue": true,
									"visible": "[equals(steps('hosts').security.securityType, 'TrustedLaunch'))]"
								},
								{
									"name": "encryptionAtHost",
									"type": "Microsoft.Common.CheckBox",
									"label": "Encryption At Host",
									"toolTip": "Check to enable Encryption At Host",
									"defaultValue": "[if(equals(steps('basics').encryptionAtHostFeatureApi.properties.state, 'Registered'), true, false)]",
									"visible": "[equals(steps('basics').encryptionAtHostFeatureApi.properties.state, 'Registered')]"
								},
								{
									"name": "diskZeroTrust",
									"type": "Microsoft.Common.CheckBox",
									"label": "Enable Customer-Managed Keys on OS Disk",
									"toolTip": "Enables a zero trust configuration on the session host disks.",
									"visible": true
								},
								{
									"name": "diskEncryptionSetApi",
									"type": "Microsoft.Solutions.ArmApiControl",
									"condition": "[steps('virtualMachines').security.diskZeroTrust]",
									"request": {
										"method": "GET",
										"path": "[concat(steps('basics').resourceScope.resourceGroup.id, '/providers/Microsoft.Compute/diskEncryptionSets?api-version=2024-03-02')]",
										"transforms": {
											"list": "value|[*].{label:name, value:id}"
										}
									}
								},
								{
									"name": "diskEncryptionSet",
									"type": "Microsoft.Common.DropDown",
									"label": "Disk Encryption Set",
									"constraints": {
										"allowedValues": "[steps('virtualMachines').security.diskEncryptionSetApi.transformed.list]",
										"required": true
									},
									"visible": "[steps('virtualMachines').security.diskZeroTrust]"
								},
								{
									"name": "deployAntiMalwareExt",
									"type": "Microsoft.Common.CheckBox",
									"label": "Deploy Anti-Malware Extension",
									"defaultValue": true,
									"toolTip": "Deploys anti-malware extension on session hosts."
								}
							]
						},
						{
							"name": "identityAndAccounts",
							"type": "Microsoft.Common.Section",
							"label": "Identity and Account Settings",
							"elements": [
								{
									"name": "identityServiceProvider",
									"type": "Microsoft.Common.OptionsGroup",
									"visible": true,
									"label": "Identity Service Provider",
									"defaultValue": "Active Directory (AD DS)",
									"toolTip": "Choose the identity service provider for your users and session hosts. Your choices explained:</br></br><b>Active Directory (ADDS)</b>: The users are sourced from ADDS and session hosts will be domain joined.</br></br><b>Microsoft Entra Domain Services</b>: The users are sourced from Entra ID or ADDS and the session hosts are joined to Entra Domain Services.</br></br><b>Microsoft Entra ID</b>: The users are sourced from Entra ID and the session hosts will join Entra ID.</br></br><b>Microsoft Entra ID Kerberos</b>: The Users are sourced from ADDS, but the session hosts will be joined to Entra ID.",
									"constraints": {
										"required": true,
										"allowedValues": [
											{
												"label": "Active Directory (AD DS)",
												"value": "ADDS"
											},
											{
												"label": "Microsoft Entra Domain Services",
												"value": "EntraDS"
											},
											{
												"label": "Microsoft Entra ID",
												"value": "EntraID"
											},
											{
												"label": "Microsoft Entra ID Kerberos",
												"value": "EntraIDKerberos"
											}
										]
									}
								},
								{
									"name": "identityServiceProviderInfo1",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[equals(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'EntraID')]",
									"options": {
										"text": "If you are deploying this solution with FSLogix Storage, storage account key access must be permitted within your subscription. This solution will securely configure your session host to access the FSLogix Azure Files storage with the storage account key.",
										"uri": "https://techcommunity.microsoft.com/blog/fslogix-blog/fslogix-profile-containers-for-azure-ad-cloud-only-identities/3739352",
										"style": "Warning"
									}
								},
								{
									"name": "intuneEnrollment",
									"type": "Microsoft.Common.CheckBox",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'EntraID')]",
									"label": "Intune enrollment",
									"toolTip": "If Intune is configured in your Microsoft Entra ID tenant, you can choose to have the VM automatically enrolled during the deployment by selecting this box."
								},
								{
									"name": "identityDomainName",
									"type": "Microsoft.Common.TextBox",
									"label": "Domain name",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS')]",
									"toolTip": "The full qualified domain name of the domain to which the virtual machines will be joined.",
									"placeholder": "Example: contoso.com",
									"constraints": {
										"required": true
									}
								},
								{
									"name": "ouPath",
									"type": "Microsoft.Common.TextBox",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS')]",
									"label": "OU Path",
									"toolTip": "Optionally, input the distinguished name of the desired organization unit for the AVD session hosts.",
									"placeholder": "Example: OU=pooled,OU=avd,DC=contoso,DC=com",
									"constraints": {
										"required": false
									}
								},
								{
									"name": "domainJoinUserPrincipalName",
									"type": "Microsoft.Common.TextBox",
									"placeholder": "domainjoin@contoso.com",
									"label": "Domain Join User Principal Name",
									"toolTip": "The User Principal Name of the domain join account.",
									"constraints": {
										"regex": "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$",
										"required": true
									},
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS)]"
								},
								{
									"name": "secretsInfoBox1",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'EntraID')]",
									"options": {
										"text": "This add-on requires that the following secret names and values are stored in a key vault that you will select below:</br><ul><li><b>vmLocalUserName</b>: The virtual machine administrator username.</li><li><b>vmLocalUserPassword</b>: The virtual machine administrator password.",
										"style": "Info"
									}
								},
								{
									"name": "secretsInfoBox2",
									"type": "Microsoft.Common.InfoBox",
									"visible": "[contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS')]",
									"options": {
										"text": "This add-on requires that the following secret names and values are stored in a key vault that you will select below:</br><ul><li><b>domainJoinUserPassword</b>: The password associated with the user principal name specified above.</li><li><b>vmLocalUserName</b>: The virtual machine administrator username.</li><li><b>vmLocalUserPassword</b>: The virtual machine administrator password.",
										"style": "Info"
									}
								},
								{
									"name": "keyVault",
									"type": "Microsoft.Solutions.ResourceSelector",
									"label": "Select Keyvault containing workload secrets",
									"resourceType": "Microsoft.KeyVault/vaults",
									"toolTip": "Select Keyvault which contains the secrets",
									"constraints": {
										"required": true
									}
								}
							]
						},
						{
							"name": "network",
							"type": "Microsoft.Common.Section",
							"label": "Network",
							"elements": [
								{
									"name": "virtualNetwork",
									"type": "Microsoft.Solutions.ResourceSelector",
									"label": "Virtual Network",
									"resourceType": "Microsoft.Network/virtualNetworks",
									"constraints": {
										"required": true
									},
									"scope": {
										"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]",
										"location": "[steps('basics').resourceScope.location.name]"
									}
								},
								{
									"name": "subnetsApi",
									"condition": "[not(empty(steps('virtualMachines').network.virtualNetwork))]",
									"type": "Microsoft.Solutions.ArmApiControl",
									"request": {
										"method": "GET",
										"path": "[concat(steps('virtualMachines').network.virtualNetwork.id, '/subnets?api-version=2022-05-01')]",
										"transforms": {
											"list": "value|[*].{label:name, value:name}"
										}
									}
								},
								{
									"name": "subnet",
									"type": "Microsoft.Common.DropDown",
									"visible": true,
									"label": "Subnet",
									"defaultValue": "",
									"toolTip": "Select an existing subnet for the AVD session hosts.",
									"constraints": {
										"required": true,
										"allowedValues": "[steps('virtualMachines').network.subnetsApi.transformed.list]"
									}
								}
							]
						},
						{
							"name": "monitoring",
							"type": "Microsoft.Common.Section",
							"label": "Monitoring",
							"elements": [
								{
									"name": "enableMonitoring",
									"type": "Microsoft.Common.CheckBox",
									"label": "Deploy Azure Monitor Agent and Associate Data Collection Rule",
									"toolTip": "Deploy AVD monitoring resources and setings."
								},
								{
									"name": "laWorkspace",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": "[steps('virtualMachines').monitoring.enableMonitoring]",
									"label": "Log Analytics Workspace",
									"resourceType": "Microsoft.OperationalInsights/workspaces",
									"constraints": {
										"required": true
									}
								},
								{
									"name": "dataCollectionRule",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": "[steps('virtualMachines').monitoring.enableMonitoring]",
									"label": "AVD Insights Data Collection Rule",
									"resourceType": "Microsoft.Insights/dataCollectionRules",
									"constraints": {
										"required": true
									},
									"scope": {
										"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]",
										"location": "[steps('basics').resourceScope.location.name]"
									}
								}
							]
						},
						{
							"name": "fslogix",
							"type": "Microsoft.Common.Section",
							"label": "FSLogix",
							"elements": [
								{
									"name": "configureFslogix",
									"type": "Microsoft.Common.CheckBox",
									"label": "Configure Fslogix",
									"defaultValue": true,
									"toolTip": "Configure FSLogix on Session Hosts via the registry"
								},
								{
									"name": "storageAccount",
									"type": "Microsoft.Solutions.ResourceSelector",
									"visible": "[steps('virtualMachines').fslogix.configureFslogix]",
									"label": "FSLogix Azure Files Storage Account",
									"resourceType": "Microsoft.Storage/storageAccounts",
									"constraints": {
										"required": true
									},
									"scope": {
										"subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]",
										"location": "[steps('basics').resourceScope.location.name]"
									}
								},
								{
									"name": "sharesApi",
									"condition": "[not(empty(steps('virtualMachines').fslogix.storageAccount.id))]",
									"type": "Microsoft.Solutions.ArmApiControl",
									"request": {
										"method": "GET",
										"path": "[concat(steps('virtualMachines').fslogix.storageAccount.id, '/fileServices/default/shares?api-version=2023-05-01')]",
										"transforms": {
											"list": "value|[*].{label:name, value:name}"
										}
									}
								},
								{
									"name": "fileShareName",
									"type": "Microsoft.Common.DropDown",
									"label": "File Share Name",
									"constraints": {
										"allowedValues": "[steps('virtualMachines').fslogix.sharesApi.transformed.list]",
										"required": true
									},
									"visible": "[not(empty(steps('virtualMachines').fslogix.storageAccount.id))]"
								}
							]
						}
					]
				},
				{
					"name": "tags",
					"label": "Tags",
					"elements": [
						{
							"name": "createResourceTags",
							"type": "Microsoft.Common.CheckBox",
							"label": "Create Resource Tags",
							"toolTip": "Apply tags on resources."
						},
						{
							"name": "applicationNameTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Application Name Tag",
							"placeHolder": "Contoso-App",
							"toolTip": "Details about the application.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "costCenterTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Cost Center Tag",
							"placeHolder": "Contoso-CC",
							"toolTip": "Cost center of owner team.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "departmentTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Department Tag",
							"placeHolder": "Contoso-AVD",
							"toolTip": "Department that owns the deployment",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "dataClassificationTag",
							"type": "Microsoft.Common.DropDown",
							"label": "Data Classification Tag",
							"defaultValue": "Non-business",
							"toolTip": "Sensitivity of data hosted",
							"constraints": {
								"required": false,
								"allowedValues": [
									{
										"label": "Non-business",
										"value": "Non-business"
									},
									{
										"label": "Public",
										"value": "Public"
									},
									{
										"label": "General",
										"value": "General"
									},
									{
										"label": "Confidential",
										"value": "Confidential"
									},
									{
										"label": "Highly-confidential",
										"value": "Highly-confidential"
									}
								]
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "opsTeamTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Ops Team Tag",
							"placeHolder": "workload-admins@Contoso.com",
							"toolTip": "Team accountable for day-to-day operations.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "ownerTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Owner Tag",
							"defaultValue": "workload-owner@Contoso.com",
							"toolTip": "Organizational owner of the AVD deployment.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "workloadNameTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Workload Name Tag",
							"defaultValue": "Contoso-Workload",
							"toolTip": "The name of workload for tagging purposes.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "workloadTypeTag",
							"type": "Microsoft.Common.DropDown",
							"label": "Workload Type Tag",
							"subLabel": "",
							"defaultValue": "Light",
							"toolTip": "Reference to the size of the VM for your workloads",
							"constraints": {
								"required": false,
								"allowedValues": [
									{
										"label": "Light",
										"value": "Light"
									},
									{
										"label": "Medium",
										"value": "Medium"
									},
									{
										"label": "High",
										"value": "High"
									},
									{
										"label": "Power",
										"value": "Power"
									}
								]
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "workloadCriticalityTag",
							"type": "Microsoft.Common.DropDown",
							"label": "Workload Criticality Tag",
							"defaultValue": "Low",
							"toolTip": "Criticality of the workload.",
							"constraints": {
								"required": false,
								"allowedValues": [
									{
										"label": "Low",
										"value": "Low"
									},
									{
										"label": "Medium",
										"value": "Medium"
									},
									{
										"label": "High",
										"value": "High"
									},
									{
										"label": "Mission-critical",
										"value": "Mission-critical"
									},
									{
										"label": "Custom",
										"value": "Custom"
									}
								]
							},
							"visible": "[steps('tags').createResourceTags]"
						},
						{
							"name": "workloadCriticalityCustomValueTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Workload Criticality Custom Value Tag",
							"defaultValue": "Contoso-Critical",
							"toolTip": "Tag value for custom criticality value.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[and(steps('tags').createResourceTags, equals(steps('tags').workloadCriticalityTag, 'Custom'))]"
						},
						{
							"name": "workloadSlaTag",
							"type": "Microsoft.Common.TextBox",
							"label": "Workload Sla Tag",
							"defaultValue": "Contoso-SLA",
							"toolTip": "Service level agreement level of the worload.",
							"constraints": {
								"required": false,
								"regex": "^[\\w\\s\\.\\-]{1,256}$",
								"validationMessage": "A valid tag value must be provided"
							},
							"visible": "[steps('tags').createResourceTags]"
						}
					]
				}
			]
		},
		"outputs": {
			"kind": "Subscription",
			"subscriptionId": "[steps('basics').resourceScope.subscription.id]",
			"location": "[steps('basics').resourceScope.location.name]",
			"parameters": {
				"location": "[steps('basics').resourceScope.location.name]",
				"computeRgResourceGroupName": "[steps('basics').resourceGroup.value.name]",
				"deploymentPrefix": "[steps('basics').deployment.prefix]",
				"deploymentEnvironment": "[steps('basics').deployment.environment]",
				"hostPoolResourceId": "[steps('basics').deployment.hostPool.id]",
				"customNaming": "[steps('virtualMachines').naming.customNaming]",
				"sessionHostCustomNamePrefix": "[if(steps('virtualMachines').naming.customNaming, steps('virtualMachines').naming.vmNamePrefix, 'notapp')]",
				"count": "[steps('virtualMachines').naming.count]",
				"countIndex": "[steps('virtualMachines').naming.index]",
				"diskType": "[steps('virtualMachines').settings.diskSku]",
				"vmSize": "[steps('virtualMachines').settings.vmSize]",
				"enableAcceleratedNetworking": "[steps('virtualMachines').settings.enableAcceleratedNetworking]",
				"availability": "[steps('virtualMachines').availability.option]",
				"AvailabilityZones": "[if(equals(steps('virtualMachines').availability.option, 'AvailabilityZones'), steps('virtualMachines').availability.availabilityZones, parse('[]'))]",
				"useSharedImage": "[if(equals(steps('virtualMachines').image.source, 'computegallery'), true, false)]",
				"mpImageOffer": "[if(equals(steps('virtualMachines').image.source, 'marketplace'), steps('virtualMachines').image.offer, '')]",
				"mpImageSku": "[if(equals(steps('virtualMachines').image.source, 'marketplace'), steps('virtualMachines').image.sku, '')]",
				"customImageDefinitionId": "[if(equals(steps('virtualMachines').image.source, 'computeGallery'), steps('virtualMachines').image.imageDefinition, '')]",
				"asgResourceId": "[if(empty(steps('virtualMachines').security.asg), '', first(map(steps('virtualMachines').security.asg.value, (asg) => asg.id)))]",
				"securityType": "[steps('virtualMachines').security.securityType]",
				"secureBootEnabled": "[if(equals(steps('virtualMachines').security.securityType, 'TrustedLaunch'), steps('virtualMachines').security.secureBootEnabled, false)]",
				"vTpmEnabled": "[if(equals(steps('virtualMachines').security.securityType, 'TrustedLaunch'), steps('virtualMachines').security.vTpmEnabled, false)]",
				"encryptionAtHost": "[steps('virtualMachines').security.encryptionAtHost]",
				"diskEncryptionSetResourceId": "[if(steps('virtualMachines').security.diskZeroTrust, steps('virtualMachines').security.diskEncryptionSet, '')]",
				"deployAntiMalwareExt": "[steps('virtualMachines').security.deployAntiMalwareExt]",
				"identityServiceProvider": "[steps('virtualMachines').identityAndAccounts.identityServiceProvider]",
				"createIntuneEnrollment": "[steps('virtualMachines').identityAndAccounts.intuneEnrollment]",
				"identityDomainName": "[if(contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS'), steps('virtualMachines').identityAndAccounts.identityDomainName, '')]",
				"sessionHostOuPath": "[if(contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS'), steps('virtualMachines').identityAndAccounts.ouPath, '')]",
				"keyVaultResourceId": "[steps('virtualMachines').identityAndAccounts.keyVault.id]",
				"domainJoinUserPrincipalName": "[if(contains(steps('virtualMachines').identityAndAccounts.identityServiceProvider, 'DS'), steps('virtualMachines').identityAndAccounts.domainJoinUserPrincipalName, '')]",
				"subnetResourceId": "[steps('virtualMachines').network.subnet]",
				"enableMonitoring": "[steps('virtualMachines').monitoring.enableMonitoring]",
				"configureFslogix": "[steps('virtualMachines').fslogix.configureFslogix]",
				"laWorkspaceResourceId": "[if(steps('virtualMachines').monitoring.enableMonitoring, steps('virtualMachines').monitoring.laWorkspace.id, '')]",
				"fslogixStorageAccountResourceId": "[if(steps('virtualMachines').fslogix.configureFslogix, steps('virtualMachines').fslogix.storageAccount.id, '')]",
				"fslogixFileShareName": "[if(steps('virtualMachines').fslogix.configureFslogix, steps('virtualMachines').fslogix.fileShareName, '')]",
				"dataCollectionRuleId": "[if(steps('virtualMachines').monitoring.enableMonitoring, steps('virtualMachines').monitoring.dataCollectionRule.id, '')]",
				"createResourceTags": "[steps('tags').createResourceTags]",
				"applicationNameTag": "[if(steps('tags').createResourceTags, steps('tags').applicationNameTag, '')]",
				"costCenterTag": "[if(steps('tags').createResourceTags, steps('tags').costCenterTag, '')]",
				"departmentTag": "[if(steps('tags').createResourceTags, steps('tags').departmentTag, '')]",
				"dataClassificationTag": "[if(steps('tags').createResourceTags, steps('tags').dataClassificationTag, '')]",
				"opsTeamTag": "[if(steps('tags').createResourceTags, steps('tags').opsTeamTag, '')]",
				"ownerTag": "[if(steps('tags').createResourceTags, steps('tags').ownerTag, '')]",
				"workloadNameTag": "[if(steps('tags').createResourceTags, steps('tags').workloadNameTag, '')]",
				"workloadTypeTag": "[if(steps('tags').createResourceTags, steps('tags').workloadTypeTag, '')]",
				"workloadCriticalityTag": "[if(steps('tags').createResourceTags, steps('tags').workloadCriticalityTag, '')]",
				"workloadCriticalityCustomValueTag": "[if(and(steps('tags').createResourceTags, equals(steps('tags').workloadCriticalityTag, 'Custom')), steps('tags').workloadCriticalityCustomValueTag, '')]",
				"workloadSlaTag": "[if(steps('tags').createResourceTags, steps('tags').workloadSlaTag, '')]"
			}
		}
	}
=======
    "$schema": "<relative path to createFormUI.schema.json>",
    "view": {
        "kind": "Form",
        "properties": {
            "isWizard": false,
            "title": "Azure Virtual Desktop LZA: Deploy New Session Hosts",
            "steps": [
                {
                    "name": "basics",
                    "label": "Deployment Basics",
                    "elements": [
                        {
                            "name": "resourceScope",
                            "type": "Microsoft.Common.ResourceScope",
                            "location": {
                                "resourceTypes": [
                                    "Microsoft.Compute/virtualMachines"
                                ]
                            }
                        },
                        {
                            "name": "resourceGroupsApi",
                            "type": "Microsoft.Solutions.ArmApiControl",
                            "request": {
                                "method": "GET",
                                "path": "[concat(steps('basics').resourceScope.subscription.id, '/resourceGroups?api-version=2022-01-01')]"
                            }
                        },
                        {
                            "name": "infoResourceGroupNaming",
                            "type": "Microsoft.Common.TextBlock",
                            "visible": true,
                            "options": {
                                "text": "Azure Virtual Desktop Landing Zones will create the resource group hierarchy under the subscriptions with the prefix provided in this step.",
                                "link": {
                                    "label": "Learn more",
                                    "uri": "https://docs.microsoft.com/azure/cloud-adoption-framework/ready/enterprise-scale/management-group-and-subscription-organization"
                                }
                            }
                        },
                        {
                            "name": "deploymentSpecs",
                            "type": "Microsoft.Common.Section",
                            "visible": true,
                            "label": "Deployment Specs",
                            "elements": [
                                {
                                    "name": "deploymentPrefix",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Prefix",
                                    "toolTip": "Provide a prefix (max 4 characters) for the resource groups and resources created as part of Azure Virtual Desktop landing zones.",
                                    "placeholder": "Example: app1",
                                    "constraints": {
                                        "required": true,
                                        "regex": "^[a-z0-9A-Z-]{1,4}$",
                                        "validationMessage": "The prefix must be 1-4 characters."
                                    }
                                },
                                {
                                    "name": "deploymentEnvironment",
                                    "type": "Microsoft.Common.DropDown",
                                    "visible": true,
                                    "label": "Environment",
                                    "defaultValue": "Development",
                                    "toolTip": "Select the type of environment (Development (d), Test (t), Production (p)) that will be deployed, this information will be use as part of the resources naming.",
                                    "constraints": {
                                        "allowedValues": [
                                            {
                                                "label": "Development",
                                                "value": "Dev"
                                            },
                                            {
                                                "label": "Test",
                                                "value": "Test"
                                            },
                                            {
                                                "label": "Production",
                                                "value": "Prod"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "identity",
                    "label": "Identity",
                    "elements": [
                        {
                            "name": "identityDomainInformation",
                            "type": "Microsoft.Common.Section",
                            "visible": true,
                            "label": "Domain to join",
                            "elements": [
                                {
                                    "name": "identityServiceProvider",
                                    "type": "Microsoft.Common.OptionsGroup",
                                    "visible": true,
                                    "label": "Identity service provider",
                                    "defaultValue": "Active Directory (AD DS)",
                                    "toolTip": "Identity service provider (ADDS or EntraDS) that already exist and will be used for Azure Virtual Desktop.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": [
                                            {
                                                "label": "Microsoft Entra ID",
                                                "value": "EntraID"
                                            },
                                            {
                                                "label": "Active Directory (AD DS)",
                                                "value": "ADDS"
                                            },
                                            {
                                                "label": "Microsoft Entra Domain Services",
                                                "value": "EntraDS"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "identityServiceProviderIntuneEnrollment",
                                    "type": "Microsoft.Common.CheckBox",
                                    "visible": "[equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID')]",
                                    "label": "Intune enrollment",
                                    "defaultValue": false,
                                    "toolTip": "If Intune is configured in your Microsoft Entra ID tenant, you can choose to have the VM automatically enrolled during the deployment by selecting this box."
                                },
                                {
                                    "name": "identityServiceProviderInfo",
                                    "type": "Microsoft.Common.InfoBox",
                                    "visible": "[not(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'))]",
                                    "options": {
                                        "text": "Identity service provider must already exist, as it is a prerequisite for the Azure Virtual Desktop LZA deployment.",
                                        "uri": "https://github.com/Azure/avdaccelerator/blob/main/workload/docs/getting-started.md",
                                        "style": "Info"
                                    }
                                },
                                {
                                    "name": "identityDomainName",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "AD Domain name",
                                    "visible": "[or(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'ADDS'), equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraDS'))]",
                                    "toolTip": "The full qualified domain name of the ADDS or AADDS domain, this information is used for VMs and storage accounts domain join. It is additionally used to set NTFS permissions when deploying/configuring FSLogix",
                                    "placeholder": "Example: contoso.com",
                                    "constraints": {
                                        "required": true
                                    }
                                }
                            ]
                        },
                        {
                            "name": "identityCredentials",
                            "type": "Microsoft.Common.Section",
                            "visible": true,
                            "label": "Credentials",
                            "elements": [
                                {
                                    "name": "secretsKeyvault",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "label": "Key vault",
                                    "toolTip": "Select the AVD LZA deployed keyvault that contains the local user and domain join credentials.",
                                    "resourceType": "Microsoft.KeyVault/vaults",
                                    "constraints": {
                                        "required": true
                                    },
                                    "options": {
                                        "filter": {
                                            "subscription": "onBasics"
                                        }
                                    }
                                },
                                {
                                    "name": "identityDomainJoinUserName",
                                    "type": "Microsoft.Common.TextBox",
                                    "visible": "[not(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'))]",
                                    "label": "Domain join principal name",
                                    "placeholder": "Example: 'avdadmin@contoso.com'",
                                    "defaultValue": "",
                                    "toolTip": "Provide username with permissions to join session host to the domain.",
                                    "constraints": {
                                        "required": true
                                    }
                                },
                                {
                                    "name": "identityDomainJoinUserPassword",
                                    "type": "Microsoft.Common.TextBox",
                                    "visible": "[not(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'))]",
                                    "label": "Domain Join Password secret name",
                                    "toolTip": "Provide keyvault secret name for domain join password.",
                                    "defaultValue": "domainJoinUserPassword",
                                    "constraints": {
                                        "required": true
                                    }
                                },
                                {
                                    "name": "identityDomainJoinInfo",
                                    "type": "Microsoft.Common.InfoBox",
                                    "visible": "[not(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'))]",
                                    "options": {
                                        "text": "By default an AVD LZA deployment creates a key vault in the service objects resource group, the vey vault contains secrets for domain join username (domainJoinUserName) and password (domainJoinUserPassword). If AVD LZA wasn't used to deploy, a key vault will need to be created with a secret for the domain join security principal password that will be used to join session hosts to the domain (AD DS and Entra DS scenarios).",
                                        "style": "Info"
                                    }
                                },
                                {
                                    "name": "identityLocalUserName",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "VM local admin username",
                                    "toolTip": "Provide username for session host local admin account. Administrator can't be used as username, it is reserved by the system.",
                                    "placeholder": "Example: 'localadmin'",
                                    "defaultValue": "",
                                    "constraints": {
                                        "regex": "^(?!.*[aA]dministrator).*$",
                                        "validationMessage": "This username can't be used, it is a reserved word.",
                                        "required": true
                                    }
                                },
                                {
                                    "name": "identityLocalUserPassword",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "VM local admin password secret name",
                                    "toolTip": "Provide keyvault secret name for VM local admin password.",
                                    "defaultValue": "vmLocalUserPassword",
                                    "constraints": {
                                        "required": true
                                    }
                                },
                                {
                                    "name": "identityLocalUserInfo",
                                    "type": "Microsoft.Common.InfoBox",
                                    "options": {
                                        "text": "By default an AVD LZA deployment creates a key vault in the service objects resource group, the vey vault contains secrets for VM local administrator username (vmLocalUserName) and password (vmLocalUserPassword). If AVD LZA wasn't used to deploy, a key vault will need to be created with a secret for the VM local administrator user password.",
                                        "style": "Info"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "managementPlane",
                    "label": "Management plane",
                    "elements": [
                        {
                            "name": "managementPlaneSettings",
                            "type": "Microsoft.Common.Section",
                            "visible": true,
                            "label": "Settings:",
                            "elements": [
                                {
                                    "name": "hostPoolSelector",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "label": "Host pool",
                                    "toolTip": "Select host pool where to add new session hosts.",
                                    "resourceType": "Microsoft.DesktopVirtualization/hostpools",
                                    "constraints": {
                                        "required": true
                                    },
                                    "options": {
                                        "filter": {
                                            "subscription": "onBasics"
                                        }
                                    }
                                },
                                {
                                    "name": "hostPoolSelectorWarning",
                                    "type": "Microsoft.Common.InfoBox",
                                    "options": {
                                        "text": "When you add session hosts to a host pool, first you'll need to generate a registration key. A registration key needs to be generated per host pool and it authorizes session hosts to join that host pool. It's only valid for the duration you specify. If an existing registration key has expired, you can also use these steps to generate a new key.",
                                        "uri": "https://learn.microsoft.com/azure/virtual-desktop/add-session-hosts-host-pool?tabs=portal%2Cgui#generate-a-registration-key",
                                        "style": "Warning"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "sessionHosts",
                    "label": "Session hosts",
                    "elements": [
                        {
                            "name": "sessionHostsRegionSection",
                            "type": "Microsoft.Common.Section",
                            "visible": true,
                            "label": "Region Settings",
                            "tooltip": "The section allows you to specify the region where the compute, storage, and key vault resources are deployed.",
                            "elements": [
                                {
                                    "name": "computeApi",
                                    "type": "Microsoft.Solutions.ArmApiControl",
                                    "request": {
                                        "method": "GET",
                                        "path": "[concat(steps('basics').resourceScope.subscription.id,'/providers/Microsoft.Compute/resourceTypes?api-version=2022-01-01')]"
                                    }
                                },
                                {
                                    "name": "infoAvailZones",
                                    "type": "Microsoft.Common.InfoBox",
                                    "visible": true,
                                    "options": {
                                        "text": "If you select 'Use availability zones' below, some regions may not be available for deployment of session hosts because not all regions support Availability Zones. \n\nThe 'Session hosts region' drop down will automatically update based on this selection. If the value changes to blank, select an alternate region or set 'Use availability zones' to 'No'.",
                                        "uri": "https://learn.microsoft.com/azure/reliability/availability-zones-service-support#azure-regions-with-availability-zone-support",
                                        "style": "Info"
                                    }
                                },
                                {
                                    "name": "sessionHostsAvailabilityZoneSettings",
                                    "type": "Microsoft.Common.CheckBox",
                                    "visible": true,
                                    "label": "Availability zones",
                                    "defaultValue": true,
                                    "toolTip": "Distribute compute resources across availability zones."
                                },
                                {
                                    "name": "sessionHostsRegion",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Session hosts region",
                                    "defaultValue": "[steps('basics').resourceScope.location.displayName]",
                                    "filter": true,
                                    "toolTip": "Select the region where the session hosts will be deployed.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": "[if(equals(steps('sessionHosts').sessionHostsRegionSection.sessionHostsAvailabilityZoneSettings, false), map(first(map(filter(steps('sessionHosts').sessionHostsRegionSection.computeApi.value, (resourceTypes) => equals(resourceTypes.resourceType, 'virtualMachines')), (item) => item.locations)), (item) => parse(concat('{\"label\":\"', item, '\",\"value\":\"', toLower(replace(item, ' ', '')), '\"}'))), map(filter(first(map(filter(steps('sessionHosts').sessionHostsRegionSection.computeApi.value, (resourceTypes) => equals(resourceTypes.resourceType, 'virtualMachines')), (item) => item.zoneMappings)), (item) => equals(length(item.zones), 3)), (item) => parse(concat('{\"label\":\"', item.location, '\",\"value\":\"', toLower(replace(item.location, ' ', '')), '\"}'))))]"
                                    }
                                }
                            ]
                        },
                        {
                            "name": "sessionHostsComputeStorageSection",
                            "type": "Microsoft.Common.Section",
                            "visible": true,
                            "label": "General settings",
                            "tooltip": "This settings apply to compute, storage, image management and key vault resources.",
                            "elements": [
                                {
                                    "name": "identityDomainOuPath",
                                    "type": "Microsoft.Common.TextBox",
                                    "visible": "[not(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'))]",
                                    "label": "Custom OU path (Optional)",
                                    "toolTip": "Provide OU where to locate session hosts, if not provided session hosts will be placed on the default (computers) OU.",
                                    "placeholder": "Example: OU=session-hosts,OU=avd,DC=contoso,DC=com",
                                    "constraints": {}
                                }
                            ]
                        },
                        {
                            "name": "sessionHostsSettingsSection",
                            "type": "Microsoft.Common.Section",
                            "visible": true,
                            "label": "Session hosts settings",
                            "elements": [
                                {
                                    "name": "sessionHostSize",
                                    "type": "Microsoft.Compute.SizeSelector",
                                    "label": "VM Size",
                                    "toolTip": "",
                                    "recommendedSizes": [
                                        "Standard_D4ads_v5"
                                    ],
                                    "constraints": {
                                        "allowedSizes": [],
                                        "excludedSizes": [],
                                        "required": true
                                    },
                                    "options": {
                                        "hideDiskTypeFilter": true
                                    },
                                    "osPlatform": "Windows",
                                    "imageReference": {
                                        "publisher": "MicrosoftWindowsDesktop",
                                        "offer": "Windows-11",
                                        "sku": "23h2-avd"
                                    },
                                    "scope": {
                                        "location": "[steps('sessionHosts').sessionHostsRegionSection.sessionHostsRegion]",
                                        "subscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]"
                                    }   
                                },
                                {
                                    "name": "sessionHostSizeInfobox",
                                    "type": "Microsoft.Common.InfoBox",
                                    "visible": true,
                                    "options": {
                                        "text": "Session host virtual machine sizing guidelines.",
                                        "uri": "https://learn.microsoft.com/windows-server/remote/remote-desktop-services/virtual-machine-recs",
                                        "style": "Info"
                                    }
                                },
                                {
                                    "name": "sessionHostsCountIndex",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "VM count index",
                                    "toolTip": "Provide the number of the highest session host name count, example: if highest session host count is vmavd1duse20005, provide a count index of 5. This number will be use to deploy new session hosts with a naming that continues the count of the current session hosts deployed, example: vmavd1duse20006.",
                                    "placeholder": "Example: 1",
                                    "constraints": {
                                        "required": true
                                    }
                                },
                                {
                                    "name": "sessionHostsCount",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "VM count",
                                    "toolTip": "Provide the number of session hosts to deploy (1-100).",
                                    "defaultValue": 1,
                                    "constraints": {
                                        "required": true,
                                        "regex": "^([1-9]|[1-9][0-9]|[1][0][0])$",
                                        "validationMessage": "The count must be between 1-100 session hosts."
                                    }
                                },
                                {
                                    "name": "sessionHostDiskType",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "OS Disk type",
                                    "filter": true,
                                    "defaultValue": "Premium",
                                    "toolTip": "Select session host disk type to host the OS.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": [
                                            {
                                                "label": "Standard",
                                                "value": "Standard_LRS"
                                            },
                                            {
                                                "label": "Premium",
                                                "value": "Premium_LRS"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "acceleratedNetworking",
                                    "type": "Microsoft.Common.CheckBox",
                                    "label": "Enable accelerated networking",
                                    "defaultValue": true,
                                    "toolTip": "Enables low latency and high throughput on the network interface."
                                },
                                {
                                    "name": "warningAcceleratedNetworkingSupport",
                                    "type": "Microsoft.Common.InfoBox",
                                    "visible": "[steps('sessionHosts').sessionHostsOsSection.sessionHostsImageSource]",
                                    "options": {
                                        "text": "The Compute Gallery Image definition selected must have the 'isAcceleratedNetworkSupported' feature property set to 'true' if you enable accelerated networking on the session hosts.",
                                        "uri": "https://github.com/Azure/avdaccelerator/blob/main/workload/docs/getting-started-baseline.md",
                                        "style": "Warning"
                                    }
                                }
                            ]
                        },
                        {
                            "name": "sessionHostsOsSection",
                            "type": "Microsoft.Common.Section",
                            "visible": true,
                            "label": "OS selection",
                            "elements": [
                                {
                                    "name": "sessionHostsImageSource",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "OS image source",
                                    "defaultValue": "Marketplace",
                                    "toolTip": "Select marketplace or build custom image to deploy the session hosts.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": [
                                            {
                                                "label": "Marketplace",
                                                "value": false
                                            },
                                            {
                                                "label": "Compute Gallery",
                                                "value": true
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "sessionHostsOsImage",
                                    "type": "Microsoft.Common.DropDown",
                                    "visible": "[not(steps('sessionHosts').sessionHostsOsSection.sessionHostsImageSource)]",
                                    "label": "OS version",
                                    "filter": true,
                                    "defaultValue": "Windows 11 23H2",
                                    "toolTip": "Select the operating system version of the session hosts.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": [
                                            {
                                                "label": "Windows 10 22H2 (Gen2)",
                                                "value": "win10_22h2_g2"
                                            },
                                            {
                                                "label": "Windows 10 22H2 - Office 365 (Gen2)",
                                                "value": "win10_22h2_office_g2"
                                            },
                                            {
                                                "label": "Windows 11 22H2",
                                                "value": "win11_22h2"
                                            },
                                            {
                                                "label": "Windows 11 22H2 - Office 365",
                                                "value": "win11_22h2_office"
                                            },
                                            {
                                                "label": "Windows 11 23H2",
                                                "value": "win11_23h2"
                                            },
                                            {
                                                "label": "Windows 11 23H2 - Office 365",
                                                "value": "win11_23h2_office"
                                            },
                                            {
                                                "label": "Windows 11 24H2",
                                                "value": "win11_24h2"
                                            },
                                            {
                                                "label": "Windows 11 24H2 - Office 365",
                                                "value": "win11_24h2_office"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "sessionHostsComputeGalleryImage",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "visible": "[steps('sessionHosts').sessionHostsOsSection.sessionHostsImageSource]",
                                    "label": "Image",
                                    "resourceType": "Microsoft.Compute/galleries/images",
                                    "constraints": {
                                        "required": true
                                    },
                                    "options": {
                                        "filter": {
                                            "subscription": "onBasics",
                                            "location": "[steps('SessionHosts').SessionHostsRegionSection.SessionHostsRegion.location.name]"
                                        }
                                    }
                                }
                            ]
                        },
                        {
                            "name": "sessionHostsSecuritySection",
                            "type": "Microsoft.Common.Section",
                            "visible": "[or(contains(steps('sessionHosts').sessionHostsOsSection.sessionHostsOsImage, 'win11'), contains(steps('sessionHosts').sessionHostsOsSection.sessionHostsOsImage, 'g2'), not(empty(steps('sessionHosts').sessionHostsOsSection.sessionHostsComputeGalleryImage)))]",
                            "label": "Security profile",
                            "elements": [
                                {
                                    "name": "sessionHostSecurityTypeWarning",
                                    "type": "Microsoft.Common.InfoBox",
                                    "visible": "[not(empty(steps('sessionHosts').sessionHostsOsSection.sessionHostsComputeGalleryImage))]",
                                    "options": {
                                        "text": "Setting the Security Type to anything other than 'Standard' requires that the Azure Compute Gallery Image Definition be configured with the Security Type feature set to the appropriate value. You can determine if the image definition supports the required feature by reviewing the 'Properties' tab on the 'Overview' node of the Gallery Image Definition in the portal. If the image definition does not contain these feature options, then the deployment will fail.",
                                        "uri": "https://learn.microsoft.com/azure/templates/microsoft.compute/galleries/images?pivots=deployment-language-bicep",
                                        "style": "Warning"
                                    }
                                },
                                {
                                    "name": "securityType",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Security type",
                                    "filter": true,
                                    "defaultValue": "Trusted Launch Virtual Machines",
                                    "toolTip": "Choose a type of security that matches your needs: Standard includes basic protections at no additional cost. Trusted launch virtual machines provide additional security features on Gen2 virtual machines to protect against persistent and advanced attacks.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": [
                                            {
                                                "label": "Standard",
                                                "value": "Standard"
                                            },
                                            {
                                                "label": "Trusted Launch Virtual Machines",
                                                "value": "TrustedLaunch"
                                            },
                                            {
                                                "label": "Confidential Virtual Machines",
                                                "value": "ConfidentialVM"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "secureBootEnabled",
                                    "type": "Microsoft.Common.CheckBox",
                                    "visible": "[or(equals(steps('sessionHosts').sessionHostsSecuritySection.securityType, 'TrustedLaunch'), equals(steps('sessionHosts').sessionHostsSecuritySection.securityType, 'ConfidentialVM'))]",
                                    "label": "Enable secure boot",
                                    "defaultValue": true,
                                    "toolTip": "Secure boot helps protect your VMs against boot kits, rootkits, and kernel-level malware."
                                },
                                {
                                    "name": "vTpmEnabled",
                                    "type": "Microsoft.Common.CheckBox",
                                    "visible": "[or(equals(steps('sessionHosts').sessionHostsSecuritySection.securityType, 'TrustedLaunch'), equals(steps('sessionHosts').sessionHostsSecuritySection.securityType, 'ConfidentialVM'))]",
                                    "label": "Enable vTPM",
                                    "defaultValue": true,
                                    "toolTip": "Virtual Trusted Platform Module (vTPM) is TPM2.0 compliant and validates your VM boot integrity apart from securely storing keys and secrets."
                                },
                                {
                                    "name": "enableAntiMalwareExt",
                                    "type": "Microsoft.Common.CheckBox",
                                    "visible": true,
                                    "label": "Enable Antimalware extension",
                                    "defaultValue": true,
                                    "toolTip": "Enables Azure VM antimalware extension on session hosts."
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "storage",
                    "label": "Storage",
                    "elements": [
                        {
                            "name": "fslogixConfiguration",
                            "type": "Microsoft.Common.CheckBox",
                            "label": "Configure FSLogix",
                            "defaultValue": false,
                            "toolTip": "Configure session host to use FSLogix."
                        },
                        {
                            "name": "storageFslogix",
                            "type": "Microsoft.Common.Section",
                            "label": "Settings:",
                            "visible": "[steps('storage').fslogixConfiguration]",
                            "elements": [
                                {
                                    "name": "fslogixStorageAccountSelector",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "label": "Storage account",
                                    "toolTip": "Select storage account created and configured to host FSLogix user profile containers.",
                                    "resourceType": "Microsoft.Storage/storageAccounts",
                                    "constraints": {
                                        "required": true
                                    },
                                    "options": {
                                        "filter": {
                                            "subscription": "onBasics",
                                            "location": "[steps('SessionHosts').SessionHostsRegionSection.SessionHostsRegion.location.name]"
                                        }
                                    }
                                },
                                {
                                    "name": "fslogixStorageAccountFileShare",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "File share name",
                                    "toolTip": "The name of the file share created and configured to host FSLogix user profile containers.",
                                    "placeholder": "Example: fslogix-pc-avd1-dev-use2-001",
                                    "constraints": {
                                        "required": true
                                    }
                                }
                            ]
                        },
                        {
                            "name": "StorageConfigurationRequirements1",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(steps('storage').fslogixConfiguration, not(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID')))]",
                            "options": {
                                "text": "FSLogix configuration requires the storage account and file share to be already configured for authentication with ADDS or Microsoft Entra Domain Services.",
                                "uri": "https://learn.microsoft.com/azure/virtual-desktop/fslogix-profile-container-configure-azure-files-active-directory?tabs=adds",
                                "style": "Info"
                            }
                        },
                        {
                            "name": "StorageConfigurationRequirements2",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(steps('storage').fslogixConfiguration, equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'))]",
                            "options": {
                                "text": "FSLogix configuration requires the storage account and file share to be already configured for authentication with Microsoft Entra ID.",
                                "uri": "https://learn.microsoft.com/azure/virtual-desktop/create-profile-container-azure-ad",
                                "style": "Info"
                            }
                        },
                        {
                            "name": "StorageConfigurationEntraID",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[and(steps('storage').fslogixConfiguration, equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'))]",
                            "options": {
                                "text": "FSLogix storage for Microsoft Entra ID joined session hosts is currently only available for hybrid identities.",
                                "uri": "https://learn.microsoft.com/azure/virtual-desktop/create-profile-container-azure-ad",
                                "style": "Info"
                            }
                        }
                    ]
                },
                {
                    "name": "network",
                    "label": "Networking",
                    "type": "Microsoft.Common.Section",
                    "visible": true,
                    "elements": [
                        {
                            "name": "networkSettings",
                            "type": "Microsoft.Common.Section",
                            "label": "Settings:",
                            "visible": true,
                            "elements": [
                                {
                                    "name": "virtualNetworkSelectorId",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "label": "Virtual network",
                                    "resourceType": "Microsoft.Network/virtualNetworks",
                                    "constraints": {
                                        "required": true
                                    },
                                    "options": {
                                        "filter": {
                                            "subscription": "onBasics"
                                        }
                                    },
                                    "scope": {
                                        "location": "[steps('sessionHosts').sessionHostsRegionSection.sessionHostsRegion]"
                                    }   
                                },
                                {
                                    "name": "subnetApi",
                                    "type": "Microsoft.Solutions.ArmApiControl",
                                    "request": {
                                        "method": "GET",
                                        "path": "[concat(steps('network').networkSettings.virtualNetworkSelectorId.id, '/subnets?api-version=2022-01-01')]"
                                    }
                                },
                                {
                                    "name": "virtualNetworkSubnetSelectorName",
                                    "label": "Subnet",
                                    "type": "Microsoft.Common.DropDown",
                                    "defaultValue": "",
                                    "toolTip": "Azure Virtual Desktop subnet.",
                                    "multiselect": false,
                                    "selectAll": false,
                                    "filter": true,
                                    "filterPlaceholder": "Filter items ...",
                                    "multiLine": true,
                                    "constraints": {
                                        "allowedValues": "[map(steps('network').networkSettings.subnetApi.value,(item) => parse(concat('{\"label\":\"', item.name, '\",\"value\":\"', item.id, '\",\"description\":\"', 'Resource Group: ', last(take(split(item.id, '/'), 5)), '\"}')))]",
                                        "required": true
                                    }
                                },
                                {
                                    "name": "applicationSecurityGroup",
                                    "type": "Microsoft.Common.CheckBox",
                                    "label": "Application Security Group (ASG)",
                                    "defaultValue": true,
                                    "toolTip": "Configure session host to use FSLogix."
                                },
                                {
                                    "name": "applicationSecurityGroupSelectorId",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "visible": "[steps('network').networkSettings.applicationSecurityGroup]",
                                    "label": "Select ASG",
                                    "resourceType": "Microsoft.Network/applicationSecurityGroups",
                                    "options": {
                                        "filter": {
                                            "subscription": "onBasics"
                                        }
                                    },
                                    "scope": {
                                        "location": "[steps('sessionHosts').sessionHostsRegionSection.sessionHostsRegion]"
                                    }   
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "monitoring",
                    "label": "Monitoring",
                    "type": "Microsoft.Common.Section",
                    "visible": true,
                    "elements": [
                        {
                            "name": "configureMonitoring",
                            "type": "Microsoft.Common.CheckBox",
                            "visible": true,
                            "label": "Configure monitoring",
                            "defaultValue": false,
                            "toolTip": "Deploy monitoring settings and if selected deploy Azure log analytics workspace."
                        },
                        {
                            "name": "motoringSettings",
                            "type": "Microsoft.Common.Section",
                            "label": "Settings:",
                            "visible": "[steps('monitoring').configureMonitoring]",
                            "elements": [
                                {
                                    "name": "monitoringWorkspaceSelection",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "label": "Log analytics workspace",
                                    "resourceType": "Microsoft.OperationalInsights/workspaces",
                                    "constraints": {
                                        "required": true
                                    }
                                },
                                {
                                    "name": "monitoringDataCollectionRuleSelection",
                                    "type": "Microsoft.Solutions.ResourceSelector",
                                    "label": "Data Collection Rule",
                                    "resourceType": "Microsoft.Insights/dataCollectionRules",
                                    "constraints": {
                                        "required": true
                                    }
                                },
                                {
                                    "name": "deployMonitoringInfo1",
                                    "type": "Microsoft.Common.InfoBox",
                                    "options": {
                                        "text": "Azure Virtual Desktop monitoring requires an existing Azure Log Analytics Workspace and Data Collection Rules.",
                                        "uri": "https://docs.microsoft.com/azure/virtual-desktop/azure-monitor",
                                        "style": "Info"
                                    }
                                },
                                {
                                    "name": "deployMonitoringInfo2",
                                    "type": "Microsoft.Common.InfoBox",
                                    "options": {
                                        "text": "Deployment will configured all required settings to use the Azure Virtual Desktop insights workbook.",
                                        "uri": "https://learn.microsoft.com/azure/virtual-desktop/azure-monitor?WT.mc_id=Portal-AppInsightsExtension",
                                        "style": "Info"
                                    }
                                }
                            ]
                        }
                    ]
                },
                {
                    "name": "resourceNaming",
                    "label": "Resource naming",
                    "type": "Microsoft.Common.Section",
                    "visible": true,
                    "elements": [
                        {
                            "name": "resourceNamingInfo1",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": true,
                            "options": {
                                "text": "Azure Virtual Desktop LZA default naming scheme is shown in this diagram.",
                                "uri": "https://github.com/Azure/avdaccelerator/blob/main/workload/docs/diagrams/avd-accelerator-resource-organization-naming.png",
                                "style": "Info"
                            }
                        },
                        {
                            "name": "resourceNamingSelection",
                            "type": "Microsoft.Common.CheckBox",
                            "visible": true,
                            "label": "Custom resource naming",
                            "defaultValue": false,
                            "toolTip": "When selected, the information provided will be used to name resources. When set to 'No' deployment will use the Azure Virtual Desktop LZA naming standard."
                        },
                        {
                            "name": "resourceNamingWarning",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[steps('resourceNaming').resourceNamingSelection]",
                            "options": {
                                "text": "When using custom naming for resources, please make sure to follow naming rules and restrictions for Azure resources.",
                                "uri": "https://docs.microsoft.com/azure/azure-resource-manager/management/resource-name-rules",
                                "style": "Warning"
                            }
                        },
                        {
                            "name": "resourceNamingCompute",
                            "type": "Microsoft.Common.Section",
                            "label": "Compute naming:",
                            "visible": "[steps('resourceNaming').resourceNamingSelection]",
                            "elements": [
                                {
                                    "name": "sessionHostCustomNamePrefix",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Session host prefix",
                                    "visible": true,
                                    "toolTip": "Azure Virtual Desktop session host prefix custom name.",
                                    "placeholder": "Example: vmapp1deus2",
                                    "constraints": {
                                        "required": true,
                                        "regex": "^[a-z0-9A-Z-]{1,11}$",
                                        "validationMessage": "Value must be 1-11 characters."
                                    }
                                }
                            ]
                        },
                        {
                            "name": "resourceNamingInfo2",
                            "type": "Microsoft.Common.InfoBox",
                            "visible": "[steps('resourceNaming').resourceNamingSelection]",
                            "options": {
                                "text": "It is recommended to follow Microsoft Cloud Adoption Framework (CAF) naming convention.",
                                "uri": "https://docs.microsoft.com/azure/cloud-adoption-framework/ready/azure-best-practices/resource-naming",
                                "style": "Info"
                            }
                        }
                    ]
                },
                {
                    "name": "resourceTagging",
                    "label": "Resource tagging",
                    "type": "Microsoft.Common.Section",
                    "visible": true,
                    "elements": [
                        {
                            "name": "resourceTaggingSelection",
                            "type": "Microsoft.Common.CheckBox",
                            "visible": true,
                            "label": "Create resource tags",
                            "defaultValue": false,
                            "toolTip": "When selected, the information provided will be used to create tags on resources and resource groups."
                        },
                        {
                            "name": "resourceTaggingParentCostInfo",
                            "type": "Microsoft.Common.InfoBox",
                            "options": {
                                "text": "By default, the following tags will be created: <br/> - Parent resource cost management tag (cm-resource-parent): reports all resources cost to the host pool (ResourceID). <br/> - Environment (Environment): environment selected during deployment (Dev/Test/prod). <br/> - Service Workload (ServiceWorkload): defaults to Azure Virtual Desktop. <br/> - Creation time (CreationTimeUTC): deployment time in UTC. <br/> - Domain Name (DomainName): identity service domain name (applied only to compute and storage). <br/> - Identity service provider (IdentityServiceProvider): identity provider selected (ADDS/EntraDS/EntraID).",
                                "uri": "https://learn.microsoft.com/azure/virtual-desktop/tag-virtual-desktop-resources#use-the-cm-resource-parent-tag-to-automatically-group-costs-by-host-pool",
                                "style": "Info"
                            }
                        },
                        {
                            "name": "resourceTags",
                            "type": "Microsoft.Common.Section",
                            "label": "Resources tags:",
                            "visible": "[steps('resourceTagging').resourceTaggingSelection]",
                            "elements": [
                                {
                                    "name": "tagsWorkloadName",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Workload name:",
                                    "toolTip": "This input will be the value of a tag named WorkloadName.",
                                    "placeholder": "Example: Contoso-Workload",
                                    "constraints": {
                                        "required": true,
                                        "regex": "^[a-z0-9A-Z-]{1,256}$",
                                        "validationMessage": "Value must be 1-256 characters."
                                    }
                                },
                                {
                                    "name": "tagsWorkloadType",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Workload type:",
                                    "filter": true,
                                    "defaultValue": "Light",
                                    "toolTip": "This input will be the value of a tag named WorkloadType, reference to the size of the VM for your workloads.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": [
                                            {
                                                "label": "Light",
                                                "description": "",
                                                "value": "Light"
                                            },
                                            {
                                                "label": "Medium",
                                                "description": "",
                                                "value": "Medium"
                                            },
                                            {
                                                "label": "High",
                                                "description": "",
                                                "value": "High"
                                            },
                                            {
                                                "label": "Power",
                                                "description": "",
                                                "value": "POwer"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "tagsDataClassificationTag",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Data classification:",
                                    "filter": true,
                                    "defaultValue": "Non-business",
                                    "toolTip": "This input will be the value of a tag named DataClassification, reference to the sensitivity of data hosted.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": [
                                            {
                                                "label": "Non-business",
                                                "description": "",
                                                "value": "Non-business"
                                            },
                                            {
                                                "label": "Public",
                                                "description": "",
                                                "value": "Public"
                                            },
                                            {
                                                "label": "General",
                                                "description": "",
                                                "value": "General"
                                            },
                                            {
                                                "label": "Confidential",
                                                "description": "",
                                                "value": "Confidential"
                                            },
                                            {
                                                "label": "Highly-confidential",
                                                "description": "",
                                                "value": "Highly-confidential"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "tagsDepartmentTag",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Department:",
                                    "toolTip": "This input will be the value of a tag named Department, reference the department that owns the deployment.",
                                    "placeholder": "Example: Contoso-AVD",
                                    "constraints": {
                                        "required": true,
                                        "regex": "^[a-z0-9A-Z-]{1,256}$",
                                        "validationMessage": "Value must be 1-256 characters."
                                    }
                                },
                                {
                                    "name": "tagsCriticalityTag",
                                    "type": "Microsoft.Common.DropDown",
                                    "label": "Workload criticality:",
                                    "filter": true,
                                    "defaultValue": "Low",
                                    "toolTip": "This input will be the value of a tag named Criticality, reference to the criticality of the workload.",
                                    "constraints": {
                                        "required": true,
                                        "allowedValues": [
                                            {
                                                "label": "Low",
                                                "description": "",
                                                "value": "Low"
                                            },
                                            {
                                                "label": "Medium",
                                                "description": "",
                                                "value": "Medium"
                                            },
                                            {
                                                "label": "High",
                                                "description": "",
                                                "value": "High"
                                            },
                                            {
                                                "label": "Mission-critical",
                                                "description": "",
                                                "value": "Mission-critical"
                                            },
                                            {
                                                "label": "Custom",
                                                "description": "",
                                                "value": "Custom"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "name": "tagsCustomWorkloadCriticality",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Custom workload criticality:",
                                    "visible": "[equals(steps('resourceTagging').resourceTags.tagsCriticalityTag, 'Custom')]",
                                    "toolTip": "This input will be the value of a tag named Criticality, reference to a custom criticality for the workload.",
                                    "placeholder": "Example: Contoso-Criticality",
                                    "constraints": {
                                        "required": true,
                                        "regex": "^[a-z0-9A-Z-]{1,256}$",
                                        "validationMessage": "Value must be 1-256 characters."
                                    }
                                },
                                {
                                    "name": "tagsApplicationNameTag",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Application name:",
                                    "toolTip": "This input will be the value of a tag named ApplicationName, reference details about the application.",
                                    "placeholder": "Example: Contoso-App",
                                    "constraints": {
                                        "required": true,
                                        "regex": "^[a-z0-9A-Z-]{1,256}$",
                                        "validationMessage": "Value must be 1-256 characters."
                                    }
                                },
                                {
                                    "name": "tagsWorkloadSlaTag",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Workload SLA:",
                                    "toolTip": "This input will be the value of a tag named ServiceClass, reference to the service level agreement level of the worload.",
                                    "placeholder": "Example: Contoso-SLA",
                                    "constraints": {
                                        "required": true,
                                        "regex": "^[a-z0-9A-Z-]{1,256}$",
                                        "validationMessage": "Value must be 1-256 characters."
                                    }
                                },
                                {
                                    "name": "tagsOpsTeamTag",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Operations team:",
                                    "toolTip": "This input will be the value of a tag named OpsTeam, reference to the team accountable for day-to-day operations.",
                                    "placeholder": "Example: workload-admins@Contoso.com",
                                    "constraints": {
                                        "required": true
                                    }
                                },
                                {
                                    "name": "tagsOwnerTag",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Owner:",
                                    "toolTip": "This input will be the value of a tag named Owner, reference to the organizational owner of the Azure Virtual Desktop deployment.",
                                    "placeholder": "Example: workload-owner@Contoso.com",
                                    "constraints": {
                                        "required": true
                                    }
                                },
                                {
                                    "name": "tagsCostCenterTag",
                                    "type": "Microsoft.Common.TextBox",
                                    "label": "Cost center:",
                                    "toolTip": "This input will be the value of a tag named CostCenter, reference to the cost center of owner team.",
                                    "placeholder": "Example: Contoso-CC",
                                    "constraints": {
                                        "required": true,
                                        "regex": "^[a-z0-9A-Z-]{1,256}$",
                                        "validationMessage": "Value must be 1-256 characters."
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "outputs": {
            "parameters": {
                "deploymentPrefix": "[steps('basics').deploymentSpecs.deploymentPrefix]",
                "deploymentEnvironment": "[steps('basics').deploymentSpecs.deploymentEnvironment]",
                "identityServiceProvider": "[steps('identity').identityDomainInformation.identityServiceProvider]",
                "createIntuneEnrollment": "[if(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'), steps('identity').identityDomainInformation.identityServiceProviderIntuneEnrollment, false)]",
                "identityDomainName": "[if(or(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'ADDS'), equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraDS')), steps('identity').identityDomainInformation.identityDomainName, 'none')]",
                "keyVaultResourceId": "[steps('identity').identityCredentials.secretsKeyvault.id]",
                "domainJoinUserName": "[if(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'), 'no', steps('identity').identityCredentials.identityDomainJoinUserName)]",
                "domainJoinPasswordSecretName": "[if(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'), 'no', steps('identity').identityCredentials.identityDomainJoinUserPassword)]",
                "vmLocalUserName": "[steps('identity').identityCredentials.identityLocalUserName]",
                "vmLocalAdminPasswordSecretName": "[steps('identity').identityCredentials.identityLocalUserPassword]",
                "hostPoolResourceId": "[steps('managementPlane').managementPlaneSettings.hostPoolSelector.id]",
                "useAvailabilityZones": "[steps('sessionHosts').sessionHostsRegionSection.sessionHostsAvailabilityZoneSettings]",
                "sessionHostOuPath": "[if(equals(steps('identity').identityDomainInformation.identityServiceProvider, 'EntraID'), 'no', steps('sessionHosts').sessionHostsComputeStorageSection.identityDomainOuPath)]",
                "vmSize": "[steps('sessionHosts').sessionHostsSettingsSection.sessionHostSize]",
                "countIndex": "[steps('sessionHosts').sessionHostsSettingsSection.sessionHostsCountIndex]",
                "count": "[steps('sessionHosts').sessionHostsSettingsSection.sessionHostsCount]",
                "diskType": "[steps('sessionHosts').sessionHostsSettingsSection.sessionHostDiskType]",
                "enableAcceleratedNetworking": "[steps('sessionHosts').sessionHostsSettingsSection.acceleratedNetworking]",
                "useSharedImage": "[steps('sessionHosts').sessionHostsOsSection.sessionHostsImageSource]",
                "osImage": "[if(equals(steps('sessionHosts').sessionHostsOsSection.sessionHostsImageSource, false), steps('sessionHosts').sessionHostsOsSection.sessionHostsOsImage, 'win11_23h2')]",
                "customImageDefinitionId": "[if(equals(steps('sessionHosts').sessionHostsOsSection.sessionHostsImageSource, true), steps('sessionHosts').sessionHostsOsSection.sessionHostsComputeGalleryImage.id, 'no')]",
                "securityType": "[steps('sessionHosts').sessionHostsSecuritySection.securityType]",
                "secureBootEnabled": "[steps('sessionHosts').sessionHostsSecuritySection.secureBootEnabled]",
                "vTpmEnabled": "[steps('sessionHosts').sessionHostsSecuritySection.vTpmEnabled]",
                "deployAntiMalwareExt": "[steps('sessionHosts').sessionHostsSecuritySection.enableAntiMalwareExt]",
                "configureFslogix": "[steps('storage').fslogixConfiguration]",
                "fslogixStorageAccountName": "[if(steps('storage').fslogixConfiguration, steps('storage').storageFslogix.fslogixStorageAccountSelector.name, '')]",
                "fslogixFileShareName": "[if(steps('storage').fslogixConfiguration, steps('storage').storageFslogix.fslogixStorageAccountFileShare, '')]",
                "subnetResourceId": "[steps('network').networkSettings.virtualNetworkSubnetSelectorName]",
                "asgResourceId": "[if(steps('network').networkSettings.applicationSecurityGroup, steps('network').networkSettings.applicationSecurityGroupSelectorId.id, '')]",
                "deployMonitoring": "[steps('monitoring').configureMonitoring]",
                "alaWorkspaceResourceId": "[if(steps('monitoring').configureMonitoring, steps('monitoring').motoringSettings.monitoringWorkspaceSelection.id, '')]",
                "dataCollectionRuleId": "[if(steps('monitoring').configureMonitoring, steps('monitoring').motoringSettings.monitoringDataCollectionRuleSelection.id, '')]",
                "customNaming": "[steps('resourceNaming').resourceNamingSelection]",
                "sessionHostCustomNamePrefix": "[if(steps('resourceNaming').resourceNamingSelection, steps('resourceNaming').resourceNamingCompute.sessionHostCustomNamePrefix, '')]",
                "createResourceTags": "[steps('resourceTagging').resourceTaggingSelection]",
                "workloadNameTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsWorkloadName, 'no')]",
                "workloadTypeTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsWorkloadType, 'Light')]",
                "dataClassificationTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsDataClassificationTag, 'Non-business')]",
                "departmentTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsDepartmentTag, 'no')]",
                "workloadCriticalityTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsCriticalityTag, 'Low')]",
                "workloadCriticalityCustomValueTag": "[if(equals(steps('resourceTagging').resourceTags.tagsCriticalityTag, 'Custom'), steps('resourceTagging').resourceTags.tagsCustomWorkloadCriticality, 'Low')]",
                "applicationNameTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsApplicationNameTag, 'no')]",
                "workloadSlaTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsWorkloadSlaTag, 'no')]",
                "opsTeamTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsOpsTeamTag, 'no')]",
                "ownerTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsOwnerTag, 'no')]",
                "costCenterTag": "[if(equals(steps('resourceTagging').resourceTaggingSelection, true), steps('resourceTagging').resourceTags.tagsCostCenterTag, 'no')]",
                "computeRgResourceGroupName": "[steps('basics').resourceScope.resourceGroup.name]",
                "computeSubscriptionId": "[steps('basics').resourceScope.subscription.subscriptionId]",
                "location": "[steps('sessionHosts').sessionHostsRegionSection.sessionHostsRegion]",
                "diskZeroTrust": "false",
                "diskEncryptionSetResourceId": ""
            },
            "kind": "ResourceGroup",
            "location": "[steps('basics').resourceScope.location.name]",
            "resourceGroupId": "[steps('basics').resourceScope.resourceGroup.id]"
        }
    }
>>>>>>> 7ca56ad5f22ac84dccacdc954686bb7c5c3bcf76
}